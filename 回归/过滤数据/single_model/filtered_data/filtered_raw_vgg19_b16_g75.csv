ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[32184] python3.8,"  393,    1,    1","  128,    1,    1","3,484",0.00,"1,103.88",1.63,"122,352",1.11,128,393,13.80,0,0,0.32,101.76,0,"3,010","4,228",0,"9,982","11,873",193,0,0,57,0,0.11,0,57,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[32184] python3.8," 6272,    1,    1","  128,    1,    1","833,876",0.61,"606,017.01",2.32,"95,535,104",1.36,128,"6,272",48.97,0.06,101.86,205.52,336.13,"850,167","1,605,632","2,470,592","1,943,948","6,422,528","7,951,407","469,768","1,525,309","451,832","452,816","6,333,507",3.64,50.87,"452,816","6,333,507"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"200704,    1,    1","   64,    1,    1","1,052,065",0.76,"752,792.94",2.43,"124,436,480",1.38,64,"200,704",43.62,0.21,270.70,205.52,270.43,"1,611,984","1,605,632","3,245,460","6,428,880","6,422,528","6,439,507","6,445,214","6,285","6,422,656","6,464,154","6,410,611",41.15,40.81,"6,464,154","6,410,611"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"200704,    1,    1","   64,    1,    1","1,025,962",0.77,"749,283.90",0.22,"11,239,424",1.34,64,"200,704",4.61,0.21,268.21,205.52,268.21,"1,605,632","1,605,632","3,235,257","6,422,528","6,422,528","6,424,637","6,466,148",0,"6,422,528","6,471,828","6,410,622",42.25,41.85,"6,471,828","6,410,622"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[32184] python3.8,"    2,   16,    1","   32,    4,    1","4,555",0.00,"1,093.26",0.61,"45,056",1.22,128,32,3.72,0.00,43.76,0.26,70.02,"2,139","2,048","5,231","5,120","8,192","10,585","4,842","1,026","4,608","4,716",0,6.85,0,"4,716",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[32184] python3.8,"   32,   28,   14","  256,    1,    1","7,866,864",5.75,"5,712,895.31",1.58,"614,254,592",1.36,256,"12,544",42.46,2.63,456.69,205.52,35.72,"27,648,000","3,211,264","30,987,438","82,124,800","6,422,528","75,764,420","19,342,736","69,390,224","18,817,868","19,138,967","6,381,639",16.29,5.43,"19,138,967","6,381,639"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"200704,    1,    1","   64,    1,    1","1,027,852",0.77,"753,676.85",2.43,"124,436,480",1.33,64,"200,704",44.64,0.21,266.80,205.52,266.54,"1,611,993","1,605,632","3,236,342","6,428,889","6,422,528","6,435,829","6,458,886","6,295","6,422,656","6,453,950","6,333,737",42.06,41.27,"6,453,950","6,333,737"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"200704,    1,    1","   64,    1,    1","1,022,642",0.75,"750,799.76",0.22,"11,239,424",1.36,64,"200,704",4.63,0.21,273.07,205.52,273.07,"1,605,632","1,605,632","3,227,968","6,422,528","6,422,528","6,424,573","6,449,326",0,"6,422,528","6,545,004","6,333,627",42.87,41.48,"6,545,004","6,333,627"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[32184] python3.8,"50176,    1,    1","  256,    1,    1","919,738",0.68,"664,533.53",1.84,"83,091,456",1.36,256,"50,176",33.31,0.22,326.79,154.14,227.68,"1,729,911","1,204,224","2,959,740","6,919,644","4,816,896","5,321,403","6,456,345","496,592","6,422,528","6,453,861","4,806,919",47.00,35.01,"6,453,861","4,806,919"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   49,   64,    1","  256,    1,    1","504,056",0.37,"366,595.24",0.63,"15,705,088",1.35,256,"3,136",14.54,0.12,309.80,115.61,309.70,"2,032,923","903,168","2,949,402","3,613,284","3,612,672","6,149,912","1,632,931","2,531,674","1,610,744","1,741,145","3,598,554",23.14,47.82,"1,741,145","3,598,554"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    2,   16,    1","   32,    8,    1","6,437",0.01,"1,820.25",0.63,"78,336",1.14,256,32,7.63,0.00,52.66,1.18,210.65,"2,304","9,216","12,899","9,216","36,864","38,482","9,412",0,"9,216","9,348",0,9.76,0,"9,348",0
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[32184] python3.8,"   98,    1,   36","  256,    1,    1","1,504,007",1.10,"1,090,517.47",2.11,"156,360,960",1.36,256,"3,528",57.77,0.23,208.44,231.21,209.78,"4,469,321","1,806,336","6,298,926","7,178,826","7,225,344","10,774,545","3,660,717","3,548,393","3,649,556","3,728,857","7,136,620",16.61,31.78,"3,728,857","7,136,620"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   49,  128,    1","  256,    1,    1","825,994",0.60,"595,040.87",0.80,"32,363,520",1.37,256,"6,272",14.46,0.23,383.53,102.76,170.46,"1,806,336","1,605,632","3,422,215","7,225,344","3,211,264","3,213,344","7,258,333",0,"7,225,344","7,257,361","3,136,301",58.84,25.43,"7,257,361","3,136,301"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"100352,    1,    1","   64,    1,    1","518,456",0.38,"376,631.88",2.43,"62,218,240",1.36,64,"100,352",44.27,0.10,270.40,102.76,269.40,"814,680","802,816","1,630,270","3,223,138","3,211,264","3,225,446","3,220,946","11,804","3,211,296","3,235,232","3,199,975",41.80,41.34,"3,235,232","3,199,975"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"100352,    1,    1","   64,    1,    1","525,287",0.38,"370,961.96",0.22,"5,619,712",1.39,64,"100,352",4.50,0.10,271.59,102.76,271.59,"802,816","802,816","1,615,085","3,211,264","3,211,264","3,213,486","3,222,564",0,"3,211,264","3,341,898","3,196,729",42.61,40.76,"3,341,898","3,196,729"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   49,  128,    1","  256,    1,    1","1,013,228",0.74,"729,364.15",0.63,"31,410,176",1.36,256,"6,272",14.47,0.23,312.22,231.21,312.19,"4,066,665","1,806,336","5,898,674","7,228,607","7,225,344","12,290,822","3,274,489","5,065,562","3,230,802","3,254,351","7,207,281",21.51,47.64,"3,254,351","7,207,281"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    4,   16,    1","   32,    8,    1","10,952",0.01,"3,795.84",0.61,"156,672",1.56,256,64,8.99,0.00,84.55,2.36,338.20,"4,608","18,432","26,182","18,432","73,728","79,579","18,976",0,"18,432","18,964","55,545",11.59,33.96,"18,964","55,545"
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[32184] python3.8,"   98,    1,   36","  256,    1,    1","2,686,709",1.97,"1,954,670.12",2.17,"287,997,696",1.36,256,"3,528",64.12,0.46,234.47,231.21,117.38,"9,014,295","1,806,336","10,854,862","14,433,303","7,225,344","14,400,406","7,502,045","7,170,111","7,300,716","7,453,227","7,137,077",18.58,17.79,"7,453,227","7,137,077"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   49,  128,    1","  256,    1,    1","820,302",0.60,"594,216.82",0.80,"32,363,520",1.35,256,"6,272",14.55,0.23,382.31,102.76,169.92,"1,806,336","1,605,632","3,420,559","7,225,344","3,211,264","3,217,721","7,225,919",0,"7,225,344","7,448,855","3,210,401",60.82,26.21,"7,448,855","3,210,401"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"100352,    1,    1","   64,    1,    1","519,959",0.38,"378,985.24",2.41,"62,218,240",1.36,64,"100,352",44.15,0.10,269.96,102.76,268.97,"814,698","802,816","1,633,018","3,223,148","3,211,264","3,232,296","3,369,910","12,027","3,211,296","3,225,992","3,199,323",41.56,41.21,"3,225,992","3,199,323"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"100352,    1,    1","   64,    1,    1","517,179",0.38,"372,662.44",0.22,"5,619,712",1.37,64,"100,352",4.57,0.10,271.86,102.76,271.86,"802,816","802,816","1,614,310","3,211,264","3,211,264","3,213,413","3,225,220",0,"3,211,264","3,221,446","3,122,290",41.72,40.44,"3,221,446","3,122,290"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[32184] python3.8,"25088,    1,    1","  256,    1,    1","456,051",0.34,"328,118.79",1.86,"41,545,728",1.36,256,"25,088",33.61,0.11,319.70,77.07,229.95,"1,104,045","602,112","1,716,560","3,352,882","2,408,448","2,552,105","3,222,889","139,694","3,211,264","3,232,227","2,400,501",47.47,35.26,"3,232,227","2,400,501"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   16,  128,    1","  256,    1,    1","260,623",0.19,"177,292.01",0.76,"9,196,544",1.37,256,"2,048",16.03,0.06,303.41,57.80,305.07,"967,503","451,584","1,426,365","1,795,996","1,806,336","2,993,753","874,877","1,183,200","804,464","814,743","1,791,052",20.94,46.03,"814,743","1,791,052"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    4,   32,    1","   32,    8,    1","15,556",0.01,"7,331.49",0.63,"313,344",1.15,256,128,12.70,0.00,88.19,4.72,352.77,"9,216","36,864","47,768","36,864","147,456","152,387","38,814",0,"36,864","37,856","117,283",16.29,50.46,"37,856","117,283"
24,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"   25,    4,   36","  128,    1,    1","1,360,621",1.00,"984,195.32",2.23,"149,443,200",1.36,128,"3,600",64.66,0.35,349.97,115.61,116.16,"5,464,893","903,168","6,385,395","10,883,940","3,612,672","12,613,199","1,994,685","8,995,572","1,961,608","2,016,613","3,601,953",9.93,17.73,"2,016,613","3,601,953"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","415,373",0.31,"299,422.31",0.97,"19,781,120",1.35,256,"4,096",17.59,0.12,378.05,51.38,168.02,"903,168","1,089,536","1,999,626","3,612,672","1,605,632","1,608,985","3,623,735",0,"3,612,672","3,613,639","1,603,568",58.27,25.86,"3,613,639","1,603,568"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","263,483",0.20,"187,820",2.44,"31,109,120",1.32,64,"50,176",43.63,0.05,260.65,51.38,258.68,"413,297","401,408","848,097","1,617,611","1,605,632","1,629,362","1,609,432","11,916","1,605,664","1,618,810","1,589,172",41.16,40.40,"1,618,810","1,589,172"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","258,557",0.19,"187,141.53",0.22,"2,809,856",1.36,64,"50,176",4.57,0.05,270.40,51.38,270.40,"401,408","401,408","835,028","1,605,632","1,605,632","1,608,213","1,631,766",0,"1,605,632","1,612,106","1,592,325",41.76,41.25,"1,612,106","1,592,325"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","505,390",0.37,"365,128.46",0.74,"18,393,088",1.36,256,"4,096",16.53,0.12,310.05,115.61,311.25,"1,937,965","903,168","2,849,939","3,598,324","3,612,672","5,989,283","1,632,765","2,373,201","1,608,290","1,631,693","3,597,324",21.63,47.68,"1,631,693","3,597,324"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    8,   32,    1","   32,    8,    1","42,449",0.03,"18,643.51",0.49,"626,688",1.35,256,256,9.27,0.00,75.62,9.44,302.47,"18,432","73,728","94,624","73,728","294,912","301,690","76,212",0,"73,728","75,764","273,544",11.96,43.17,"75,764","273,544"
30,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"   25,    4,   36","  128,    1,    1","2,579,749",1.90,"1,872,547.03",2.25,"286,070,400",1.36,128,"3,600",67.76,0.70,368.02,115.61,60.99,"10,959,338","903,168","11,934,535","21,797,385","3,612,672","20,709,939","4,777,021","17,209,704","4,567,332","4,823,569","3,605,364",12.52,9.36,"4,823,569","3,605,364"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","416,672",0.31,"300,386.49",0.97,"19,781,120",1.36,256,"4,096",17.51,0.12,378.09,51.38,168.04,"903,168","1,089,536","2,003,419","3,612,672","1,605,632","1,607,806","3,728,997",0,"3,612,672","3,620,673","1,604,295",58.21,25.79,"3,620,673","1,604,295"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","263,325",0.19,"189,770.91",2.41,"31,109,120",1.35,64,"50,176",43.64,0.05,266.69,51.38,264.61,"413,534","401,408","823,503","1,617,824","1,605,632","1,625,011","1,614,586","12,612","1,605,664","1,613,456","1,592,142",41.05,40.51,"1,613,456","1,592,142"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","259,254",0.20,"182,269.60",0.23,"2,809,856",1.30,64,"50,176",4.56,0.05,257.93,51.38,257.93,"401,408","401,408","806,651","1,605,632","1,605,632","1,609,121","1,606,422",0,"1,605,632","1,606,220","1,515,387",41.50,39.16,"1,606,220","1,515,387"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","492,003",0.37,"364,599.59",0.74,"18,393,088",1.34,256,"4,096",16.97,0.12,314.28,115.61,315.49,"1,937,800","903,168","2,854,165","3,598,790","3,612,672","5,993,595","1,635,037","2,373,859","1,607,194","1,608,511","3,519,626",21.90,47.92,"1,608,511","3,519,626"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    8,   32,    1","   32,    8,    1","40,625",0.03,"18,572.24",0.50,"626,688",1.30,256,256,9.69,0.00,75.85,9.44,303.41,"18,432","73,728","94,489","73,728","294,912","301,690","75,616",0,"73,728","74,764","266,696",12.33,43.99,"74,764","266,696"
36,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"   25,    4,   36","  128,    1,    1","2,583,102",1.90,"1,872,233.56",2.25,"286,070,400",1.36,128,"3,600",67.74,0.70,367.95,115.61,60.98,"10,958,497","903,168","11,893,157","21,796,584","3,612,672","21,123,905","4,659,389","17,010,252","4,547,820","4,791,611","3,528,356",12.42,9.15,"4,791,611","3,528,356"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","416,474",0.31,"297,028.62",0.98,"19,781,120",1.35,256,"4,096",17.54,0.12,375.93,51.38,167.08,"903,168","1,089,536","2,021,681","3,612,672","1,605,632","1,609,486","3,623,201",0,"3,612,672","3,628,011","1,605,635",58.35,25.82,"3,628,011","1,605,635"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","262,083",0.19,"189,771.34",2.41,"31,109,120",1.35,64,"50,176",43.86,0.05,267.07,51.38,265.04,"413,492","401,408","822,452","1,617,788","1,605,632","1,628,209","1,615,040","12,200","1,605,664","1,615,200","1,592,945",41.28,40.71,"1,615,200","1,592,945"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","257,697",0.19,"182,628.50",0.23,"2,809,856",1.35,64,"50,176",4.59,0.05,270.04,51.38,270.04,"401,408","401,408","808,306","1,605,632","1,605,632","1,608,214","1,614,980",0,"1,605,632","1,609,724","1,590,668",41.84,41.34,"1,609,724","1,590,668"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","536,456",0.37,"363,745.87",0.74,"18,393,088",1.45,256,"4,096",15.57,0.12,313.33,115.61,314.69,"1,937,955","903,168","2,851,079","3,597,813","3,612,672","5,989,393","1,620,641","2,375,471","1,607,228","1,626,285","3,521,699",20.31,43.97,"1,626,285","3,521,699"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    8,   32,    1","   32,    8,    1","41,216",0.03,"18,520",0.50,"626,688",1.34,256,256,9.55,0.00,77.28,9.44,309.13,"18,432","73,728","93,684","73,728","294,912","299,446","74,492",0,"73,728","74,688","195,910",12.14,31.83,"74,688","195,910"
42,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"   25,    4,   36","  128,    1,    1","2,583,760",1.90,"1,871,827.79",2.25,"286,070,400",1.36,128,"3,600",67.71,0.70,367.69,115.61,60.94,"10,960,197","903,168","11,905,901","21,798,218","3,612,672","20,774,344","4,890,785","17,334,190","4,663,684","4,663,825","3,528,017",12.09,9.15,"4,663,825","3,528,017"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"   16,  256,    1","  256,    1,    1","408,445",0.31,"296,900.25",0.98,"19,781,120",1.33,256,"4,096",17.86,0.12,377.11,51.38,167.60,"903,168","1,089,536","1,998,834","3,612,672","1,605,632","1,609,329","3,625,449",0,"3,612,672","3,624,795","1,528,500",59.43,25.06,"3,624,795","1,528,500"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","263,758",0.19,"187,800.22",2.44,"31,109,120",1.35,64,"50,176",43.61,0.05,267.02,51.38,265.00,"413,766","401,408","850,147","1,618,069","1,605,632","1,626,876","1,622,246","11,857","1,605,664","1,615,656","1,593,658",41.03,40.47,"1,615,656","1,593,658"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"50176,    1,    1","   64,    1,    1","259,597",0.19,"182,651",0.23,"2,809,856",1.38,64,"50,176",4.56,0.05,273.07,51.38,273.07,"401,408","401,408","820,184","1,605,632","1,605,632","1,607,322","1,612,170",0,"1,605,632","1,611,846","1,516,604",41.59,39.13,"1,611,846","1,516,604"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[32184] python3.8,"12544,    1,    1","  256,    1,    1","232,182",0.17,"163,537.82",1.87,"20,772,864",1.36,256,"12,544",33.06,0.05,311.00,38.54,227.51,"706,981","301,056","1,010,764","1,643,401","1,204,224","1,432,480","1,617,525","223,988","1,605,632","1,611,495","1,193,609",46.50,34.44,"1,611,495","1,193,609"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    4,  256,    1","  256,    1,    1","137,327",0.11,"93,928.99",0.76,"4,845,568",1.28,256,"1,024",16.26,0.02,211.39,28.90,270.73,"296,884","328,851","634,163","705,421","903,168","1,309,747","406,677","400,769","401,858","404,781","820,024",19.74,40.00,"404,781","820,024"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"    8,   64,    1","   32,    8,    1","77,588",0.05,"42,762.60",0.43,"1,253,376",1.44,256,512,10.13,0.00,87.98,18.87,351.92,"36,864","147,456","186,370","147,456","589,824","591,470","150,768",0,"147,456","149,300","564,083",12.89,48.68,"149,300","564,083"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    7,    8,   36","  128,    1,    1","1,450,936",1.07,"1,048,037.72",2.25,"160,199,424",1.36,128,"2,016",67.48,0.36,340.30,57.80,54.23,"6,240,879","559,862","6,889,305","11,334,519","1,806,336","11,932,725","1,549,333","10,122,989","1,508,322","1,543,041","1,719,792",7.12,7.94,"1,543,041","1,719,792"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","205,360",0.15,"147,190.85",1.00,"10,057,216",1.33,256,"2,048",18.12,0.06,375.23,33.03,214.41,"690,134","486,075","1,182,514","1,806,336","1,032,192","1,034,213","1,817,875",0,"1,806,336","1,812,809","803,732",59.10,26.20,"1,812,809","803,732"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","132,194",0.10,"93,842.44",2.44,"15,554,560",1.34,64,"25,088",43.55,0.03,263.90,25.69,261.33,"208,679","200,704","414,212","810,868","802,816","812,344","805,538","7,866","802,880","811,252","788,468",41.10,39.95,"811,252","788,468"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","130,721",0.10,"88,303.69",0.23,"1,404,928",1.36,64,"25,088",4.52,0.03,268.05,25.69,268.05,"200,704","200,704","405,982","802,816","802,816","804,427","805,996",0,"802,816","804,188","790,863",41.22,40.54,"804,188","790,863"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","254,816",0.19,"179,353.46",0.79,"9,691,136",1.31,256,"2,048",17.52,0.05,234.63,57.80,297.73,"597,508","659,649","1,260,933","1,423,939","1,806,336","2,625,582","811,489","817,536","804,364","860,983","1,723,595",22.63,45.31,"860,983","1,723,595"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","137,074",0.11,"96,850.91",0.38,"2,506,752",1.29,256,"1,024",11.47,0.01,89.12,37.75,356.50,"73,728","294,912","378,516","294,912","1,179,648","1,181,660","299,708",0,"294,912","310,414","1,083,256",15.17,52.93,"310,414","1,083,256"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    7,    8,   36","  128,    1,    1","2,820,587",2.07,"2,038,438.25",2.26,"313,221,888",1.36,128,"2,016",69.28,0.73,350.82,57.80,27.93,"12,474,098","560,356","13,180,427","22,689,509","1,806,336","21,781,224","3,551,795","19,984,302","3,401,466","3,506,441","1,726,421",8.33,4.10,"3,506,441","1,726,421"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","207,677",0.16,"149,087.85",0.99,"10,057,216",1.30,256,"2,048",17.85,0.06,361.34,33.03,206.48,"690,717","485,917","1,182,127","1,806,336","1,032,192","1,035,536","1,813,915",0,"1,806,336","1,809,603","727,888",58.35,23.47,"1,809,603","727,888"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","131,054",0.10,"94,083.85",2.43,"15,554,560",1.33,64,"25,088",43.84,0.03,264.65,25.69,262.10,"208,406","200,704","411,247","810,575","802,816","812,801","805,942","7,863","802,880","805,508","713,923",41.16,36.48,"805,508","713,923"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","128,989",0.09,"88,216.25",0.23,"1,404,928",1.38,64,"25,088",4.58,0.03,275.88,25.69,275.88,"200,704","200,704","404,534","802,816","802,816","804,845","806,900",0,"802,816","807,292","790,546",41.92,41.05,"807,292","790,546"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","257,538",0.19,"179,343.24",0.79,"9,691,136",1.37,256,"2,048",17.28,0.05,243.05,57.80,308.09,"598,035","659,850","1,265,652","1,425,058","1,806,336","2,625,983","807,811","818,741","803,856","812,175","1,722,584",21.13,44.81,"812,175","1,722,584"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","136,363",0.10,"95,427.34",0.39,"2,506,752",1.30,256,"1,024",11.51,0.01,90.10,37.75,360.42,"73,728","294,912","371,406","294,912","1,179,648","1,181,661","298,772",0,"294,912","296,444","1,157,858",14.56,56.88,"296,444","1,157,858"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    7,    8,   36","  128,    1,    1","2,821,445",2.07,"2,039,409.53",2.26,"313,221,888",1.36,128,"2,016",69.11,0.73,350.81,57.80,27.93,"12,473,784","560,560","13,087,938","22,689,729","1,806,336","21,465,007","3,789,369","19,681,656","3,694,662","3,748,443","1,726,575",8.90,4.10,"3,748,443","1,726,575"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","205,445",0.15,"147,191.38",1.00,"10,057,216",1.33,256,"2,048",18.05,0.06,375.77,33.03,214.73,"690,071","485,797","1,184,931","1,806,336","1,032,192","1,034,218","1,811,513",0,"1,806,336","1,808,507","728,651",58.94,23.75,"1,808,507","728,651"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","131,264",0.10,"93,958.76",2.43,"15,554,560",1.31,64,"25,088",43.77,0.03,259.70,25.69,257.23,"208,442","200,704","410,700","810,615","802,816","812,618","813,186","7,934","802,880","813,114","714,179",41.49,36.44,"813,114","714,179"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","122,658",0.10,"88,438.40",0.23,"1,404,928",1.28,64,"25,088",4.82,0.03,267.61,25.69,267.61,"200,704","200,704","406,536","802,816","802,816","805,011","806,804",0,"802,816","808,470","713,820",44.15,38.98,"808,470","713,820"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","258,217",0.19,"179,116.28",0.80,"9,691,136",1.37,256,"2,048",17.24,0.05,242.61,57.80,307.72,"597,286","660,544","1,288,891","1,423,609","1,806,336","2,627,784","804,899","818,160","804,414","810,065","1,722,778",21.01,44.69,"810,065","1,722,778"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","135,612",0.11,"95,779.57",0.38,"2,506,752",1.27,256,"1,024",11.57,0.01,88.78,37.75,355.10,"73,728","294,912","370,452","294,912","1,179,648","1,183,944","299,934",0,"294,912","302,810","1,081,963",14.95,53.43,"302,810","1,081,963"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    7,    8,   36","  128,    1,    1","2,821,255",2.07,"2,038,930.69",2.26,"313,221,888",1.36,128,"2,016",69.10,0.73,350.90,57.80,27.94,"12,474,376","560,826","13,092,835","22,690,252","1,806,336","21,579,883","3,811,406","19,663,194","3,613,104","3,661,301","1,725,434",8.69,4.10,"3,661,301","1,725,434"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    4,  512,    1","  256,    1,    1","207,421",0.16,"148,348.75",1.00,"10,057,216",1.33,256,"2,048",17.87,0.06,370.00,33.03,211.43,"689,753","485,764","1,178,206","1,806,336","1,032,192","1,037,473","1,827,015",0,"1,806,336","1,814,417","728,188",58.57,23.50,"1,814,417","728,188"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","130,721",0.10,"93,794.60",2.44,"15,554,560",1.31,64,"25,088",43.94,0.03,261.24,25.69,258.72,"208,561","200,704","414,242","810,747","802,816","812,502","807,632","7,811","802,880","838,266","712,852",42.95,36.52,"838,266","712,852"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"25088,    1,    1","   64,    1,    1","122,749",0.09,"88,540.37",0.23,"1,404,928",1.31,64,"25,088",4.81,0.03,274.47,25.69,274.47,"200,704","200,704","406,699","802,816","802,816","804,511","805,902",0,"802,816","810,216","713,879",44.21,38.95,"810,216","713,879"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[32184] python3.8," 6272,    1,    1","  256,    1,    1","113,477",0.09,"81,118.62",1.88,"10,386,432",1.28,256,"6,272",33.76,0.03,298.49,19.27,218.08,"432,426","150,528","586,699","825,076","602,112","771,800","805,709","167,881","802,816","803,276","518,505",47.41,30.60,"803,276","518,505"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","76,165",0.06,"53,300.63",0.71,"2,564,096",1.22,256,512,15.71,0.01,105.30,18.87,303.25,"85,031","147,456","232,683","204,788","589,824","618,294","203,929","25,275","200,710","222,021","499,901",19.53,43.98,"222,021","499,901"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","140,771",0.11,"98,445.09",0.37,"2,506,752",1.32,256,"1,024",11.15,0.01,88.62,37.75,354.46,"73,728","294,912","374,462","294,912","1,179,648","1,181,660","295,058",0,"294,912","296,496","1,080,224",14.11,51.40,"296,496","1,080,224"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    2,    8,   36","  128,    1,    1","837,096",0.61,"589,382.06",2.23,"89,491,968",1.36,128,576,66.58,0.23,367.12,18.87,30.72,"3,508,675","147,456","3,663,166","7,047,667","589,824","6,222,949","2,173,129","5,630,213","2,144,214","2,145,387","516,680",17.16,4.13,"2,145,387","516,680"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","61,602",0.05,"42,272.82",0.89,"2,560,000",1.24,256,512,15.40,0.02,383.00,7.33,148.80,"147,456","99,919","251,037","589,824","229,091","231,076","590,973",0,"589,824","591,479","129,420",64.30,14.07,"591,479","129,420"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","34,352",0.03,"22,939.62",2.49,"3,888,640",1.18,64,"6,272",42.31,0.01,227.59,6.42,224.25,"53,089","50,176","104,876","203,669","200,704","213,115","203,968","2,901","200,768","202,388","111,960",39.45,21.82,"202,388","111,960"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","26,538",0.02,"17,511.54",0.29,"351,232",1.16,64,"6,272",5.58,0.01,282.28,6.42,282.28,"50,176","50,176","101,866","200,704","200,704","202,359","201,604",0,"200,704","201,966","189,166",50.96,47.73,"201,966","189,166"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","78,614",0.06,"52,003.40",0.73,"2,564,096",1.34,256,512,15.21,0.01,111.63,18.87,321.61,"84,175","147,456","234,238","204,716","589,824","618,179","204,121","27,192","200,726","224,709","499,458",19.14,42.55,"224,709","499,458"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","155,407",0.11,"96,988.37",0.38,"2,506,752",1.45,256,"1,024",10.09,0.01,87.85,37.75,351.40,"73,728","294,912","371,142","294,912","1,179,648","1,181,310","300,148",0,"294,912","298,630","1,079,418",12.87,46.51,"298,630","1,079,418"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    2,    8,   36","  128,    1,    1","837,057",0.62,"589,395.37",2.23,"89,491,968",1.36,128,576,66.58,0.23,366.26,18.87,30.64,"3,509,402","147,456","3,659,819","7,048,387","589,824","6,224,475","2,172,021","5,627,881","2,139,774","2,189,227","516,592",17.52,4.13,"2,189,227","516,592"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","69,957",0.05,"42,276.40",0.89,"2,560,000",1.38,256,512,13.54,0.02,374.49,7.33,145.49,"147,456","100,049","250,465","589,824","229,126","230,831","589,913",0,"589,824","589,865","131,649",56.50,12.61,"589,865","131,649"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","34,533",0.03,"22,981.88",2.49,"3,888,640",1.24,64,"6,272",42.11,0.01,237.67,6.42,234.19,"53,049","50,176","105,290","203,619","200,704","205,430","201,640","2,958","200,768","201,498","111,848",39.06,21.68,"201,498","111,848"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","34,075",0.03,"17,249.15",0.30,"351,232",1.32,64,"6,272",4.34,0.01,248.40,6.42,248.40,"50,176","50,176","101,962","200,704","200,704","202,375","201,708",0,"200,704","201,996","110,707",39.69,21.75,"201,996","110,707"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","74,472",0.06,"51,700.43",0.73,"2,564,096",1.26,256,512,16.06,0.01,110.86,18.87,319.17,"84,029","147,456","233,553","204,934","589,824","617,705","202,057","26,086","200,708","204,425","498,849",18.38,44.86,"204,425","498,849"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","141,199",0.11,"96,996",0.38,"2,506,752",1.32,256,"1,024",11.11,0.01,88.22,37.75,352.87,"73,728","294,912","372,448","294,912","1,179,648","1,181,668","303,734",0,"294,912","299,664","1,080,519",14.21,51.24,"299,664","1,080,519"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    2,    8,   36","  128,    1,    1","837,428",0.62,"589,601.90",2.23,"89,491,968",1.36,128,576,66.54,0.23,366.28,18.87,30.65,"3,510,653","147,456","3,735,516","7,049,624","589,824","6,220,224","2,143,417","5,628,433","2,145,626","2,141,919","587,041",17.13,4.69,"2,141,919","587,041"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","67,716",0.05,"42,192.41",0.89,"2,560,000",1.37,256,512,13.99,0.02,383.75,7.33,149.08,"147,456","99,948","248,684","589,824","229,083","230,783","591,923",0,"589,824","597,861","129,245",59.15,12.79,"597,861","129,245"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","36,433",0.03,"23,051",2.48,"3,888,640",1.33,64,"6,272",39.77,0.01,240.13,6.42,236.68,"53,121","50,176","105,168","203,698","200,704","205,458","201,120","2,865","200,768","202,104","111,868",37.17,20.57,"202,104","111,868"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","26,314",0.02,"17,474.53",0.30,"351,232",1.15,64,"6,272",5.63,0.01,282.68,6.42,282.68,"50,176","50,176","102,394","200,704","200,704","202,871","201,412",0,"200,704","201,308","111,612",51.23,28.40,"201,308","111,612"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","79,807",0.06,"51,613.53",0.73,"2,564,096",1.37,256,512,14.98,0.01,112.81,18.87,324.97,"84,323","147,456","239,516","204,736","589,824","620,086","210,641","26,568","200,716","201,003","497,990",16.87,41.79,"201,003","497,990"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[32184] python3.8,"   16,   64,    1","   32,    8,    1","141,612",0.11,"97,519.97",0.38,"2,506,752",1.33,256,"1,024",11.08,0.01,88.72,37.75,354.89,"73,728","294,912","371,686","294,912","1,179,648","1,181,660","298,062",0,"294,912","296,152","1,079,967",14.00,51.06,"296,152","1,079,967"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[32184] python3.8,"    2,    8,   36","  128,    1,    1","837,778",0.62,"589,367.09",2.23,"89,491,968",1.36,128,576,66.50,0.23,366.63,18.87,30.68,"3,510,195","147,456","3,679,806","7,049,161","589,824","6,223,984","2,164,207","5,629,800","2,142,770","2,161,435","517,473",17.28,4.14,"2,161,435","517,473"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[32184] python3.8,"    1,  512,    1","  256,    1,    1","69,483",0.05,"42,541.44",0.88,"2,560,000",1.38,256,512,13.64,0.02,377.37,7.33,146.57,"147,456","99,893","249,971","589,824","229,138","230,747","591,745",0,"589,824","591,523","132,007",57.05,12.73,"591,523","132,007"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","36,424",0.03,"23,057",2.48,"3,888,640",1.35,64,"6,272",39.79,0.01,243.90,6.42,240.36,"53,031","50,176","106,658","203,604","200,704","205,362","202,056","2,950","200,768","201,098","111,719",37.00,20.56,"201,098","111,719"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8," 6272,    1,    1","   64,    1,    1","26,288",0.02,"17,424.09",0.30,"351,232",1.15,64,"6,272",5.64,0.01,281.49,6.42,281.49,"50,176","50,176","101,816","200,704","200,704","202,391","201,812",0,"200,704","203,134","111,043",51.83,28.33,"203,134","111,043"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[32184] python3.8," 1568,    1,    1","  256,    1,    1","30,673",0.03,"19,716.51",1.94,"2,596,608",1.21,256,"1,568",31.45,0.01,265.61,4.82,191.76,"110,457","37,632","148,758","208,738","150,528","218,537","201,613","66,272","200,704","202,431","145,574",44.23,31.80,"202,431","145,574"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[32184] python3.8," 8192,    1,    1","   32,    8,    1","151,611",0.11,"109,406.65",2.70,"20,052,924",1.36,256,"8,192",49.10,0.00,16.33,3.04,27.25,"44,368","58,724","104,470","56,991","94,871","123,087","50,632","23,831","50,176","53,676",0,2.37,0,"53,676",0
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"  256,    1,    1","   64,    1,    1","4,784",0.00,"1,902.01",0.86,"110,592",1.00,64,256,8.97,0.00,50.56,0.26,54.61,"1,896","2,048","4,834","7,584","8,192","16,584",707,"7,072",512,669,0,0.93,0,669,0
99,volta_sgemm_64x32_sliced1x4_tn,volta_sgemm_64x32_sliced1x4_tn,[32184] python3.8,"   64,    1,   10","  256,    1,    1","1,973,180",1.45,"1,422,372.71",1.47,"141,702,740",1.36,256,640,38.79,0.60,415.97,2.64,1.82,"7,570,171","21,120","7,647,602","18,902,040","82,560","7,574,322","13,139,737","7,459,964","13,087,688","13,138,731","74,891",44.60,0.25,"13,138,731","74,891"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"  256,    1,    1","   64,    1,    1","3,899",0.00,"1,317.88",0.16,"14,336",1.16,64,256,1.55,0.00,78.02,0.26,78.02,"2,048","2,048","4,672","8,192","8,192","9,127","8,404",0,"8,192","8,268",0,14.17,0,"8,268",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[32184] python3.8,"  200,    1,    1","  256,    1,    1","5,177",0.00,"1,877.54",1.38,"176,576",1.21,256,200,12.94,0.00,61.59,0.33,76.99,"2,048","2,560","5,900","8,192","10,240","12,659","8,616",0,"8,192","11,348",0,14.58,0,"11,348",0
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"  256,    1,    1","   64,    1,    1","4,803",0.01,"1,947.90",0.83,"110,592",0.76,64,256,8.93,0.00,38.30,0.26,41.37,"1,896","2,048","4,810","7,584","8,192","16,522","1,411","7,072",512,"1,499",572,2.08,0.80,"1,499",572
103,volta_sgemm_64x32_sliced1x4_tn,volta_sgemm_64x32_sliced1x4_tn,[32184] python3.8,"   64,    1,    3","  256,    1,    1","337,628",0.25,"229,422.16",1.52,"23,681,874",1.36,256,192,37.15,0.10,385.28,0.79,3.20,"1,110,516","6,336","1,128,590","2,983,242","24,768","1,053,438","2,155,613","1,017,534","2,145,000","2,162,457","94,415",42.90,1.87,"2,162,457","94,415"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[32184] python3.8,"  256,    1,    1","   64,    1,    1","4,076",0.00,"1,334.88",0.16,"14,336",1.22,64,256,1.48,0.00,78.77,0.26,78.77,"2,048","2,048","4,760","8,192","8,192","9,119","8,396",0,"8,192","8,442",110,13.80,0.18,"8,442",110
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[32184] python3.8,"  200,    1,    1","  256,    1,    1","5,078",0.00,"1,790.68",1.45,"176,576",1.20,256,200,13.19,0.00,62.06,0.33,77.58,"2,048","2,560","5,574","8,192","10,240","11,622","8,486",0,"8,192","8,650",0,11.45,0,"8,650",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[32184] python3.8,"   63,    1,    1","   64,    1,    1","4,255",0.00,"1,710.24",0.23,"27,030",0.98,64,63,2.47,0.00,14.19,0.06,14.81,723,500,"1,781","1,916","2,000","4,685",201,"1,801",126,129,0,0.20,0,129,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[32184] python3.8,"    8,    1,    6","  256,    1,    1","79,059",0.06,"51,798.49",1.64,"5,766,144",1.29,256,48,40.89,0.02,364.90,0.38,6.31,"268,464","4,261","280,838","694,361","12,000","250,681","534,801","233,109","530,352","530,423","1,093",44.94,0.09,"530,423","1,093"
108,splitKreduce_kernel,"void splitKreduce_kernel<float, float, float>(cublasSplitKParams<T3>, const T1 *, const T2 *, T2 *, const T3 *, const T3 *)",[32184] python3.8,"  125,    1,    1","  128,    1,    1","5,577",0.01,"2,576.15",0.37,"65,500",0.88,128,125,4.75,0.00,70.71,0.06,10.10,"3,500",500,"5,100","14,000","2,000","4,288","14,003",0,"14,000","14,085",0,16.93,0,"14,085",0
