ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[15482] python3.8,"  393,    1,    1","  128,    1,    1","5,062",0.00,718.22,2.51,"122,352",1.32,128,393,9.10,0,0,0.33,85.61,0,"3,182","4,383",0,"10,289","11,691",153,0,0,97,0,0.13,0,97,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[15482] python3.8," 6272,    1,    1","  128,    1,    1","2,552,797",1.87,"599,590.04",2.34,"95,535,104",1.36,128,"6,272",15.90,0.06,33.41,205.52,109.85,"854,529","1,605,632","2,494,808","1,954,911","6,422,528","7,960,143","726,944","1,534,910","451,832","555,168","6,333,962",1.46,16.62,"555,168","6,333,962"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"200704,    1,    1","   64,    1,    1","2,825,498",2.07,"664,100.41",2.76,"124,436,480",1.37,64,"200,704",16.19,0.21,99.33,205.52,99.30,"1,607,684","1,605,632","3,361,703","6,424,580","6,422,528","6,432,275","6,579,011","1,988","6,422,656","6,490,584","6,406,644",15.39,15.19,"6,490,584","6,406,644"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"200704,    1,    1","   64,    1,    1","1,216,586",0.89,"284,171.07",0.58,"11,239,424",1.36,64,"200,704",3.88,0.21,230.14,205.52,230.14,"1,605,632","1,605,632","3,230,903","6,422,528","6,422,528","6,423,798","6,455,124",0,"6,422,528","6,458,924","6,334,386",35.56,34.87,"6,458,924","6,334,386"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[15482] python3.8,"    2,   16,    1","   32,    4,    1","5,160",0.01,759.93,0.87,"45,056",0.96,128,32,3.29,0.00,30.66,0.26,49.05,"2,152","2,048","6,095","5,120","8,192","10,170","4,860","1,333","4,608","4,884",0,6.34,0,"4,884",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[15482] python3.8,"   32,   28,   14","  256,    1,    1","24,514,981",17.93,"5,740,419.12",1.57,"614,254,592",1.37,256,"12,544",13.60,2.63,146.61,205.52,11.47,"27,648,000","3,211,264","31,361,707","82,124,800","6,422,528","75,931,779","19,702,756","69,503,563","18,695,356","19,679,407","6,385,470",5.38,1.74,"19,679,407","6,385,470"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"200704,    1,    1","   64,    1,    1","2,823,922",2.07,"664,162.82",2.76,"124,436,480",1.36,64,"200,704",16.20,0.21,99.31,205.52,99.28,"1,607,681","1,605,632","3,250,075","6,424,577","6,422,528","6,430,777","6,525,166","1,988","6,422,656","6,528,276","6,334,432",15.48,15.02,"6,528,276","6,334,432"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"200704,    1,    1","   64,    1,    1","1,211,600",0.89,"284,932.35",0.58,"11,239,424",1.36,64,"200,704",3.90,0.21,231.04,205.52,231.04,"1,605,632","1,605,632","3,221,916","6,422,528","6,422,528","6,424,140","6,521,058",0,"6,422,528","6,464,896","6,406,478",35.74,35.42,"6,464,896","6,406,478"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[15482] python3.8,"50176,    1,    1","  256,    1,    1","2,360,703",1.73,"554,638.65",2.20,"83,091,456",1.36,256,"50,176",12.94,0.22,125.45,154.14,88.95,"1,697,629","1,204,224","2,940,963","6,790,516","4,816,896","5,184,361","6,500,285","366,688","6,422,528","6,497,820","4,739,465",18.44,13.45,"6,497,820","4,739,465"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   49,   64,    1","  256,    1,    1","926,337",0.69,"216,900.47",1.06,"15,705,088",1.35,256,"3,136",7.89,0.12,169.26,115.61,168.75,"2,024,403","903,168","2,943,985","3,624,148","3,612,672","6,162,428","1,633,791","2,548,481","1,605,632","1,800,645","3,524,978",13.02,25.49,"1,800,645","3,524,978"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    2,   16,    1","   32,    8,    1","8,690",0.01,"1,540.88",0.75,"78,336",1.06,256,32,5.64,0.00,35.86,1.18,143.44,"2,304","9,216","12,112","9,216","36,864","38,799","9,348",0,"9,216","9,220",0,7.10,0,"9,220",0
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   98,    1,   36","  256,    1,    1","4,609,662",3.35,"1,073,268.31",2.14,"156,360,960",1.37,256,"3,528",18.80,0.23,68.27,231.21,68.94,"4,444,220","1,806,336","6,321,882","7,153,724","7,225,344","10,750,481","4,053,079","3,524,200","3,649,536","3,789,753","7,137,502",5.51,10.37,"3,789,753","7,137,502"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   49,  128,    1","  256,    1,    1","982,847",0.72,"230,962.57",2.06,"32,363,520",1.36,256,"6,272",12.11,0.23,319.13,102.76,141.83,"1,806,336","1,605,632","3,420,259","7,225,344","3,211,264","3,212,652","7,401,985",0,"7,225,344","7,260,681","3,223,607",49.48,21.97,"7,260,681","3,223,607"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"100352,    1,    1","   64,    1,    1","1,413,464",1.04,"332,423.04",2.75,"62,218,240",1.36,64,"100,352",16.18,0.10,99.19,102.76,99.06,"806,915","802,816","1,632,929","3,215,363","3,211,264","3,217,184","3,279,930","4,078","3,211,300","3,249,230","3,122,421",15.40,14.80,"3,249,230","3,122,421"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"100352,    1,    1","   64,    1,    1","607,623",0.45,"143,076.35",0.58,"5,619,712",1.36,64,"100,352",3.89,0.10,230.73,102.76,230.73,"802,816","802,816","1,616,475","3,211,264","3,211,264","3,212,657","3,227,770",0,"3,211,264","3,232,382","3,122,406",35.63,34.42,"3,232,382","3,122,406"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   49,  128,    1","  256,    1,    1","1,850,785",1.36,"432,808.69",1.07,"31,410,176",1.36,256,"6,272",7.89,0.23,170.69,231.21,170.16,"4,051,218","1,806,336","5,884,861","7,248,528","7,225,344","12,324,233","3,265,279","5,095,413","3,211,264","3,249,890","7,138,200",11.76,25.83,"3,249,890","7,138,200"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    4,   16,    1","   32,    8,    1","14,354",0.01,"2,848.68",0.81,"156,672",1.17,256,64,6.83,0.00,48.25,2.36,193.01,"4,608","18,432","24,296","18,432","73,728","75,759","19,100",0,"18,432","18,604",0,8.68,0,"18,604",0
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   98,    1,   36","  256,    1,    1","8,280,668",6.05,"1,935,947.28",2.19,"287,997,696",1.37,256,"3,528",20.73,0.46,76.33,231.21,38.20,"9,018,646","1,806,336","11,068,219","14,437,659","7,225,344","14,402,214","7,531,193","7,175,383","7,299,080","7,547,619","7,216,305",6.10,5.84,"7,547,619","7,216,305"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   49,  128,    1","  256,    1,    1","989,349",0.73,"232,124.26",2.05,"32,363,520",1.36,256,"6,272",12.03,0.23,317.84,102.76,141.26,"1,806,336","1,605,632","3,436,439","7,225,344","3,211,264","3,212,620","7,264,051",0,"7,225,344","7,259,969","3,225,149",49.15,21.83,"7,259,969","3,225,149"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"100352,    1,    1","   64,    1,    1","1,413,703",1.04,"332,123.38",2.75,"62,218,240",1.36,64,"100,352",16.18,0.10,99.16,102.76,99.03,"806,916","802,816","1,612,104","3,215,364","3,211,264","3,217,334","3,272,208","4,088","3,211,280","3,273,490","3,122,737",15.51,14.80,"3,273,490","3,122,737"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"100352,    1,    1","   64,    1,    1","608,441",0.45,"142,577.79",0.58,"5,619,712",1.36,64,"100,352",3.88,0.10,230.28,102.76,230.28,"802,816","802,816","1,615,037","3,211,264","3,211,264","3,212,688","3,239,180",0,"3,211,264","3,212,522","3,122,840",35.36,34.38,"3,212,522","3,122,840"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[15482] python3.8,"25088,    1,    1","  256,    1,    1","1,179,280",0.87,"276,525.60",2.21,"41,545,728",1.36,256,"25,088",12.95,0.11,122.49,77.07,88.81,"1,095,122","602,112","1,711,645","3,317,318","2,408,448","2,516,324","3,212,753","106,444","3,211,264","3,247,025","2,333,034",18.44,13.25,"3,247,025","2,333,034"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   16,  128,    1","  256,    1,    1","469,437",0.35,"109,726.94",1.23,"9,196,544",1.35,256,"2,048",8.86,0.06,166.04,57.80,166.28,"963,824","451,584","1,423,067","1,803,639","1,806,336","2,998,964","816,621","1,189,052","802,816","820,713","1,718,183",11.71,24.52,"820,713","1,718,183"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    4,   32,    1","   32,    8,    1","25,126",0.02,"5,129.74",0.90,"313,344",1.30,256,128,7.80,0.00,61.13,4.72,244.54,"9,216","36,864","47,650","36,864","147,456","148,411","37,980",0,"36,864","37,458","60,308",9.99,16.08,"37,458","60,308"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   25,    2,   36","  256,    1,    1","4,230,042",3.08,"993,278.93",2.18,"146,937,600",1.37,256,"1,800",20.70,0.23,75.67,115.61,37.49,"4,583,714","903,168","5,558,690","7,293,218","3,612,672","9,024,562","2,056,789","5,409,973","1,956,752","2,109,763","3,527,238",3.34,5.59,"2,109,763","3,527,238"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","562,729",0.41,"130,819.34",2.22,"19,781,120",1.37,256,"4,096",12.93,0.12,281.21,51.38,124.98,"903,168","1,089,536","2,001,539","3,612,672","1,605,632","1,607,036","3,637,445",0,"3,612,672","3,628,857","1,544,277",43.19,18.38,"3,628,857","1,544,277"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","709,514",0.52,"166,138.54",2.75,"31,109,120",1.36,64,"50,176",16.12,0.05,99.17,51.38,98.67,"409,600","401,408","820,660","1,613,824","1,605,632","1,615,700","1,630,926","8,174","1,605,664","1,632,022","1,516,994",15.41,14.32,"1,632,022","1,516,994"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","303,903",0.23,"71,214.28",0.58,"2,809,856",1.35,64,"50,176",3.89,0.05,227.43,51.38,227.43,"401,408","401,408","808,543","1,605,632","1,605,632","1,607,646","1,619,236",0,"1,605,632","1,621,634","1,517,046",35.74,33.44,"1,621,634","1,517,046"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","935,362",0.69,"219,076.24",1.23,"18,393,088",1.36,256,"4,096",8.90,0.12,168.02,115.61,168.25,"1,929,650","903,168","2,842,813","3,608,410","3,612,672","5,995,528","1,623,879","2,380,714","1,605,632","1,822,613","3,525,292",13.05,25.24,"1,822,613","3,525,292"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    8,   32,    1","   32,    8,    1","44,733",0.04,"9,863.76",0.93,"626,688",1.27,256,256,8.76,0.00,67.15,9.44,268.59,"18,432","73,728","95,078","73,728","294,912","295,866","75,408",0,"73,728","75,908","207,375",11.37,31.07,"75,908","207,375"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   25,    2,   36","  256,    1,    1","7,974,170",5.84,"1,866,348.47",2.22,"281,260,800",1.37,256,"1,800",21.86,0.47,80.03,115.61,19.81,"9,175,688","903,168","10,199,189","14,594,696","3,612,672","13,548,862","5,381,285","9,885,781","4,807,728","5,097,685","3,606,912",4.28,3.03,"5,097,685","3,606,912"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","558,473",0.41,"130,876.81",2.22,"19,781,120",1.35,256,"4,096",13.03,0.12,279.49,51.38,124.22,"903,168","1,089,536","2,001,135","3,612,672","1,605,632","1,608,173","3,627,641",0,"3,612,672","3,635,345","1,544,709",43.60,18.53,"3,635,345","1,544,709"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","708,366",0.52,"166,476.93",2.75,"31,109,120",1.36,64,"50,176",16.15,0.05,99.23,51.38,98.72,"409,589","401,408","812,415","1,613,813","1,605,632","1,619,791","1,631,432","8,165","1,605,664","1,634,012","1,516,964",15.45,14.34,"1,634,012","1,516,964"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","308,867",0.23,"71,325.88",0.58,"2,809,856",1.37,64,"50,176",3.82,0.05,227.39,51.38,227.39,"401,408","401,408","807,717","1,605,632","1,605,632","1,607,145","1,616,236",0,"1,605,632","1,617,814","1,592,883",35.08,34.54,"1,617,814","1,592,883"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","935,974",0.69,"219,642.53",1.23,"18,393,088",1.36,256,"4,096",8.89,0.12,167.37,115.61,167.55,"1,930,090","903,168","2,847,366","3,608,943","3,612,672","5,995,248","1,651,841","2,380,422","1,605,632","1,644,249","3,601,042",11.77,25.77,"1,644,249","3,601,042"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    8,   32,    1","   32,    8,    1","46,292",0.04,"9,884.15",0.93,"626,688",1.32,256,256,8.47,0.00,67.21,9.44,268.84,"18,432","73,728","93,604","73,728","294,912","295,892","79,366",0,"73,728","100,322","207,154",14.51,29.97,"100,322","207,154"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   25,    2,   36","  256,    1,    1","7,995,043",5.84,"1,867,649.71",2.21,"281,260,800",1.37,256,"1,800",21.80,0.47,79.92,115.61,19.78,"9,175,520","903,168","10,313,462","14,594,528","3,612,672","13,482,520","5,245,571","9,768,174","4,928,356","5,611,817","3,533,173",4.70,2.96,"5,611,817","3,533,173"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","558,716",0.41,"130,973.21",2.22,"19,781,120",1.35,256,"4,096",13.02,0.12,280.16,51.38,124.52,"903,168","1,089,536","2,005,420","3,612,672","1,605,632","1,608,705","3,631,009",0,"3,612,672","3,634,957","1,544,036",43.58,18.51,"3,634,957","1,544,036"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","708,351",0.52,"166,416.28",2.75,"31,109,120",1.36,64,"50,176",16.15,0.05,99.15,51.38,98.65,"409,593","401,408","823,082","1,613,818","1,605,632","1,620,237","1,620,670","8,179","1,605,664","1,633,556","1,516,786",15.45,14.34,"1,633,556","1,516,786"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","306,215",0.22,"70,782.96",0.58,"2,809,856",1.36,64,"50,176",3.86,0.05,229.05,51.38,229.05,"401,408","401,408","808,529","1,605,632","1,605,632","1,606,905","1,619,228",0,"1,605,632","1,617,602","1,590,688",35.38,34.79,"1,617,602","1,590,688"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","939,978",0.69,"218,734.46",1.24,"18,393,088",1.37,256,"4,096",8.85,0.12,167.98,115.61,168.13,"1,928,419","903,168","2,848,968","3,609,063","3,612,672","5,995,038","1,644,997","2,382,220","1,605,632","1,633,393","3,601,656",11.64,25.66,"1,633,393","3,601,656"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    8,   32,    1","   32,    8,    1","44,388",0.04,"9,820.54",0.94,"626,688",1.24,256,256,8.83,0.00,66.01,9.44,264.02,"18,432","73,728","93,281","73,728","294,912","295,847","74,876",0,"73,728","75,990","206,207",11.47,31.12,"75,990","206,207"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[15482] python3.8,"   25,    2,   36","  256,    1,    1","7,961,133",5.83,"1,868,686.87",2.21,"281,260,800",1.36,256,"1,800",21.90,0.47,80.05,115.61,19.81,"9,175,587","903,168","10,200,026","14,594,595","3,612,672","13,305,903","5,340,001","9,791,967","4,781,764","5,173,889","3,610,812",4.35,3.04,"5,173,889","3,610,812"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"   16,  256,    1","  256,    1,    1","560,445",0.41,"130,858.59",2.22,"19,781,120",1.36,256,"4,096",12.98,0.12,279.79,51.38,124.35,"903,168","1,089,521","2,000,978","3,612,672","1,605,632","1,607,060","3,628,343",0,"3,612,672","3,633,627","1,619,387",43.43,19.35,"3,633,627","1,619,387"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","708,392",0.52,"166,230.78",2.75,"31,109,120",1.36,64,"50,176",16.15,0.05,99.21,51.38,98.70,"409,589","401,408","822,442","1,613,813","1,605,632","1,615,427","1,630,476","8,173","1,605,664","1,636,342","1,517,116",15.47,14.34,"1,636,342","1,517,116"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"50176,    1,    1","   64,    1,    1","304,128",0.22,"70,771.88",0.58,"2,809,856",1.36,64,"50,176",3.88,0.05,230.07,51.38,230.07,"401,408","401,408","806,365","1,605,632","1,605,632","1,606,937","1,610,728",0,"1,605,632","1,610,896","1,590,444",35.48,35.03,"1,610,896","1,590,444"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[15482] python3.8,"12544,    1,    1","  256,    1,    1","582,058",0.43,"136,978.21",2.23,"20,772,864",1.35,256,"12,544",13.12,0.05,121.70,38.54,89.65,"704,606","301,056","1,015,349","1,633,154","1,204,224","1,421,651","1,627,763","215,191","1,605,632","1,627,309","1,128,318",18.73,12.98,"1,627,309","1,128,318"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    4,  256,    1","  256,    1,    1","221,756",0.16,"50,899.47",1.40,"4,845,568",1.37,256,"1,024",10.02,0.02,142.31,28.90,179.16,"299,454","330,920","637,737","717,487","903,168","1,316,063","409,065","411,460","401,408","412,829","897,210",12.47,27.10,"412,829","897,210"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"    8,   64,    1","   32,    8,    1","84,970",0.07,"19,145.43",0.96,"1,253,376",1.27,256,512,9.22,0.00,70.82,18.87,283.30,"36,864","147,456","186,590","147,456","589,824","590,791","153,636",0,"147,456","148,332","501,023",11.69,39.50,"148,332","501,023"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    7,    8,   36","  128,    1,    1","4,434,236",3.25,"1,042,395.54",2.26,"160,199,424",1.36,128,"2,016",22.01,0.36,111.65,57.80,17.77,"6,254,450","561,362","6,893,335","11,347,977","1,806,336","11,961,719","1,637,065","10,149,957","1,492,992","1,603,753","1,722,791",2.42,2.60,"1,603,753","1,722,791"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","318,964",0.24,"74,363.88",1.99,"10,057,216",1.35,256,"2,048",11.60,0.06,243.90,33.03,139.37,"696,521","483,980","1,180,585","1,806,336","1,032,192","1,033,579","1,807,667",0,"1,806,336","1,860,637","742,666",39.08,15.60,"1,860,637","742,666"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","355,824",0.26,"83,223.59",2.75,"15,554,560",1.36,64,"25,088",16.08,0.03,99.71,25.69,98.10,"214,077","200,704","425,859","816,249","802,816","822,054","812,428","13,126","802,880","803,820","713,815",15.13,13.44,"803,820","713,815"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","152,269",0.11,"35,696.51",0.58,"1,404,928",1.36,64,"25,088",3.88,0.03,228.85,25.69,228.85,"200,704","200,704","403,690","802,816","802,816","804,274","812,086",0,"802,816","808,084","714,082",35.55,31.41,"808,084","714,082"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","435,434",0.32,"100,765.50",1.41,"9,691,136",1.37,256,"2,048",10.21,0.05,144.65,57.80,181.65,"600,359","662,802","1,263,947","1,438,049","1,806,336","2,632,591","813,015","825,781","802,816","815,417","1,797,019",12.54,27.64,"815,417","1,797,019"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","167,446",0.13,"39,261.82",0.94,"2,506,752",1.34,256,"1,024",9.36,0.01,75.46,37.75,301.85,"73,728","294,912","372,009","294,912","1,179,648","1,181,630","308,328",0,"294,912","301,358","1,091,225",12.06,43.65,"301,358","1,091,225"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    7,    8,   36","  128,    1,    1","8,637,585",6.33,"2,030,946.13",2.27,"313,221,888",1.36,128,"2,016",22.55,0.73,114.77,57.80,9.13,"12,485,478","560,874","13,176,760","22,702,211","1,806,336","22,113,712","3,478,517","20,306,011","2,986,280","3,204,161","1,740,319",2.48,1.35,"3,204,161","1,740,319"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","316,534",0.24,"73,856.46",2.00,"10,057,216",1.35,256,"2,048",11.69,0.06,245.69,33.03,140.40,"695,181","483,801","1,184,909","1,806,336","1,032,192","1,033,546","1,814,909",0,"1,806,336","1,817,049","746,236",38.45,15.79,"1,817,049","746,236"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","355,876",0.26,"83,287.96",2.75,"15,554,560",1.36,64,"25,088",16.08,0.03,99.70,25.69,98.07,"213,973","200,704","422,398","816,149","802,816","817,776","820,206","12,984","802,880","815,738","713,942",15.35,13.44,"815,738","713,942"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","151,393",0.11,"35,481.44",0.58,"1,404,928",1.33,64,"25,088",3.90,0.03,226.46,25.69,226.46,"200,704","200,704","402,592","802,816","802,816","803,790","803,342",0,"802,816","806,894","713,959",35.70,31.59,"806,894","713,959"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","434,605",0.32,"101,679.22",1.40,"9,691,136",1.36,256,"2,048",10.23,0.05,144.25,57.80,181.09,"600,401","662,213","1,268,835","1,438,858","1,806,336","2,633,429","815,997","827,621","802,816","818,838","1,723,859",12.62,26.57,"818,838","1,723,859"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","167,861",0.13,"38,246.71",0.96,"2,506,752",1.32,256,"1,024",9.33,0.01,73.97,37.75,295.87,"73,728","294,912","372,579","294,912","1,179,648","1,180,638","299,384",0,"294,912","309,782","1,090,887",12.36,43.53,"309,782","1,090,887"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    7,    8,   36","  128,    1,    1","8,639,009",6.33,"2,029,987.01",2.27,"313,221,888",1.36,128,"2,016",22.54,0.73,114.77,57.80,9.13,"12,485,742","561,036","13,157,217","22,702,590","1,806,336","22,114,157","3,290,515","20,306,168","2,986,308","3,488,665","1,741,884",2.70,1.35,"3,488,665","1,741,884"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","317,352",0.24,"73,767.84",2.00,"10,057,216",1.34,256,"2,048",11.66,0.06,244.30,33.03,139.60,"695,638","484,013","1,188,332","1,806,336","1,032,192","1,035,301","1,815,277",0,"1,806,336","1,815,777","744,729",38.32,15.72,"1,815,777","744,729"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","356,198",0.26,"83,266.76",2.75,"15,554,560",1.36,64,"25,088",16.06,0.03,99.62,25.69,98.02,"213,783","200,704","419,373","815,959","802,816","823,131","803,720","13,358","802,880","843,120","716,973",15.86,13.48,"843,120","716,973"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","155,299",0.11,"35,109.78",0.59,"1,404,928",1.36,64,"25,088",3.80,0.03,225.13,25.69,225.13,"200,704","200,704","406,110","802,816","802,816","803,822","803,396",0,"802,816","805,638","713,974",34.75,30.79,"805,638","713,974"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","434,933",0.32,"101,022.40",1.41,"9,691,136",1.36,256,"2,048",10.22,0.05,143.88,57.80,180.71,"600,198","661,385","1,303,683","1,438,257","1,806,336","2,635,215","816,295","825,490","802,816","821,513","1,722,599",12.65,26.53,"821,513","1,722,599"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","170,158",0.12,"38,303.37",0.96,"2,506,752",1.37,256,"1,024",9.21,0.01,76.15,37.75,304.58,"73,728","294,912","371,803","294,912","1,179,648","1,180,951","343,628",0,"294,912","302,166","1,091,054",11.90,42.95,"302,166","1,091,054"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    7,    8,   36","  128,    1,    1","8,639,086",6.33,"2,030,077.10",2.27,"313,221,888",1.36,128,"2,016",22.54,0.73,114.74,57.80,9.13,"12,485,484","560,974","13,195,366","22,702,419","1,806,336","22,117,097","3,201,953","20,305,924","2,986,308","3,245,569","1,742,428",2.52,1.35,"3,245,569","1,742,428"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    4,  512,    1","  256,    1,    1","316,890",0.24,"73,887.41",2.00,"10,057,216",1.34,256,"2,048",11.67,0.06,244.86,33.03,139.92,"695,120","483,732","1,183,327","1,806,336","1,032,192","1,033,565","1,827,745",0,"1,806,336","1,894,973","822,012",40.06,17.38,"1,894,973","822,012"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","357,914",0.26,"83,247.21",2.75,"15,554,560",1.37,64,"25,088",15.98,0.03,99.67,25.69,98.06,"213,844","200,704","421,842","816,011","802,816","817,730","810,830","13,175","802,880","817,946","785,667",15.31,14.70,"817,946","785,667"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"25088,    1,    1","   64,    1,    1","152,533",0.11,"35,188.75",0.59,"1,404,928",1.34,64,"25,088",3.87,0.03,225.83,25.69,225.83,"200,704","200,704","420,844","802,816","802,816","804,234","804,346",0,"802,816","804,420","713,798",35.33,31.35,"804,420","713,798"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[15482] python3.8," 6272,    1,    1","  256,    1,    1","282,847",0.21,"66,164.32",2.31,"10,386,432",1.34,256,"6,272",13.50,0.03,124.68,19.27,91.56,"430,522","150,528","587,730","819,177","602,112","764,416","815,315","161,476","802,816","817,429","526,759",19.36,12.47,"817,429","526,759"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","119,449",0.09,"27,564.03",1.37,"2,564,096",1.38,256,512,9.99,0.01,76.53,18.87,218.13,"90,248","147,456","241,727","206,888","589,824","622,988","206,811","32,119","200,704","204,149","501,994",11.45,28.15,"204,149","501,994"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","168,137",0.13,"38,165.81",0.97,"2,506,752",1.32,256,"1,024",9.32,0.01,74.10,37.75,296.39,"73,728","294,912","371,865","294,912","1,179,648","1,181,994","295,554",0,"294,912","301,442","1,090,899",12.01,43.47,"301,442","1,090,899"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    2,    8,   36","  128,    1,    1","2,480,537",1.82,"583,163.04",2.26,"89,491,968",1.36,128,576,22.43,0.23,124.31,18.87,10.37,"3,530,135","147,456","3,715,406","7,069,079","589,824","6,480,960","1,826,889","5,889,680","1,769,472","1,860,671","532,100",5.02,1.44,"1,860,671","532,100"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","81,216",0.06,"18,378.35",2.05,"2,560,000",1.31,256,512,11.62,0.02,303.88,7.33,117.96,"147,456","99,498","247,530","589,824","228,982","230,187","591,199",0,"589,824","592,489","225,302",48.87,18.58,"592,489","225,302"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","94,112",0.07,"21,061.26",2.72,"3,888,640",1.38,64,"6,272",15.21,0.01,94.94,6.42,93.96,"52,045","50,176","104,844","202,602","200,704","203,876","204,594","1,910","200,768","202,824","184,365",14.44,13.12,"202,824","184,365"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","42,257",0.03,"8,496.29",0.61,"351,232",1.40,64,"6,272",3.49,0.01,212.61,6.42,212.61,"50,176","50,176","101,464","200,704","200,704","201,598","200,820",0,"200,704","201,060","111,847",31.87,17.73,"201,060","111,847"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","121,994",0.09,"27,742.29",1.36,"2,564,096",1.39,256,512,9.78,0.01,75.31,18.87,214.64,"91,245","147,456","238,821","206,940","589,824","626,216","205,341","31,911","200,704","204,057","501,077",11.20,27.51,"204,057","501,077"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","166,577",0.13,"38,496.01",0.96,"2,506,752",1.33,256,"1,024",9.41,0.01,75.29,37.75,301.16,"73,728","294,912","371,616","294,912","1,179,648","1,180,617","297,702",0,"294,912","297,910","1,092,067",11.98,43.91,"297,910","1,092,067"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    2,    8,   36","  128,    1,    1","2,480,892",1.82,"583,376.69",2.26,"89,491,968",1.36,128,576,22.43,0.23,124.28,18.87,10.37,"3,529,879","147,456","3,809,495","7,068,829","589,824","6,480,968","2,095,843","5,889,495","1,769,472","1,865,183","609,404",5.04,1.65,"1,865,183","609,404"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","80,915",0.06,"18,356.35",2.05,"2,560,000",1.32,256,512,11.66,0.02,308.49,7.32,119.67,"147,456","99,461","248,369","589,824","228,946","230,162","592,059",0,"589,824","597,049","148,876",49.44,12.33,"597,049","148,876"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","91,529",0.07,"21,023.82",2.72,"3,888,640",1.34,64,"6,272",15.65,0.01,95.15,6.42,94.23,"52,029","50,176","103,241","202,575","200,704","204,082","202,072","1,890","200,768","206,140","189,140",15.08,13.84,"206,140","189,140"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","38,445",0.03,"9,225.01",0.56,"351,232",1.25,64,"6,272",3.84,0.01,208.20,6.42,208.20,"50,176","50,176","110,686","200,704","200,704","202,185","202,150",0,"200,704","203,740","111,876",35.50,19.49,"203,740","111,876"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","119,842",0.09,"27,805.22",1.36,"2,564,096",1.36,256,512,9.95,0.01,75.19,18.87,214.33,"90,932","147,456","238,764","206,876","589,824","624,648","200,965","31,914","200,704","206,595","501,580",11.55,28.03,"206,595","501,580"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","165,456",0.13,"38,363.34",0.96,"2,506,752",1.31,256,"1,024",9.47,0.01,74.66,37.75,298.65,"73,728","294,912","371,302","294,912","1,179,648","1,180,625","296,810",0,"294,912","300,422","1,090,843",12.16,44.16,"300,422","1,090,843"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    2,    8,   36","  128,    1,    1","2,481,391",1.82,"583,386.40",2.26,"89,491,968",1.36,128,576,22.43,0.23,124.33,18.87,10.37,"3,530,038","147,456","3,814,595","7,068,994","589,824","6,485,294","1,858,301","5,889,365","1,769,472","1,860,519","531,788",5.02,1.44,"1,860,519","531,788"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","82,823",0.06,"18,298.06",2.06,"2,560,000",1.33,256,512,11.39,0.02,303.88,7.32,117.92,"147,456","99,630","262,362","589,824","228,989","233,261","590,779",0,"589,824","592,529","148,083",47.93,11.98,"592,529","148,083"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","91,788",0.07,"21,071.81",2.71,"3,888,640",1.33,64,"6,272",15.60,0.01,93.83,6.42,92.88,"52,105","50,176","104,805","202,654","200,704","208,432","204,200","1,820","200,768","203,296","111,937",14.84,8.17,"203,296","111,937"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","38,901",0.03,"8,704.21",0.59,"351,232",1.30,64,"6,272",3.80,0.01,214.66,6.42,214.66,"50,176","50,176","108,944","200,704","200,704","201,563","201,734",0,"200,704","204,932","112,735",35.30,19.42,"204,932","112,735"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","120,716",0.09,"27,625.29",1.36,"2,564,096",1.38,256,512,9.88,0.01,75.40,18.87,215.42,"90,953","147,456","245,678","206,980","589,824","623,328","205,731","32,018","200,704","200,905","502,620",11.15,27.89,"200,905","502,620"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[15482] python3.8,"   16,   64,    1","   32,    8,    1","165,349",0.13,"39,627.76",0.93,"2,506,752",1.29,256,"1,024",9.47,0.01,73.86,37.75,295.43,"73,728","294,912","371,633","294,912","1,179,648","1,182,074","299,476",0,"294,912","299,702","1,162,850",12.14,47.11,"299,702","1,162,850"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[15482] python3.8,"    2,    8,   36","  128,    1,    1","2,480,801",1.82,"583,235.25",2.26,"89,491,968",1.36,128,576,22.43,0.23,124.35,18.87,10.38,"3,530,097","147,456","3,715,309","7,069,041","589,824","6,481,227","1,873,361","5,889,494","1,769,472","2,039,441","531,851",5.51,1.44,"2,039,441","531,851"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[15482] python3.8,"    1,  512,    1","  256,    1,    1","80,635",0.06,"18,333.46",2.05,"2,560,000",1.30,256,512,11.70,0.02,304.66,7.32,118.23,"147,456","99,410","249,380","589,824","228,873","231,865","591,865",0,"589,824","590,625","149,054",49.07,12.38,"590,625","149,054"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","94,005",0.07,"21,045.78",2.72,"3,888,640",1.38,64,"6,272",15.23,0.01,95.16,6.42,94.27,"52,112","50,176","104,701","202,664","200,704","203,932","201,768","1,895","200,768","203,420","113,342",14.49,8.07,"203,420","113,342"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8," 6272,    1,    1","   64,    1,    1","41,346",0.03,"8,436.75",0.61,"351,232",1.38,64,"6,272",3.57,0.01,215.12,6.42,215.12,"50,176","50,176","101,938","200,704","200,704","201,715","200,892",0,"200,704","203,408","112,284",32.97,18.20,"203,408","112,284"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[15482] python3.8," 1568,    1,    1","  256,    1,    1","70,155",0.05,"15,931.04",2.40,"2,596,608",1.29,256,"1,568",13.62,0.01,121.12,4.82,88.91,"109,311","37,632","149,592","205,113","150,528","216,879","226,071","65,297","200,704","200,741","74,812",19.17,7.15,"200,741","74,812"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[15482] python3.8," 8192,    1,    1","   32,    8,    1","465,551",0.34,"108,542.94",2.71,"20,012,340",1.37,256,"8,192",15.95,0.00,5.35,3.04,8.92,"44,154","58,688","103,887","56,921","94,870","121,847","64,844","23,786","50,176","62,704","44,033",0.90,0.63,"62,704","44,033"
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"  256,    1,    1","   64,    1,    1","5,594",0.01,812.88,2.00,"110,592",1.03,64,256,7.60,0.00,9.47,0.26,48.47,400,"2,048","4,245","1,600","8,192","10,208",515,"1,088",512,659,0,0.79,0,659,0
99,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[15482] python3.8,"   32,    1,    7","  256,    1,    1","4,516,761",3.31,"1,061,680.44",1.80,"130,044,672",1.36,256,224,16.77,0.46,140.20,1.84,0.56,"3,628,544","14,560","3,709,933","14,509,568","57,568","1,572,135","13,113,871","1,506,804","13,002,776","13,158,491","129,675",19.51,0.19,"13,158,491","129,675"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"  256,    1,    1","   64,    1,    1","4,372",0.00,527.60,0.40,"14,336",1.16,64,256,1.38,0.00,69.42,0.26,69.42,"2,048","2,048","4,520","8,192","8,192","8,929","8,196",0,"8,192","8,402",0,12.87,0,"8,402",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[15482] python3.8,"   64,    1,    1","  256,    1,    1","8,516",0.00,"1,002.13",1.59,"108,032",1.70,256,64,4.75,0.00,52.51,0.33,65.64,"2,048","2,560","5,172","8,192","10,240","11,263","8,224",0,"8,192","8,490",0,6.70,0,"8,490",0
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"  256,    1,    1","   64,    1,    1","5,575",0.01,"1,064.07",1.53,"110,592",0.83,64,256,7.66,0.00,7.66,0.26,39.20,400,"2,048","4,332","1,600","8,192","14,728",651,"1,088",512,555,0,0.67,0,555,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[15482] python3.8,"   32,    1,    3","  256,    1,    1","778,826",0.57,"182,263.96",1.77,"21,896,448",1.36,256,96,16.07,0.09,154.22,0.79,1.38,"992,768","6,240","1,014,514","2,763,849","24,672","819,779","2,187,721","791,176","2,154,568","2,197,897","23,009",18.90,0.20,"2,197,897","23,009"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[15482] python3.8,"  256,    1,    1","   64,    1,    1","4,334",0.01,514.03,0.41,"14,336",0.85,64,256,1.39,0.00,51.52,0.26,51.52,"2,048","2,048","4,988","8,192","8,192","8,931","8,956",0,"8,192","8,196",0,12.65,0,"8,196",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[15482] python3.8,"   64,    1,    1","  256,    1,    1","6,122",0.01,970.03,1.64,"108,032",1.20,256,64,6.62,0.00,51.52,0.33,64.40,"2,048","2,560","5,384","8,192","10,240","11,271","8,352",0,"8,192","8,200",0,8.97,0,"8,200",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[15482] python3.8,"   63,    1,    1","   64,    1,    1","4,465",0.00,569.75,0.70,"27,030",0.97,64,63,2.35,0.00,7.39,0.06,13.89,419,500,"1,290","1,064","2,000","3,734","1,249",947,126,"1,081",36,1.62,0.05,"1,081",36
107,scal_kernel,"void scal_kernel<float, float, (int)1, (bool)0, (int)6, (int)5, (int)5, (int)3>(cublasTransposeParams<T2>, const T1 *, T1 *, const T2 *)",[15482] python3.8,"   16,    1,    1","  256,    1,    1","4,356",0.01,558.31,0.78,"29,664",0.84,256,16,4.32,0.00,12.35,0.08,16.25,692,920,"2,066","2,000","2,624","5,727","2,339",128,"2,000","2,181",0,3.35,0,"2,181",0
108,sgemm_largek_lds64,"void sgemm_largek_lds64<(bool)1, (bool)0, (int)6, (int)3, (int)4, (int)5, (int)2, (int)66>(float *, const float *, const float *, int, int, int, int, int, int, const float *, const float *, float, float, int, int, int *, int *)",[15482] python3.8,"   16,    2,   20","   32,    4,    1","344,469",0.26,"80,212.38",0.98,"5,332,995",1.35,128,640,14.36,0.04,154.79,2.60,10.18,"606,929","28,320","683,208","1,235,395","80,640","832,871","522,426","712,997","522,196","531,988","1,072",10.34,0.02,"531,988","1,072"
