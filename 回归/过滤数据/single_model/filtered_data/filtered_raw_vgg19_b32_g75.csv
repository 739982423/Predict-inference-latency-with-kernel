ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[18892] python3.8,"  393,    1,    1","  128,    1,    1","3,532",0.00,"1,060.38",1.70,"122,352",1.12,128,393,13.66,0,0,0.32,101.83,0,"3,043","4,137",0,"10,107","11,267",123,0,0,185,0,0.35,0,185,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[18892] python3.8,"12544,    1,    1","  128,    1,    1","1,650,980",1.21,"1,204,110.51",2.33,"191,070,208",1.35,128,"12,544",49.48,0.13,103.21,411.04,339.05,"1,710,890","3,211,264","4,954,494","3,911,654","12,845,056","15,929,175","957,158","3,075,120","903,448","979,258","12,756,860",3.97,51.74,"979,258","12,756,860"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"401408,    1,    1","   64,    1,    1","2,069,251",1.53,"1,507,859.46",2.43,"248,872,960",1.35,64,"401,408",44.40,0.41,269.57,411.04,269.30,"3,223,999","3,211,264","6,502,315","12,857,791","12,845,056","12,859,923","12,919,942","12,562","12,845,312","12,922,998","12,756,727",41.83,41.29,"12,922,998","12,756,727"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"401408,    1,    1","   64,    1,    1","2,050,641",1.51,"1,503,762.90",0.22,"22,478,848",1.36,64,"401,408",4.62,0.41,272.46,411.04,272.46,"3,211,264","3,211,264","6,488,718","12,845,056","12,845,056","12,849,202","12,918,234",0,"12,845,056","12,923,204","12,754,215",42.21,41.66,"12,923,204","12,754,215"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[18892] python3.8,"    2,   16,    1","   32,    4,    1","4,368",0.01,"1,044.51",0.63,"45,056",0.86,128,32,3.89,0.00,32.20,0.26,51.52,"2,154","2,048","5,828","5,120","8,192","15,281","4,924","1,018","4,608","4,686",0,7.09,0,"4,686",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[18892] python3.8,"   64,   28,   14","  256,    1,    1","15,797,698",11.58,"11,489,408.85",1.57,"1,228,509,184",1.36,256,"25,088",42.31,5.26,453.74,411.04,35.48,"55,296,000","6,422,528","62,017,955","164,249,600","12,845,056","147,552,981","44,533,717","134,670,334","43,887,078","44,536,350","12,884,813",18.88,5.46,"44,536,350","12,884,813"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"401408,    1,    1","   64,    1,    1","2,065,386",1.51,"1,506,304.54",2.43,"248,872,960",1.36,64,"401,408",44.48,0.41,272.13,411.04,271.86,"3,223,969","3,211,264","6,437,554","12,857,761","12,845,056","12,860,119","12,923,008","12,604","12,845,312","12,890,306","12,756,586",41.80,41.37,"12,890,306","12,756,586"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"401408,    1,    1","   64,    1,    1","2,047,427",1.51,"1,507,090.15",0.22,"22,478,848",1.36,64,"401,408",4.62,0.41,273.10,411.04,273.10,"3,211,264","3,211,264","6,423,945","12,845,056","12,845,056","12,847,368","13,000,362",0,"12,845,056","12,937,804","12,755,725",42.32,41.73,"12,937,804","12,755,725"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[18892] python3.8,"100352,    1,    1","  256,    1,    1","1,828,365",1.33,"1,329,378.43",1.84,"166,182,912",1.37,256,"100,352",33.54,0.44,332.38,308.28,231.19,"3,460,511","2,408,448","5,883,006","13,842,044","9,633,792","10,633,627","12,925,249","994,172","12,845,056","12,893,467","9,549,495",47.23,34.98,"12,893,467","9,549,495"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   98,   64,    1","  256,    1,    1","1,009,184",0.77,"737,445.12",0.63,"31,410,176",1.31,256,"6,272",14.54,0.23,302.33,231.21,302.21,"4,066,417","1,806,336","5,903,183","7,228,958","7,225,344","12,295,931","3,291,959","5,066,112","3,218,340","3,226,327","7,130,834",21.41,47.32,"3,226,327","7,130,834"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    2,   16,    1","   32,    8,    1","6,454",0.01,"1,826.97",0.63,"78,336",1.15,256,32,7.62,0.00,52.66,1.18,210.65,"2,304","9,216","12,840","9,216","36,864","38,447","9,236",0,"9,216","9,740","24,745",10.07,25.57,"9,740","24,745"
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"  196,    1,   36","  256,    1,    1","2,971,926",2.18,"2,171,768.78",2.12,"312,721,920",1.36,256,"7,056",58.56,0.46,210.21,462.42,212.06,"8,905,754","3,612,672","12,610,271","14,324,764","14,450,688","21,534,811","7,394,721","7,081,471","7,262,248","7,343,231","14,362,137",16.55,32.37,"7,343,231","14,362,137"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   98,  128,    1","  256,    1,    1","1,636,614",1.20,"1,196,773.56",0.80,"64,727,040",1.36,256,"12,544",14.59,0.46,384.44,205.52,170.86,"3,612,672","3,211,264","6,856,793","14,450,688","6,422,528","6,424,672","14,521,461",0,"14,450,688","14,553,599","6,345,997",59.55,25.97,"14,553,599","6,345,997"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"200704,    1,    1","   64,    1,    1","1,031,909",0.76,"750,584.22",2.44,"124,436,480",1.35,64,"200,704",44.51,0.21,271.55,205.52,270.55,"1,629,416","1,605,632","3,255,994","6,446,323","6,422,528","6,448,332","6,467,686","23,773","6,422,592","6,463,382","6,333,866",41.94,41.10,"6,463,382","6,333,866"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"200704,    1,    1","   64,    1,    1","1,022,693",0.76,"749,092.21",0.22,"11,239,424",1.35,64,"200,704",4.63,0.21,271.39,205.52,271.39,"1,605,632","1,605,632","3,232,925","6,422,528","6,422,528","6,425,150","6,465,908",0,"6,422,528","6,468,932","6,333,734",42.37,41.48,"6,468,932","6,333,734"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   98,  128,    1","  256,    1,    1","2,096,416",1.54,"1,537,672.79",0.60,"62,820,352",1.36,256,"12,544",13.99,0.46,301.28,462.42,301.23,"8,131,648","3,612,672","11,780,157","14,454,287","14,450,688","24,580,474","6,560,846","10,134,148","6,439,556","6,584,203","14,358,100",21.04,45.87,"6,584,203","14,358,100"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    4,   16,    1","   32,    8,    1","8,441",0.01,"3,734.53",0.62,"156,672",1.19,256,64,11.69,0.00,84.16,2.36,336.66,"4,608","18,432","24,344","18,432","73,728","75,375","18,566",0,"18,432","18,772",72,14.81,0.06,"18,772",72
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"  196,    1,   36","  256,    1,    1","5,343,050",3.93,"3,896,717.88",2.17,"575,995,392",1.35,256,"7,056",64.56,0.92,235.35,462.42,117.79,"18,034,915","3,612,672","21,791,309","28,872,931","14,450,688","28,839,346","14,647,523","14,384,506","14,527,192","14,739,271","14,363,790",18.48,18.01,"14,739,271","14,363,790"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   98,  128,    1","  256,    1,    1","1,632,478",1.21,"1,199,794.97",0.79,"64,727,040",1.35,256,"12,544",14.62,0.46,383.71,205.52,170.54,"3,612,672","3,211,264","6,862,934","14,450,688","6,422,528","6,426,423","14,519,321",0,"14,450,688","14,504,825","6,345,037",59.50,26.03,"14,504,825","6,345,037"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"200704,    1,    1","   64,    1,    1","1,036,870",0.76,"753,764.49",2.43,"124,436,480",1.36,64,"200,704",44.37,0.21,271.04,205.52,270.04,"1,629,448","1,605,632","3,258,439","6,446,352","6,422,528","6,448,725","6,451,092","23,915","6,422,584","6,493,172","6,334,431",41.93,40.91,"6,493,172","6,334,431"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"200704,    1,    1","   64,    1,    1","1,024,612",0.75,"747,251.90",0.22,"11,239,424",1.36,64,"200,704",4.62,0.21,272.63,205.52,272.63,"1,605,632","1,605,632","3,212,698","6,422,528","6,422,528","6,424,567","6,423,420",0,"6,422,528","6,557,774","6,333,602",42.87,41.40,"6,557,774","6,333,602"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[18892] python3.8,"50176,    1,    1","  256,    1,    1","900,183",0.67,"659,315.16",1.85,"83,091,456",1.35,256,"50,176",34.08,0.21,322.73,154.14,231.73,"2,207,816","1,204,224","3,435,185","6,709,008","4,816,896","5,104,364","6,429,639","286,952","6,422,528","6,473,409","4,732,874",48.16,35.21,"6,473,409","4,732,874"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   32,  128,    1","  256,    1,    1","502,471",0.37,"370,082.40",0.73,"18,393,088",1.36,256,"4,096",16.64,0.12,312.39,115.61,313.65,"1,937,903","903,168","2,844,679","3,598,176","3,612,672","5,986,755","1,614,007","2,372,591","1,609,122","1,637,619","3,519,689",21.82,46.91,"1,637,619","3,519,689"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    4,   32,    1","   32,    8,    1","14,997",0.01,"5,797.71",0.79,"313,344",1.43,256,128,13.22,0.00,113.78,4.72,455.11,"9,216","36,864","47,470","36,864","147,456","149,103","37,124",0,"36,864","37,108","56,236",16.49,24.99,"37,108","56,236"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"   49,    2,   36","  256,    1,    1","2,686,268",1.97,"1,954,118.99",2.17,"287,997,696",1.36,256,"3,528",64.14,0.46,234.58,231.21,117.39,"9,019,493","1,806,336","10,844,722","14,438,501","7,225,344","15,600,518","6,183,769","8,364,787","6,120,160","6,274,421","7,136,136",15.64,17.79,"6,274,421","7,136,136"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","827,030",0.61,"601,315.56",0.97,"39,562,240",1.34,256,"8,192",17.66,0.23,377.16,102.76,167.63,"1,806,336","2,179,072","3,987,139","7,225,344","3,211,264","3,215,869","7,226,495",0,"7,225,344","7,227,235","3,136,032",58.51,25.39,"7,227,235","3,136,032"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","518,200",0.38,"377,857.41",2.42,"62,218,240",1.35,64,"100,352",44.45,0.10,271.21,102.76,269.18,"826,960","802,816","1,633,266","3,235,507","3,211,264","3,242,870","3,212,856","24,287","3,211,296","3,222,704","3,122,338",41.63,40.34,"3,222,704","3,122,338"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","509,034",0.38,"372,459.06",0.22,"5,619,712",1.35,64,"100,352",4.65,0.10,272.65,102.76,272.65,"802,816","802,816","1,615,759","3,211,264","3,211,264","3,213,285","3,235,444",0,"3,211,264","3,238,796","3,199,404",42.62,42.10,"3,238,796","3,199,404"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","1,023,379",0.75,"753,892.04",0.72,"36,786,176",1.36,256,"8,192",16.34,0.23,306.82,231.21,307.83,"3,877,889","1,806,336","5,702,291","7,200,470","7,225,344","11,980,913","3,253,691","4,751,798","3,215,886","3,257,037","7,133,895",21.31,46.68,"3,257,037","7,133,895"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    8,   32,    1","   32,    8,    1","31,639",0.03,"18,397.75",0.50,"626,688",1.04,256,256,12.49,0.00,78.02,9.44,312.08,"18,432","73,728","93,514","73,728","294,912","296,584","73,932",0,"73,728","76,112","196,274",16.01,41.29,"76,112","196,274"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"   49,    2,   36","  256,    1,    1","5,051,344",3.71,"3,683,942.85",2.20,"551,271,168",1.36,256,"3,528",67.92,0.92,249.49,231.21,62.40,"18,051,766","1,806,336","19,927,180","28,889,784","7,225,344","21,608,185","14,997,571","14,381,546","14,698,292","14,924,583","7,141,894",19.79,9.47,"14,924,583","7,141,894"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","816,368",0.60,"593,560.74",0.98,"39,562,240",1.35,256,"8,192",17.90,0.23,383.65,102.76,170.51,"1,806,336","2,179,072","3,993,859","7,225,344","3,211,264","3,213,285","7,358,189",0,"7,225,344","7,258,651","3,213,929",59.53,26.36,"7,258,651","3,213,929"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","515,169",0.38,"378,041.29",2.42,"62,218,240",1.34,64,"100,352",44.69,0.10,271.05,102.76,269.00,"827,194","802,816","1,650,659","3,235,719","3,211,264","3,237,462","3,220,344","24,242","3,211,296","3,231,984","3,122,378",41.99,40.57,"3,231,984","3,122,378"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","517,716",0.38,"370,344.47",0.22,"5,619,712",1.37,64,"100,352",4.57,0.10,273.18,102.76,273.18,"802,816","802,816","1,613,891","3,211,264","3,211,264","3,213,365","3,232,508",0,"3,211,264","3,233,490","3,122,301",41.83,40.40,"3,233,490","3,122,301"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","1,031,880",0.75,"746,521.97",0.72,"36,786,176",1.36,256,"8,192",16.19,0.23,305.66,231.21,306.68,"3,878,565","1,806,336","5,710,845","7,201,260","7,225,344","11,985,499","3,218,371","4,753,984","3,215,874","3,266,473","7,134,739",21.20,46.31,"3,266,473","7,134,739"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    8,   32,    1","   32,    8,    1","32,434",0.03,"18,145.01",0.51,"626,688",1.17,256,256,12.19,0.00,86.23,9.44,344.93,"18,432","73,728","93,700","73,728","294,912","296,521","74,180",0,"73,728","74,324","195,844",15.26,40.22,"74,324","195,844"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"   49,    2,   36","  256,    1,    1","5,051,444",3.72,"3,681,969.63",2.20,"551,271,168",1.35,256,"3,528",67.97,0.92,248.63,231.21,62.18,"18,051,548","1,806,336","19,985,706","28,889,565","7,225,344","21,608,256","14,932,077","14,386,793","14,698,776","14,909,051","7,138,187",19.77,9.46,"14,909,051","7,138,187"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","822,156",0.61,"595,658.90",0.98,"39,562,240",1.35,256,"8,192",17.79,0.23,380.96,102.76,169.32,"1,806,336","2,179,072","4,006,269","7,225,344","3,211,264","3,213,351","7,266,873",0,"7,225,344","7,263,933","3,212,478",59.16,26.16,"7,263,933","3,212,478"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","516,045",0.38,"375,602.41",2.44,"62,218,240",1.34,64,"100,352",44.61,0.10,271.17,102.76,269.15,"827,032","802,816","1,645,500","3,235,561","3,211,264","3,237,713","3,233,152","24,098","3,211,296","3,232,782","3,199,750",41.93,41.51,"3,232,782","3,199,750"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","516,727",0.38,"370,173.71",0.22,"5,619,712",1.36,64,"100,352",4.58,0.10,270.99,102.76,270.99,"802,816","802,816","1,613,029","3,211,264","3,211,264","3,213,356","3,224,564",0,"3,211,264","3,234,930","3,194,146",41.93,41.40,"3,234,930","3,194,146"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","1,018,351",0.75,"755,049.50",0.72,"36,786,176",1.36,256,"8,192",16.43,0.23,309.06,231.21,310.11,"3,878,168","1,806,336","5,718,608","7,202,306","7,225,344","11,984,065","3,248,961","4,753,534","3,214,914","3,225,709","7,129,991",21.21,46.89,"3,225,709","7,129,991"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    8,   32,    1","   32,    8,    1","31,656",0.03,"20,801.10",0.44,"626,688",1.14,256,256,12.49,0.00,85.63,9.44,342.52,"18,432","73,728","93,432","73,728","294,912","296,571","74,030",0,"73,728","79,506","197,814",16.72,41.61,"79,506","197,814"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[18892] python3.8,"   49,    2,   36","  256,    1,    1","5,050,816",3.70,"3,679,553.22",2.20,"551,271,168",1.36,256,"3,528",67.99,0.92,249.60,231.21,62.43,"18,051,797","1,806,336","19,963,833","28,889,823","7,225,344","21,607,966","14,848,155","14,387,055","14,694,120","14,900,371","7,137,418",19.76,9.46,"14,900,371","7,137,418"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"   32,  256,    1","  256,    1,    1","820,743",0.60,"604,302.07",0.96,"39,562,240",1.35,256,"8,192",17.78,0.23,382.46,102.76,169.98,"1,806,336","2,179,072","3,987,317","7,225,344","3,211,264","3,213,285","7,253,003",0,"7,225,344","7,255,933","3,136,831",59.19,25.59,"7,255,933","3,136,831"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","516,828",0.38,"375,814.62",2.43,"62,218,240",1.34,64,"100,352",44.54,0.10,270.42,102.76,268.43,"826,819","802,816","1,632,329","3,235,367","3,211,264","3,241,925","3,215,880","24,163","3,211,296","3,217,424","3,122,402",41.67,40.44,"3,217,424","3,122,402"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"100352,    1,    1","   64,    1,    1","507,727",0.38,"370,952.01",0.22,"5,619,712",1.35,64,"100,352",4.66,0.10,273.81,102.76,273.81,"802,816","802,816","1,610,047","3,211,264","3,211,264","3,213,365","3,253,482",0,"3,211,264","3,214,938","3,123,560",42.41,41.21,"3,214,938","3,123,560"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[18892] python3.8,"25088,    1,    1","  256,    1,    1","450,392",0.33,"329,358.40",1.86,"41,545,728",1.34,256,"25,088",34.14,0.11,315.06,77.07,230.65,"1,416,178","602,112","2,042,464","3,294,050","2,408,448","2,865,574","3,226,441","452,948","3,211,264","3,211,721","2,327,764",47.76,34.61,"3,211,721","2,327,764"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    8,  256,    1","  256,    1,    1","251,651",0.19,"185,109.97",0.77,"9,691,136",1.33,256,"2,048",17.77,0.05,242.73,57.80,307.72,"598,206","658,919","1,263,739","1,424,760","1,806,336","2,627,766","805,003","818,016","804,278","804,597","1,723,010",21.40,45.82,"804,597","1,723,010"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"    8,   64,    1","   32,    8,    1","80,170",0.05,"46,024.87",0.40,"1,253,376",1.47,256,512,9.81,0.00,86.69,18.87,346.75,"36,864","147,456","186,070","147,456","589,824","591,475","151,952",0,"147,456","149,290","564,278",12.47,47.14,"149,290","564,278"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"   13,    8,   36","  128,    1,    1","2,682,196",1.97,"1,939,750.44",2.26,"297,513,216",1.36,128,"3,744",68.09,0.71,359.75,115.61,58.83,"11,254,386","903,168","12,227,558","22,092,438","3,612,672","23,576,055","2,558,023","19,954,688","2,435,152","2,594,807","3,525,773",6.48,8.80,"2,594,807","3,525,773"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","422,725",0.31,"299,472.32",0.99,"20,114,432",1.36,256,"4,096",17.61,0.12,373.09,66.06,213.20,"1,378,941","972,173","2,361,079","3,612,672","2,064,384","2,066,456","3,624,377",0,"3,612,672","3,628,315","1,533,197",57.48,24.29,"3,628,315","1,533,197"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","275,595",0.19,"190,013.34",2.41,"31,109,120",1.42,64,"50,176",41.82,0.05,268.55,51.38,266.05,"415,837","401,408","840,159","1,620,130","1,605,632","1,622,131","1,605,704","14,288","1,605,696","1,606,182","1,516,641",39.00,36.83,"1,606,182","1,516,641"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","251,662",0.19,"182,135.04",0.23,"2,809,856",1.33,64,"50,176",4.71,0.05,271.31,51.38,271.31,"401,408","401,408","804,230","1,605,632","1,605,632","1,607,653","1,614,310",0,"1,605,632","1,606,204","1,516,682",42.75,40.37,"1,606,204","1,516,682"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","489,869",0.36,"351,717.69",0.81,"19,382,272",1.34,256,"4,096",18.23,0.09,251.71,115.61,317.68,"1,201,095","1,318,030","2,521,353","2,862,657","3,612,672","5,267,185","1,609,763","1,651,392","1,608,396","1,636,873","3,605,719",22.37,49.28,"1,636,873","3,605,719"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","141,663",0.10,"96,846.03",0.38,"2,506,752",1.39,256,"1,024",11.10,0.01,93.03,37.75,372.13,"73,728","294,912","371,083","294,912","1,179,648","1,181,287","295,364",0,"294,912","299,406","1,152,237",14.15,54.46,"299,406","1,152,237"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"   13,    8,   36","  128,    1,    1","5,226,460",3.83,"3,783,326.41",2.26,"581,697,792",1.36,128,"3,744",69.64,1.41,369.36,115.61,30.18,"22,536,189","903,168","23,557,949","44,212,228","3,612,672","40,184,607","8,754,267","36,401,648","8,535,168","8,719,589","3,607,519",11.17,4.62,"8,719,589","3,607,519"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","412,292",0.31,"297,787.51",0.99,"20,114,432",1.32,256,"4,096",18.03,0.12,372.67,66.06,212.95,"1,380,117","972,224","2,356,129","3,612,672","2,064,384","2,066,528","3,740,403",0,"3,612,672","3,628,079","1,531,757",58.89,24.86,"3,628,079","1,531,757"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","259,843",0.19,"187,400.04",2.44,"31,109,120",1.34,64,"50,176",44.35,0.05,269.43,51.38,266.98,"415,615","401,408","824,238","1,619,926","1,605,632","1,622,290","1,607,236","14,286","1,605,696","1,612,558","1,517,093",41.51,39.05,"1,612,558","1,517,093"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","251,517",0.19,"182,798.63",0.23,"2,809,856",1.32,64,"50,176",4.71,0.05,270.67,51.38,270.67,"401,408","401,408","808,202","1,605,632","1,605,632","1,607,653","1,606,396",0,"1,605,632","1,631,148","1,516,303",43.43,40.38,"1,631,148","1,516,303"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","489,718",0.36,"353,924.60",0.81,"19,382,272",1.35,256,"4,096",18.24,0.09,253.80,115.61,320.44,"1,198,576","1,319,385","2,533,628","2,861,087","3,612,672","5,265,540","1,633,371","1,650,811","1,607,612","1,629,773","3,527,905",22.29,48.24,"1,629,773","3,527,905"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","144,816",0.11,"92,494.41",0.40,"2,506,752",1.34,256,"1,024",10.87,0.01,87.69,37.75,350.77,"73,728","294,912","371,976","294,912","1,179,648","1,181,660","295,754",0,"294,912","297,614","1,079,575",13.76,49.91,"297,614","1,079,575"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"   13,    8,   36","  128,    1,    1","5,226,430",3.84,"3,783,186.91",2.26,"581,697,792",1.35,128,"3,744",69.64,1.41,368.86,115.61,30.14,"22,535,834","903,168","23,517,446","44,211,885","3,612,672","39,823,937","8,764,939","36,510,096","8,473,718","8,735,869","3,610,388",11.19,4.63,"8,735,869","3,610,388"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","423,879",0.31,"299,610.13",0.99,"20,114,432",1.36,256,"4,096",17.57,0.12,373.83,66.06,213.62,"1,379,642","972,127","2,356,264","3,612,672","2,064,384","2,066,548","3,635,409",0,"3,612,672","3,623,433","1,533,438",57.25,24.23,"3,623,433","1,533,438"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","261,902",0.19,"187,220.38",2.44,"31,109,120",1.35,64,"50,176",43.99,0.05,268.54,51.38,266.14,"415,893","401,408","823,756","1,620,220","1,605,632","1,622,658","1,605,966","14,770","1,605,696","1,661,960","1,517,587",42.48,38.79,"1,661,960","1,517,587"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","251,036",0.19,"182,785.03",0.23,"2,809,856",1.33,64,"50,176",4.72,0.05,273.77,51.38,273.77,"401,408","401,408","808,351","1,605,632","1,605,632","1,607,325","1,616,666",0,"1,605,632","1,606,356","1,518,035",42.85,40.50,"1,606,356","1,518,035"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","481,725",0.36,"347,398.01",0.82,"19,382,272",1.35,256,"4,096",18.56,0.09,257.13,115.61,324.53,"1,197,669","1,320,368","2,547,231","2,862,075","3,612,672","5,263,218","1,639,979","1,651,941","1,608,850","1,653,679","3,605,243",22.99,50.12,"1,653,679","3,605,243"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","133,202",0.10,"93,280.82",0.40,"2,506,752",1.28,256,"1,024",11.82,0.01,91.39,37.75,365.56,"73,728","294,912","370,507","294,912","1,179,648","1,181,663","295,078",0,"294,912","306,106","1,078,431",15.37,54.15,"306,106","1,078,431"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"   13,    8,   36","  128,    1,    1","5,222,164",3.83,"3,783,386.12",2.26,"581,697,792",1.36,128,"3,744",69.57,1.41,368.95,115.61,30.15,"22,535,954","903,168","23,582,873","44,212,022","3,612,672","40,139,890","8,619,823","36,596,145","8,465,492","8,708,739","3,530,715",11.17,4.53,"8,708,739","3,530,715"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    8,  512,    1","  256,    1,    1","410,928",0.31,"298,452.76",0.99,"20,114,432",1.33,256,"4,096",18.09,0.12,377.18,66.06,215.53,"1,378,899","972,272","2,353,700","3,612,672","2,064,384","2,066,407","3,613,651",0,"3,612,672","3,619,577","1,609,191",58.95,26.21,"3,619,577","1,609,191"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","259,638",0.19,"187,795.49",2.44,"31,109,120",1.34,64,"50,176",44.36,0.05,268.73,51.38,266.32,"415,858","401,408","822,141","1,620,158","1,605,632","1,622,490","1,636,336","14,300","1,605,696","1,612,566","1,594,358",41.55,41.08,"1,612,566","1,594,358"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"50176,    1,    1","   64,    1,    1","251,527",0.19,"182,079.46",0.23,"2,809,856",1.33,64,"50,176",4.71,0.05,272.51,51.38,272.51,"401,408","401,408","805,226","1,605,632","1,605,632","1,607,322","1,612,052",0,"1,605,632","1,613,196","1,516,699",42.95,40.38,"1,613,196","1,516,699"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[18892] python3.8,"12544,    1,    1","  256,    1,    1","225,584",0.17,"163,219.13",1.87,"20,772,864",1.33,256,"12,544",34.10,0.05,313.61,38.54,228.64,"866,165","301,056","1,173,030","1,653,233","1,204,224","1,542,223","1,631,179","336,352","1,605,632","1,609,417","1,200,507",47.77,35.63,"1,609,417","1,200,507"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","152,353",0.11,"102,524.81",0.74,"5,128,192",1.35,256,"1,024",15.74,0.01,117.54,37.75,337.04,"164,101","294,912","464,036","411,165","1,179,648","1,233,471","405,111","51,290","401,444","413,203","1,084,123",18.16,47.65,"413,203","1,084,123"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","146,570",0.11,"102,489.53",0.36,"2,506,752",1.31,256,"1,024",10.73,0.01,84.96,37.75,339.86,"73,728","294,912","373,884","294,912","1,179,648","1,181,297","298,870",0,"294,912","297,120","1,081,077",13.56,49.32,"297,120","1,081,077"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"    4,    8,   36","  128,    1,    1","1,653,626",1.21,"1,169,055.04",2.25,"178,983,936",1.35,128,"1,152",67.66,0.45,372.26,37.75,31.07,"7,053,341","294,912","7,376,268","14,131,260","1,179,648","13,368,971","2,649,481","12,212,381","2,556,968","2,652,545","1,095,119",10.74,4.43,"2,652,545","1,095,119"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","123,769",0.10,"87,546.01",0.86,"5,120,000",1.28,256,"1,024",15.33,0.04,392.56,14.67,152.57,"294,912","200,102","497,201","1,179,648","458,421","460,102","1,187,205",0,"1,179,648","1,198,595","397,606",64.75,21.48,"1,198,595","397,606"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","68,420",0.05,"46,675.82",2.45,"7,777,280",1.30,64,"12,544",42.44,0.01,250.19,12.85,247.32,"104,990","100,352","207,721","406,114","401,408","407,855","402,632","4,636","401,472","410,352","313,739",40.02,30.60,"410,352","313,739"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","64,954",0.05,"41,256.47",0.25,"702,464",1.40,64,"12,544",4.57,0.01,277.60,12.85,277.60,"100,352","100,352","202,480","401,408","401,408","403,977","401,414",0,"401,408","407,420","303,512",42.00,31.29,"407,420","303,512"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","148,841",0.11,"102,466.46",0.74,"5,128,192",1.35,256,"1,024",16.12,0.01,120.24,37.75,344.72,"163,684","294,912","464,431","411,365","1,179,648","1,232,652","404,149","52,055","401,456","402,237","1,084,768",18.09,48.80,"402,237","1,084,768"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","159,432",0.11,"104,831.49",0.35,"2,506,752",1.41,256,"1,024",9.87,0.01,84.07,37.75,336.27,"73,728","294,912","370,918","294,912","1,179,648","1,181,309","297,906",0,"294,912","306,632","1,080,378",12.88,45.37,"306,632","1,080,378"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"    4,    8,   36","  128,    1,    1","1,655,558",1.22,"1,169,836.71",2.25,"178,983,936",1.35,128,"1,152",67.53,0.45,371.54,37.75,31.02,"7,053,792","294,912","7,376,774","14,131,727","1,179,648","13,368,396","2,670,231","12,200,387","2,544,648","2,572,309","1,168,319",10.41,4.73,"2,572,309","1,168,319"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","128,265",0.10,"86,584.24",0.87,"5,120,000",1.34,256,"1,024",14.83,0.04,396.39,14.67,154.04,"294,912","200,194","498,090","1,179,648","458,425","460,150","1,180,575",0,"1,179,648","1,186,163","331,081",61.92,17.28,"1,186,163","331,081"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","66,572",0.05,"46,023",2.49,"7,777,280",1.27,64,"12,544",43.62,0.01,251.01,12.85,248.09,"105,020","100,352","207,154","406,132","401,408","408,040","404,406","4,816","401,472","402,784","384,153",40.35,38.49,"402,784","384,153"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","58,758",0.05,"40,802.82",0.25,"702,464",1.26,64,"12,544",5.05,0.01,277.02,12.85,277.02,"100,352","100,352","203,214","401,408","401,408","403,095","404,068",0,"401,408","404,960","389,584",46.16,44.41,"404,960","389,584"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","145,872",0.11,"102,316.10",0.74,"5,128,192",1.32,256,"1,024",16.45,0.01,119.69,37.75,343.32,"164,111","294,912","459,496","411,332","1,179,648","1,233,043","402,635","50,445","401,472","409,691","1,082,573",18.80,49.68,"409,691","1,082,573"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","146,330",0.12,"102,477.12",0.36,"2,506,752",1.25,256,"1,024",10.76,0.01,81.02,37.75,324.08,"73,728","294,912","371,149","294,912","1,179,648","1,181,715","297,238",0,"294,912","302,252","1,081,435",13.82,49.44,"302,252","1,081,435"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"    4,    8,   36","  128,    1,    1","1,654,196",1.21,"1,168,831.38",2.25,"178,983,936",1.35,128,"1,152",67.72,0.45,372.33,37.75,31.08,"7,053,871","294,912","7,359,081","14,131,784","1,179,648","13,383,464","2,595,617","12,204,587","2,567,368","2,643,103","1,170,975",10.70,4.74,"2,643,103","1,170,975"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","123,490",0.10,"87,747.25",0.86,"5,120,000",1.29,256,"1,024",15.38,0.04,396.92,14.67,154.23,"294,912","200,041","496,361","1,179,648","458,423","460,550","1,180,497",0,"1,179,648","1,184,273","332,628",64.12,18.01,"1,184,273","332,628"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","66,980",0.05,"46,605.65",2.45,"7,777,280",1.28,64,"12,544",43.36,0.01,252.25,12.85,249.32,"105,076","100,352","207,210","406,178","401,408","408,251","402,734","4,740","401,472","401,642","312,412",40.01,31.12,"401,642","312,412"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","58,542",0.05,"40,908.59",0.25,"702,464",1.18,64,"12,544",5.07,0.01,261.50,12.85,261.50,"100,352","100,352","203,554","401,408","401,408","403,087","404,952",0,"401,408","407,480","309,626",46.58,35.40,"407,480","309,626"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","149,199",0.11,"106,512.63",0.71,"5,128,192",1.29,256,"1,024",16.09,0.01,114.83,37.75,329.23,"165,211","294,912","462,911","411,535","1,179,648","1,234,130","412,197","51,795","401,440","406,171","1,083,401",18.22,48.61,"406,171","1,083,401"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[18892] python3.8,"   16,   64,    1","   32,    8,    1","159,600",0.12,"101,022.79",0.36,"2,506,752",1.37,256,"1,024",9.86,0.01,81.63,37.75,326.50,"73,728","294,912","370,104","294,912","1,179,648","1,181,306","299,928",0,"294,912","297,718","1,081,512",12.49,45.38,"297,718","1,081,512"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[18892] python3.8,"    4,    8,   36","  128,    1,    1","1,654,276",1.22,"1,169,090.82",2.25,"178,983,936",1.35,128,"1,152",67.71,0.45,371.25,37.75,30.99,"7,053,846","294,912","7,390,356","14,131,748","1,179,648","13,377,361","2,612,363","12,200,499","2,547,240","2,646,975","1,169,875",10.71,4.74,"2,646,975","1,169,875"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[18892] python3.8,"    2,  512,    1","  256,    1,    1","130,012",0.09,"87,230.76",0.86,"5,120,000",1.38,256,"1,024",14.61,0.04,403.44,14.67,156.75,"294,912","200,142","497,254","1,179,648","458,404","460,075","1,183,971",0,"1,179,648","1,181,907","331,321",60.88,17.07,"1,181,907","331,321"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","69,307",0.05,"46,376.50",2.47,"7,777,280",1.31,64,"12,544",41.87,0.01,248.19,12.85,245.36,"105,071","100,352","210,877","406,187","401,408","408,029","402,570","4,696","401,472","404,898","384,386",39.02,37.05,"404,898","384,386"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"12544,    1,    1","   64,    1,    1","65,507",0.05,"40,865.69",0.25,"702,464",1.42,64,"12,544",4.53,0.01,278.76,12.85,278.76,"100,352","100,352","202,640","401,408","401,408","403,135","401,412",0,"401,408","403,910","312,620",41.29,31.96,"403,910","312,620"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[18892] python3.8," 3136,    1,    1","  256,    1,    1","58,435",0.05,"39,681.72",1.92,"5,193,216",1.28,256,"3,136",33.11,0.01,293.91,9.63,213.06,"220,494","75,264","299,594","416,355","301,056","441,739","404,145","143,422","401,408","402,905","218,857",46.15,25.07,"402,905","218,857"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[18892] python3.8,"16384,    1,    1","   32,    8,    1","301,105",0.22,"218,816.99",2.71,"40,339,608",1.36,256,"16,384",49.85,0.00,16.49,6.08,27.47,"88,637","117,684","220,492","114,166","190,075","241,695","109,652","48,056","100,352","110,820","22,626",2.46,0.50,"110,820","22,626"
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"  512,    1,    1","   64,    1,    1","7,942",0.01,"2,243.99",1.45,"221,184",1.57,64,512,10.78,0.00,90.90,0.52,104.36,"3,568","4,096","8,896","14,272","16,384","31,812",517,"13,760",512,"1,507","3,415",1.27,2.87,"1,507","3,415"
99,volta_sgemm_64x32_sliced1x4_tn,volta_sgemm_64x32_sliced1x4_tn,[18892] python3.8,"   64,    1,    2","  256,    1,    1","2,147,864",1.58,"1,340,891.38",1.51,"137,609,728",1.35,256,128,35.39,0.62,390.24,1.05,0.67,"4,824,384","8,320","4,881,917","19,296,000","32,896","6,217,174","13,177,185","6,174,699","13,128,026","13,206,595","29,586",41.18,0.09,"13,206,595","29,586"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"  512,    1,    1","   64,    1,    1","4,588",0.00,"1,754.06",0.24,"28,672",1.13,64,512,2.63,0.00,130.03,0.52,130.03,"4,096","4,096","9,392","16,384","16,384","18,155","17,088",0,"16,384","16,558",0,24.13,0,"16,558",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[18892] python3.8,"  200,    1,    1","  256,    1,    1","5,612",0.00,"2,607.01",1.42,"252,352",1.21,256,200,17.07,0.00,113.78,0.66,142.22,"4,096","5,120","10,498","16,384","20,480","22,109","17,728",0,"16,384","16,392",0,19.40,0,"16,392",0
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"  512,    1,    1","   64,    1,    1","6,247",0.01,"2,768.69",1.17,"221,184",1.02,64,512,13.79,0.00,74.72,0.52,85.78,"3,568","4,096","8,919","14,272","16,384","31,798",931,"13,760",512,531,0,0.57,0,531,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[18892] python3.8,"   32,    1,    1","  256,    1,    1","382,224",0.28,"161,860.90",1.92,"21,186,816",1.36,256,32,32.51,0.08,301.22,0.52,1.87,"659,456","4,096","673,673","2,637,824","16,384","527,602","2,145,153","506,536","2,131,668","2,137,925","2,163",37.46,0.04,"2,137,925","2,163"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[18892] python3.8,"  512,    1,    1","   64,    1,    1","4,977",0.00,"1,898.34",0.22,"28,672",1.23,64,512,2.43,0.00,130.03,0.52,130.03,"4,096","4,096","9,556","16,384","16,384","17,623","16,972",0,"16,384","16,452",0,22.08,0,"16,452",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[18892] python3.8,"  200,    1,    1","  256,    1,    1","5,736",0.00,"2,463.57",1.51,"252,352",1.22,256,200,16.69,0.00,112.22,0.66,140.27,"4,096","5,120","11,088","16,384","20,480","22,111","16,608",0,"16,384","16,392",0,19.00,0,"16,392",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[18892] python3.8,"  125,    1,    1","   64,    1,    1","4,644",0.01,"1,826.53",0.43,"54,000",0.82,64,125,4.52,0.00,19.63,0.13,22.60,"1,405","1,000","4,274","3,475","4,000","8,418","1,129","3,366",126,137,0,0.20,0,137,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[18892] python3.8,"    8,    1,    6","  256,    1,    1","83,111",0.06,"52,166.54",1.63,"5,766,144",1.33,256,48,39.14,0.02,402.99,0.77,12.45,"298,928","8,427","308,925","776,912","24,000","333,868","539,165","308,317","538,704","539,217","1,142",43.32,0.09,"539,217","1,142"
108,splitKreduce_kernel,"void splitKreduce_kernel<float, float, float>(cublasSplitKParams<T3>, const T1 *, const T2 *, T2 *, const T3 *, const T3 *)",[18892] python3.8,"  250,    1,    1","  128,    1,    1","6,495",0.01,"3,072.21",0.63,"131,000",1.08,128,250,8.19,0.00,149.73,0.13,21.39,"7,000","1,000","9,394","28,000","4,000","5,570","28,715",0,"28,000","28,259",0,28.97,0,"28,259",0
