ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[10881] python3.8,"  393,    1,    1","  128,    1,    1","3,924",0.00,977.72,1.84,"122,352",1.15,128,393,12.02,0,0,0.32,93.93,0,"2,972","3,759",0,"10,036","11,161",1,0,0,65,0,0.11,0,65,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[10881] python3.8," 6272,    1,    1","  128,    1,    1","1,212,272",0.89,"603,258.90",2.33,"95,535,104",1.36,128,"6,272",33.50,0.06,70.40,205.52,231.20,"855,490","1,605,632","2,476,006","1,955,461","6,422,528","7,959,326","455,288","1,534,618","451,832","511,990","6,335,412",2.83,35.01,"511,990","6,335,412"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"200704,    1,    1","   64,    1,    1","1,333,394",0.98,"665,565.28",2.75,"124,436,480",1.36,64,"200,704",34.32,0.21,209.98,205.52,209.84,"1,609,986","1,605,632","3,233,415","6,426,883","6,422,528","6,428,813","6,454,872","4,290","6,422,656","6,459,594","6,333,997",32.45,31.82,"6,459,594","6,333,997"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"200704,    1,    1","   64,    1,    1","1,025,240",0.75,"512,310.32",0.32,"11,239,424",1.36,64,"200,704",4.61,0.21,272.31,205.52,272.31,"1,605,632","1,605,632","3,232,489","6,422,528","6,422,528","6,424,502","6,465,020",0,"6,422,528","6,441,396","6,333,741",42.08,41.38,"6,441,396","6,333,741"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[10881] python3.8,"    2,   16,    1","   32,    4,    1","4,340",0.00,"1,036.90",0.64,"45,056",1.14,128,32,3.91,0.00,43.03,0.26,68.84,"2,093","2,048","5,001","5,120","8,192","10,400","4,716",991,"4,608","4,820",0,7.38,0,"4,820",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[10881] python3.8,"   32,   28,   14","  256,    1,    1","11,476,821",8.38,"5,687,945.46",1.59,"614,254,592",1.37,256,"12,544",29.05,2.63,313.50,205.52,24.52,"27,648,000","3,211,264","31,155,518","82,124,800","6,422,528","75,929,369","19,298,527","69,505,383","18,701,590","19,362,736","6,383,093",11.30,3.73,"19,362,736","6,383,093"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"200704,    1,    1","   64,    1,    1","1,333,678",0.98,"665,467.81",2.75,"124,436,480",1.36,64,"200,704",34.32,0.21,210.15,205.52,210.00,"1,609,985","1,605,632","3,240,556","6,426,881","6,422,528","6,433,659","6,460,328","4,291","6,422,656","6,468,790","6,335,185",32.49,31.82,"6,468,790","6,335,185"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"200704,    1,    1","   64,    1,    1","1,031,470",0.75,"512,256.28",0.32,"11,239,424",1.37,64,"200,704",4.58,0.21,272.37,205.52,272.37,"1,605,632","1,605,632","3,308,505","6,422,528","6,422,528","6,424,446","6,533,940",0,"6,422,528","6,499,876","6,326,135",42.21,41.08,"6,499,876","6,326,135"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[10881] python3.8,"50176,    1,    1","  256,    1,    1","1,189,003",0.88,"592,868.84",2.06,"83,091,456",1.36,256,"50,176",25.70,0.22,250.82,154.14,176.10,"1,716,859","1,204,224","2,934,871","6,867,436","4,816,896","5,260,791","6,457,317","439,008","6,422,528","6,452,075","4,810,247",36.35,27.10,"6,452,075","4,810,247"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   49,   64,    1","  256,    1,    1","505,562",0.37,"250,833.13",0.92,"15,705,088",1.35,256,"3,136",14.46,0.12,310.56,115.61,309.94,"2,030,257","903,168","2,939,385","3,619,691","3,612,672","6,155,921","1,627,273","2,542,127","1,605,682","1,623,817","3,597,136",21.51,47.66,"1,623,817","3,597,136"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    2,   16,    1","   32,    8,    1","6,378",0.01,"2,109.79",0.55,"78,336",1.24,256,32,7.69,0.00,57.24,1.18,228.97,"2,304","9,216","13,139","9,216","36,864","39,191","9,316",0,"9,216","9,348",0,9.79,0,"9,348",0
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   98,    1,   36","  256,    1,    1","2,191,839",1.60,"1,088,935.16",2.11,"156,360,960",1.37,256,"3,528",39.55,0.23,143.02,231.21,144.15,"4,459,710","1,806,336","6,295,044","7,169,217","7,225,344","10,764,855","3,711,433","3,538,521","3,649,536","3,717,023","7,136,287",11.36,21.81,"3,717,023","7,136,287"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   49,  128,    1","  256,    1,    1","817,955",0.60,"407,382.75",1.17,"32,363,520",1.36,256,"6,272",14.56,0.23,384.82,102.76,171.03,"1,806,336","1,605,632","3,427,525","7,225,344","3,211,264","3,213,153","7,247,513",0,"7,225,344","7,254,999","3,212,406",59.41,26.30,"7,254,999","3,212,406"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"100352,    1,    1","   64,    1,    1","669,482",0.49,"333,120.15",2.75,"62,218,240",1.36,64,"100,352",34.19,0.10,209.41,102.76,208.85,"811,481","802,816","1,624,985","3,219,929","3,211,264","3,221,941","3,224,784","8,646","3,211,328","3,237,422","3,122,481",32.39,31.24,"3,237,422","3,122,481"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"100352,    1,    1","   64,    1,    1","510,096",0.38,"253,822.16",0.33,"5,619,712",1.34,64,"100,352",4.63,0.10,270.90,102.76,270.90,"802,816","802,816","1,616,623","3,211,264","3,211,264","3,213,538","3,232,156",0,"3,211,264","3,232,590","3,122,382",42.44,41.00,"3,232,590","3,122,382"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   49,  128,    1","  256,    1,    1","1,007,226",0.74,"500,022.82",0.92,"31,410,176",1.36,256,"6,272",14.51,0.23,313.55,231.21,312.88,"4,061,453","1,806,336","5,922,403","7,240,160","7,225,344","12,314,682","3,252,329","5,083,297","3,211,744","3,248,757","7,208,530",21.60,47.94,"3,248,757","7,208,530"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    4,   16,    1","   32,    8,    1","8,875",0.01,"3,257.15",0.71,"156,672",1.32,256,64,11.07,0.00,87.77,2.36,351.09,"4,608","18,432","24,306","18,432","73,728","75,031","19,124",0,"18,432","18,436",8,13.88,0.01,"18,436",8
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   98,    1,   36","  256,    1,    1","3,913,892",2.87,"1,951,853.29",2.17,"287,997,696",1.36,256,"3,528",43.87,0.46,160.77,231.21,80.47,"9,016,399","1,806,336","10,987,931","14,435,409","7,225,344","14,403,243","7,446,411","7,172,530","7,299,344","7,436,531","7,138,453",12.73,12.22,"7,436,531","7,138,453"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   49,  128,    1","  256,    1,    1","818,242",0.60,"405,668.81",1.17,"32,363,520",1.36,256,"6,272",14.55,0.23,383.96,102.76,170.65,"1,806,336","1,605,632","3,426,882","7,225,344","3,211,264","3,214,201","7,254,065",0,"7,225,344","7,419,507","3,139,239",60.73,25.70,"7,419,507","3,139,239"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"100352,    1,    1","   64,    1,    1","670,693",0.49,"333,121",2.75,"62,218,240",1.36,64,"100,352",34.13,0.10,209.23,102.76,208.67,"811,503","802,816","1,625,789","3,219,951","3,211,264","3,221,997","3,230,818","8,642","3,211,312","3,221,588","3,193,634",32.17,31.89,"3,221,588","3,193,634"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"100352,    1,    1","   64,    1,    1","510,731",0.38,"256,763.07",0.32,"5,619,712",1.35,64,"100,352",4.62,0.10,272.67,102.76,272.67,"802,816","802,816","1,617,740","3,211,264","3,211,264","3,213,150","3,233,762",0,"3,211,264","3,233,140","3,122,741",42.40,40.95,"3,233,140","3,122,741"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[10881] python3.8,"25088,    1,    1","  256,    1,    1","594,503",0.44,"293,972.21",2.08,"41,545,728",1.36,256,"25,088",25.70,0.11,244.24,77.07,176.48,"1,100,281","602,112","1,720,630","3,338,074","2,408,448","2,534,446","3,232,601","126,874","3,211,264","3,235,625","2,327,834",36.45,26.23,"3,235,625","2,327,834"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   16,  128,    1","  256,    1,    1","254,380",0.19,"125,197.29",1.08,"9,196,544",1.37,256,"2,048",16.38,0.06,309.63,57.80,310.69,"966,062","451,584","1,425,631","1,800,576","1,806,336","2,995,086","804,015","1,186,984","802,938","812,349","1,794,261",21.39,47.25,"812,349","1,794,261"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    4,   32,    1","   32,    8,    1","14,046",0.01,"5,354",0.86,"313,344",1.15,256,128,14.04,0.00,97.52,4.72,390.10,"9,216","36,864","47,363","36,864","147,456","152,165","37,212",0,"36,864","36,998","58,008",17.62,27.63,"36,998","58,008"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   25,    2,   36","  256,    1,    1","1,998,126",1.47,"993,166.78",2.18,"146,937,600",1.36,256,"1,800",43.84,0.23,159.20,115.61,78.88,"4,581,470","903,168","5,605,144","7,290,981","3,612,672","8,981,460","2,256,911","5,371,297","2,002,156","2,073,057","3,524,221",6.95,11.81,"2,073,057","3,524,221"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","409,227",0.30,"203,173.46",1.43,"19,781,120",1.34,256,"4,096",17.79,0.12,379.68,51.38,168.75,"903,168","1,089,535","2,003,940","3,612,672","1,605,632","1,607,344","3,624,917",0,"3,612,672","3,695,927","1,533,665",60.49,25.10,"3,695,927","1,533,665"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","336,215",0.25,"166,794.53",2.74,"31,109,120",1.36,64,"50,176",34.07,0.05,209.26,51.38,207.34,"416,153","401,408","825,008","1,620,396","1,605,632","1,622,475","1,618,544","14,796","1,605,664","1,614,360","1,516,746",32.16,30.22,"1,614,360","1,516,746"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","252,844",0.19,"125,075.91",0.33,"2,809,856",1.33,64,"50,176",4.67,0.05,270.31,51.38,270.31,"401,408","401,408","804,042","1,605,632","1,605,632","1,607,391","1,606,222",0,"1,605,632","1,610,770","1,517,944",42.67,40.21,"1,610,770","1,517,944"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","498,130",0.36,"244,921.25",1.10,"18,393,088",1.38,256,"4,096",16.71,0.12,319.48,115.61,320.16,"1,934,658","903,168","2,847,914","3,604,752","3,612,672","5,992,106","1,757,979","2,380,047","1,605,740","1,749,747","3,523,168",23.53,47.38,"1,749,747","3,523,168"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    8,   32,    1","   32,    8,    1","33,531",0.03,"13,913.54",0.66,"626,688",1.24,256,256,11.72,0.00,87.77,9.44,351.09,"18,432","73,728","93,076","73,728","294,912","296,170","73,988",0,"73,728","74,268","271,584",14.83,54.24,"74,268","271,584"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   25,    2,   36","  256,    1,    1","3,760,257",2.76,"1,874,349.18",2.21,"281,260,800",1.36,256,"1,800",46.36,0.47,169.33,115.61,41.93,"9,171,292","903,168","10,140,881","14,590,300","3,612,672","12,334,788","6,104,721","8,738,937","5,941,648","6,145,511","3,523,550",10.95,6.28,"6,145,511","3,523,550"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","410,205",0.30,"202,809.24",1.43,"19,781,120",1.35,256,"4,096",17.75,0.12,379.48,51.38,168.66,"903,168","1,089,536","2,004,179","3,612,672","1,605,632","1,608,997","3,613,921",0,"3,612,672","3,629,233","1,535,729",59.26,25.08,"3,629,233","1,535,729"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","336,406",0.25,"166,894.21",2.74,"31,109,120",1.36,64,"50,176",34.04,0.05,209.39,51.38,207.50,"416,098","401,408","826,248","1,620,344","1,605,632","1,622,565","1,611,544","14,912","1,605,664","1,607,776","1,516,723",32.01,30.20,"1,607,776","1,516,723"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","252,321",0.19,"125,310.94",0.33,"2,809,856",1.33,64,"50,176",4.68,0.05,270.17,51.38,270.17,"401,408","401,408","823,168","1,605,632","1,605,632","1,608,508","1,627,476",0,"1,605,632","1,617,604","1,516,775",42.94,40.26,"1,617,604","1,516,775"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","494,670",0.36,"244,939.26",1.10,"18,393,088",1.37,256,"4,096",16.83,0.12,320.26,115.61,321.01,"1,933,898","903,168","2,852,739","3,604,648","3,612,672","5,993,425","1,609,851","2,378,135","1,605,694","1,628,067","3,594,574",22.04,48.67,"1,628,067","3,594,574"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    8,   32,    1","   32,    8,    1","33,386",0.03,"14,019.78",0.66,"626,688",1.11,256,256,11.77,0.00,78.94,9.44,315.75,"18,432","73,728","93,123","73,728","294,912","300,279","73,870",0,"73,728","73,972","191,974",14.85,38.54,"73,972","191,974"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   25,    2,   36","  256,    1,    1","3,761,598",2.76,"1,874,283.44",2.21,"281,260,800",1.36,256,"1,800",46.35,0.47,169.29,115.61,41.92,"9,171,271","903,168","10,177,871","14,590,284","3,612,672","12,253,064","6,159,257","8,733,261","6,137,164","6,163,433","3,523,085",10.97,6.27,"6,163,433","3,523,085"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","414,764",0.30,"203,256.32",1.43,"19,781,120",1.36,256,"4,096",17.55,0.12,379.16,51.38,168.52,"903,168","1,089,536","1,999,083","3,612,672","1,605,632","1,607,344","3,630,395",0,"3,612,672","3,613,457","1,531,812",58.36,24.74,"3,613,457","1,531,812"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","336,440",0.25,"166,860.99",2.74,"31,109,120",1.36,64,"50,176",34.03,0.05,209.24,51.38,207.34,"416,449","401,408","823,954","1,620,694","1,605,632","1,627,742","1,625,576","15,125","1,605,664","1,623,928","1,517,082",32.33,30.20,"1,623,928","1,517,082"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","252,687",0.19,"124,802.47",0.33,"2,809,856",1.34,64,"50,176",4.67,0.05,272.79,51.38,272.79,"401,408","401,408","808,523","1,605,632","1,605,632","1,606,997","1,618,236",0,"1,605,632","1,625,262","1,516,870",43.07,40.20,"1,625,262","1,516,870"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","498,405",0.37,"259,229.09",1.04,"18,393,088",1.36,256,"4,096",16.71,0.12,315.54,115.61,316.24,"1,934,430","903,168","2,844,140","3,605,228","3,612,672","5,991,425","1,617,057","2,378,939","1,605,806","1,624,177","3,523,301",21.83,47.35,"1,624,177","3,523,301"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    8,   32,    1","   32,    8,    1","39,686",0.03,"14,023.35",0.66,"626,688",1.46,256,256,9.89,0.00,87.15,9.44,348.60,"18,432","73,728","93,528","73,728","294,912","296,207","76,250",0,"73,728","75,832","274,038",12.81,46.28,"75,832","274,038"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[10881] python3.8,"   25,    2,   36","  256,    1,    1","3,762,010",2.76,"1,874,194.22",2.21,"281,260,800",1.36,256,"1,800",46.35,0.47,169.31,115.61,41.92,"9,171,299","903,168","10,136,375","14,590,309","3,612,672","12,384,751","6,203,403","8,698,873","6,078,632","6,191,571","3,523,139",11.02,6.27,"6,191,571","3,523,139"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"   16,  256,    1","  256,    1,    1","410,919",0.31,"202,649.79",1.44,"19,781,120",1.32,256,"4,096",17.73,0.12,372.71,51.38,165.65,"903,168","1,089,536","2,001,103","3,612,672","1,605,632","1,607,376","3,623,979",0,"3,612,672","3,625,953","1,535,226",59.11,25.03,"3,625,953","1,535,226"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","338,296",0.25,"166,953.65",2.74,"31,109,120",1.36,64,"50,176",33.86,0.05,209.45,51.38,207.50,"416,263","401,408","819,068","1,620,514","1,605,632","1,622,312","1,615,768","14,818","1,605,664","1,618,614","1,516,721",32.05,30.03,"1,618,614","1,516,721"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"50176,    1,    1","   64,    1,    1","252,636",0.19,"125,295.66",0.33,"2,809,856",1.34,64,"50,176",4.67,0.05,272.00,51.38,272.00,"401,408","401,408","805,299","1,605,632","1,605,632","1,607,298","1,614,500",0,"1,605,632","1,614,108","1,591,440",42.80,42.20,"1,614,108","1,591,440"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[10881] python3.8,"12544,    1,    1","  256,    1,    1","291,837",0.22,"144,500.43",2.11,"20,772,864",1.35,256,"12,544",26.19,0.05,243.03,38.54,178.62,"706,245","301,056","1,014,474","1,639,546","1,204,224","1,428,226","1,619,203","220,376","1,605,632","1,606,355","1,124,190",36.87,25.80,"1,606,355","1,124,190"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    4,  256,    1","  256,    1,    1","127,746",0.10,"62,013.97",1.15,"4,845,568",1.33,256,"1,024",17.43,0.02,237.62,28.90,301.96,"300,055","332,239","635,278","710,592","903,168","1,313,658","407,311","406,603","401,484","405,223","819,049",21.25,42.95,"405,223","819,049"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"    8,   64,    1","   32,    8,    1","69,291",0.05,"31,860.96",0.58,"1,253,376",1.27,256,512,11.32,0.00,86.59,18.87,346.34,"36,864","147,456","187,690","147,456","589,824","591,164","147,934",0,"147,456","148,820","491,192",14.39,47.48,"148,820","491,192"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    7,    8,   36","  128,    1,    1","2,117,716",1.55,"1,045,444.47",2.25,"160,199,424",1.36,128,"2,016",46.12,0.36,233.68,57.80,37.22,"6,247,662","560,593","6,829,024","11,341,472","1,806,336","11,953,910","1,546,885","10,143,096","1,493,080","1,541,731","1,721,718",4.88,5.45,"1,541,731","1,721,718"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","208,118",0.15,"101,771.26",1.45,"10,057,216",1.34,256,"2,048",17.81,0.06,373.44,33.03,213.40,"690,868","485,482","1,178,890","1,806,336","1,032,192","1,033,922","1,808,335",0,"1,806,336","1,813,651","734,748",58.37,23.65,"1,813,651","734,748"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","171,114",0.13,"83,921.99",2.73,"15,554,560",1.35,64,"25,088",33.49,0.03,205.26,25.69,202.78,"210,485","200,704","414,498","812,678","802,816","819,327","808,810","9,731","802,880","817,274","714,239",32.00,27.96,"817,274","714,239"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","124,005",0.09,"60,841.88",0.34,"1,404,928",1.31,64,"25,088",4.76,0.03,272.23,25.69,272.23,"200,704","200,704","404,340","802,816","802,816","804,260","805,870",0,"802,816","804,276","713,912",43.44,38.56,"804,276","713,912"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","240,600",0.18,"117,544.96",1.21,"9,691,136",1.36,256,"2,048",18.50,0.05,258.81,57.80,326.94,"601,546","663,735","1,271,085","1,430,021","1,806,336","2,632,544","812,371","822,892","803,026","810,011","1,724,107",22.55,48.00,"810,011","1,724,107"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","162,309",0.11,"85,051.07",0.43,"2,506,752",1.42,256,"1,024",9.66,0.01,82.42,37.75,329.69,"73,728","294,912","372,000","294,912","1,179,648","1,181,350","301,132",0,"294,912","297,768","1,159,377",12.29,47.85,"297,768","1,159,377"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    7,    8,   36","  128,    1,    1","4,120,071",3.02,"2,034,779.76",2.26,"313,221,888",1.36,128,"2,016",47.28,0.73,240.45,57.80,19.14,"12,479,963","561,236","13,090,038","22,695,811","1,806,336","22,047,126","3,153,108","20,238,468","3,047,558","3,426,495","1,732,154",5.57,2.82,"3,426,495","1,732,154"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","208,821",0.16,"102,021",1.45,"10,057,216",1.32,256,"2,048",17.75,0.06,365.66,33.03,208.95,"691,075","485,673","1,181,512","1,806,336","1,032,192","1,033,858","1,813,677",0,"1,806,336","1,813,051","734,097",58.15,23.55,"1,813,051","734,097"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","172,486",0.13,"83,877.06",2.73,"15,554,560",1.37,64,"25,088",33.23,0.03,206.52,25.69,204.02,"210,484","200,704","415,835","812,643","802,816","814,196","803,808","10,015","802,880","808,282","714,404",31.39,27.75,"808,282","714,404"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","130,308",0.09,"60,769.16",0.34,"1,404,928",1.37,64,"25,088",4.53,0.03,270.58,25.69,270.58,"200,704","200,704","404,698","802,816","802,816","804,267","810,406",0,"802,816","809,204","790,549",41.59,40.63,"809,204","790,549"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","258,101",0.18,"117,357.35",1.21,"9,691,136",1.46,256,"2,048",17.25,0.05,259.62,57.80,327.77,"601,538","664,777","1,271,002","1,430,697","1,806,336","2,632,466","809,377","825,683","802,924","817,885","1,800,509",21.23,46.73,"817,885","1,800,509"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","156,935",0.12,"75,461.44",0.49,"2,506,752",1.29,256,"1,024",9.99,0.01,77.59,37.75,310.35,"73,728","294,912","372,602","294,912","1,179,648","1,180,966","302,216",0,"294,912","297,460","1,084,419",12.70,46.29,"297,460","1,084,419"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    7,    8,   36","  128,    1,    1","4,120,135",3.02,"2,034,143.88",2.26,"313,221,888",1.36,128,"2,016",47.28,0.73,240.53,57.80,19.14,"12,480,307","560,681","13,111,709","22,696,147","1,806,336","22,045,954","3,146,865","20,240,216","3,050,838","3,180,237","1,732,052",5.17,2.82,"3,180,237","1,732,052"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","213,000",0.16,"102,331.24",1.45,"10,057,216",1.36,256,"2,048",17.40,0.06,368.72,33.03,210.69,"690,174","485,526","1,180,397","1,806,336","1,032,192","1,033,565","1,811,115",0,"1,806,336","1,813,741","735,380",57.04,23.13,"1,813,741","735,380"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","170,352",0.13,"84,184.49",2.72,"15,554,560",1.35,64,"25,088",33.65,0.03,206.62,25.69,204.07,"210,463","200,704","416,892","812,633","802,816","820,798","809,474","9,920","802,880","810,816","714,338",31.89,28.09,"810,816","714,338"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","131,247",0.09,"60,538.94",0.34,"1,404,928",1.39,64,"25,088",4.50,0.03,272.88,25.69,272.88,"200,704","200,704","402,438","802,816","802,816","804,159","806,750",0,"802,816","808,210","713,913",41.24,36.43,"808,210","713,913"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","240,970",0.18,"116,847.78",1.22,"9,691,136",1.36,256,"2,048",18.46,0.05,258.26,57.80,326.23,"601,646","664,502","1,272,026","1,430,121","1,806,336","2,630,537","814,033","823,843","802,916","869,445","1,722,176",24.17,47.87,"869,445","1,722,176"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","156,344",0.12,"75,835.53",0.49,"2,506,752",1.29,256,"1,024",10.03,0.01,78.21,37.75,312.82,"73,728","294,912","372,795","294,912","1,179,648","1,181,313","303,346",0,"294,912","298,986","1,161,336",12.81,49.75,"298,986","1,161,336"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    7,    8,   36","  128,    1,    1","4,118,750",3.02,"2,034,808.15",2.26,"313,221,888",1.36,128,"2,016",47.31,0.73,240.51,57.80,19.14,"12,479,588","560,642","13,108,390","22,695,772","1,806,336","22,044,357","3,191,115","20,234,852","3,052,528","3,202,969","1,733,334",5.21,2.82,"3,202,969","1,733,334"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    4,  512,    1","  256,    1,    1","208,787",0.16,"102,180.74",1.45,"10,057,216",1.33,256,"2,048",17.76,0.06,368.34,33.03,210.48,"690,512","485,871","1,179,148","1,806,336","1,032,192","1,033,906","1,810,187",0,"1,806,336","1,807,081","734,018",57.98,23.55,"1,807,081","734,018"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","170,127",0.13,"83,882.93",2.73,"15,554,560",1.35,64,"25,088",33.69,0.03,206.75,25.69,204.17,"210,472","200,704","413,125","812,657","802,816","814,179","806,494","9,874","802,880","808,320","715,235",31.83,28.16,"808,320","715,235"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"25088,    1,    1","   64,    1,    1","123,858",0.09,"60,680.78",0.34,"1,404,928",1.31,64,"25,088",4.77,0.03,271.13,25.69,271.13,"200,704","200,704","402,956","802,816","802,816","804,167","806,654",0,"802,816","831,696","711,042",44.98,38.45,"831,696","711,042"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[10881] python3.8," 6272,    1,    1","  256,    1,    1","146,287",0.11,"69,987.09",2.18,"10,386,432",1.37,256,"6,272",26.14,0.03,245.44,19.27,179.95,"431,205","150,528","585,203","821,241","602,112","766,835","809,605","163,569","802,816","808,835","594,003",37.04,27.20,"808,835","594,003"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","72,787",0.06,"34,095.79",1.11,"2,564,096",1.31,256,512,16.42,0.01,118.30,18.87,340.55,"87,424","147,456","236,430","204,818","589,824","619,821","205,477","28,284","200,710","204,859","494,813",18.86,45.54,"204,859","494,813"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","133,992",0.10,"73,244.56",0.50,"2,506,752",1.30,256,"1,024",11.70,0.01,91.36,37.75,365.44,"73,728","294,912","371,284","294,912","1,179,648","1,180,955","295,928",0,"294,912","295,166","1,080,033",14.75,53.98,"295,166","1,080,033"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    2,    8,   36","  128,    1,    1","1,181,218",0.87,"586,402.15",2.24,"89,491,968",1.36,128,576,47.16,0.23,260.60,18.87,21.78,"3,519,393","147,456","3,687,235","7,058,343","589,824","6,357,738","1,971,219","5,767,084","1,925,730","2,093,485","519,067",11.87,2.94,"2,093,485","519,067"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","68,763",0.05,"29,990.37",1.26,"2,560,000",1.40,256,512,13.76,0.02,384.25,7.33,149.23,"147,456","99,928","249,165","589,824","229,120","230,389","589,825",0,"589,824","596,021","139,058",58.09,13.55,"596,021","139,058"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","45,451",0.03,"21,604.81",2.65,"3,888,640",1.31,64,"6,272",31.71,0.01,189.14,6.42,186.70,"52,715","50,176","103,872","203,277","200,704","204,765","202,608","2,533","200,768","205,122","112,040",30.24,16.52,"205,122","112,040"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","33,839",0.03,"12,332.47",0.42,"351,232",1.34,64,"6,272",4.37,0.01,254.06,6.42,254.06,"50,176","50,176","101,836","200,704","200,704","202,039","201,560",0,"200,704","202,104","189,292",40.01,37.48,"202,104","189,292"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","75,918",0.06,"34,288.12",1.10,"2,564,096",1.37,256,512,15.74,0.01,118.91,18.87,342.13,"87,288","147,456","237,057","204,921","589,824","618,923","200,707","28,694","200,706","203,777","493,964",17.98,43.60,"203,777","493,964"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","139,354",0.10,"65,078.41",0.57,"2,506,752",1.42,256,"1,024",11.25,0.01,96.13,37.75,384.50,"73,728","294,912","372,374","294,912","1,179,648","1,181,332","297,208",0,"294,912","295,070","1,080,565",14.18,51.94,"295,070","1,080,565"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    2,    8,   36","  128,    1,    1","1,180,298",0.87,"586,334.44",2.24,"89,491,968",1.36,128,576,47.18,0.23,260.76,18.87,21.79,"3,519,255","147,456","3,786,311","7,058,208","589,824","6,355,511","1,981,247","5,767,422","1,926,828","1,974,621","519,592",11.21,2.95,"1,974,621","519,592"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","63,728",0.05,"33,976.34",1.11,"2,560,000",1.28,256,512,14.86,0.02,381.52,7.33,148.21,"147,456","100,001","248,900","589,824","229,147","233,419","589,969",0,"589,824","593,249","133,891",62.38,14.08,"593,249","133,891"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","45,180",0.04,"21,630.97",2.64,"3,888,640",1.27,64,"6,272",31.91,0.01,183.25,6.42,180.98,"52,806","50,176","106,887","203,379","200,704","209,560","201,888","2,572","200,768","202,570","111,747",30.04,16.57,"202,570","111,747"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","28,211",0.02,"12,657.10",0.41,"351,232",1.17,64,"6,272",5.25,0.01,267.25,6.42,267.25,"50,176","50,176","101,566","200,704","200,704","202,047","201,644",0,"200,704","201,396","111,911",47.82,26.57,"201,396","111,911"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","72,447",0.06,"34,119.43",1.11,"2,564,096",1.27,256,512,16.50,0.01,115.49,18.87,332.67,"87,188","147,456","236,348","204,841","589,824","620,823","200,885","28,701","200,718","200,921","494,681",18.58,45.75,"200,921","494,681"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","133,728",0.10,"63,548.88",0.58,"2,506,752",1.31,256,"1,024",11.73,0.01,92.48,37.75,369.91,"73,728","294,912","371,884","294,912","1,179,648","1,180,950","298,378",0,"294,912","296,944","1,082,623",14.88,54.24,"296,944","1,082,623"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    2,    8,   36","  128,    1,    1","1,181,437",0.87,"586,991.06",2.24,"89,491,968",1.36,128,576,47.12,0.23,260.75,18.87,21.79,"3,518,703","147,456","3,684,963","7,057,655","589,824","6,357,902","1,975,989","5,762,537","1,923,848","1,986,447","519,597",11.26,2.95,"1,986,447","519,597"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","67,716",0.05,"29,964.34",1.26,"2,560,000",1.37,256,512,13.97,0.02,384,7.33,149.15,"147,456","99,957","248,826","589,824","229,161","230,512","590,693",0,"589,824","596,151","139,582",58.98,13.81,"596,151","139,582"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","45,311",0.03,"21,647.60",2.64,"3,888,640",1.30,64,"6,272",31.82,0.01,187.73,6.42,185.32,"52,653","50,176","105,906","203,213","200,704","209,878","203,232","2,562","200,768","201,168","111,860",29.75,16.54,"201,168","111,860"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","27,445",0.03,"12,555.13",0.41,"351,232",1.03,64,"6,272",5.40,0.01,242.69,6.42,242.69,"50,176","50,176","102,072","200,704","200,704","202,515","200,748",0,"200,704","200,876","111,660",49.01,27.24,"200,876","111,660"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","72,508",0.06,"35,666.87",1.06,"2,564,096",1.24,256,512,16.49,0.01,112.46,18.87,323.90,"86,899","147,456","237,124","204,793","589,824","620,681","206,031","27,690","200,704","200,739","495,150",18.55,45.75,"200,739","495,150"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[10881] python3.8,"   16,   64,    1","   32,    8,    1","132,962",0.10,"64,815.71",0.57,"2,506,752",1.31,256,"1,024",11.79,0.01,92.94,37.75,371.78,"73,728","294,912","372,388","294,912","1,179,648","1,181,307","300,240",0,"294,912","298,742","1,159,744",15.05,58.42,"298,742","1,159,744"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[10881] python3.8,"    2,    8,   36","  128,    1,    1","1,181,378",0.87,"586,616.54",2.24,"89,491,968",1.36,128,576,47.14,0.23,260.60,18.87,21.78,"3,519,394","147,456","3,692,872","7,058,342","589,824","6,356,066","1,969,095","5,766,164","1,927,394","1,962,413","593,044",11.13,3.36,"1,962,413","593,044"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[10881] python3.8,"    1,  512,    1","  256,    1,    1","64,038",0.05,"30,097.03",1.25,"2,560,000",1.25,256,512,14.79,0.02,370.49,7.33,143.97,"147,456","100,054","249,805","589,824","229,112","230,441","590,467",0,"589,824","589,825","134,467",61.74,14.07,"589,825","134,467"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","45,064",0.03,"21,431.04",2.67,"3,888,640",1.30,64,"6,272",31.98,0.01,189.37,6.42,186.88,"52,809","50,176","105,966","203,372","200,704","204,841","202,304","2,574","200,768","200,800","111,755",29.85,16.61,"200,800","111,755"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8," 6272,    1,    1","   64,    1,    1","27,697",0.03,"12,481.60",0.41,"351,232",1.09,64,"6,272",5.34,0.01,253.41,6.42,253.41,"50,176","50,176","101,582","200,704","200,704","202,047","203,132",0,"200,704","201,444","112,039",48.75,27.12,"201,444","112,039"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[10881] python3.8," 1568,    1,    1","  256,    1,    1","40,027",0.03,"17,252.53",2.21,"2,596,608",1.36,256,"1,568",23.96,0.01,223.87,4.82,163.80,"109,400","37,632","149,045","205,404","150,528","217,691","201,133","66,864","200,704","202,243","148,430",33.85,24.84,"202,243","148,430"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[10881] python3.8," 8192,    1,    1","   32,    8,    1","222,529",0.16,"110,022.84",2.70,"20,195,784",1.35,256,"8,192",33.68,0.00,11.09,3.04,18.50,"44,328","58,842","107,466","56,983","94,992","122,837","50,184","23,848","50,176","57,780",0,1.74,0,"57,780",0
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"  256,    1,    1","   64,    1,    1","5,032",0.00,"1,877.84",0.87,"110,592",1.02,64,256,8.53,0.00,46.96,0.26,53.19,"1,808","2,048","5,936","7,232","8,192","22,864",675,"6,720",512,515,0,0.68,0,515,0
99,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[10881] python3.8,"   32,    1,    5","  256,    1,    1","2,315,956",1.71,"1,088,219.82",1.75,"129,738,195",1.36,256,160,32.73,0.53,310.16,1.32,0.77,"6,472,821","10,400","6,535,419","16,536,687","41,120","4,907,694","13,064,893","4,856,042","12,977,114","13,031,587","34,828",37.69,0.10,"13,031,587","34,828"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"  256,    1,    1","   64,    1,    1","4,018",0.00,932.28,0.23,"14,336",0.85,64,256,1.50,0.00,55.35,0.26,55.35,"2,048","2,048","4,612","8,192","8,192","9,057","8,198",0,"8,192","8,886",0,14.83,0,"8,886",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[10881] python3.8,"  136,    1,    1","  256,    1,    1","5,148",0.00,"1,465.03",1.45,"144,320",1.35,256,136,10.61,0.00,68.84,0.33,86.05,"2,048","2,560","5,798","8,192","10,240","11,487","8,264",0,"8,192","8,202",0,10.57,0,"8,202",0
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"  256,    1,    1","   64,    1,    1","5,053",0.01,"1,840.59",0.88,"110,592",0.83,64,256,8.49,0.00,38.26,0.26,43.34,"1,808","2,048","4,598","7,232","8,192","16,094",917,"6,720",512,659,0,0.88,0,659,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[10881] python3.8,"   32,    1,    1","  256,    1,    1","374,433",0.28,"173,495.85",1.80,"21,186,816",1.36,256,32,33.04,0.08,274.84,0.26,0.95,"591,872","2,048","599,309","2,367,488","8,192","264,985","2,127,441","251,432","2,116,392","2,121,239","1,677",37.95,0.03,"2,121,239","1,677"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[10881] python3.8,"  256,    1,    1","   64,    1,    1","4,043",0.00,938.12,0.22,"14,336",1.16,64,256,1.49,0.00,75.16,0.26,75.16,"2,048","2,048","4,642","8,192","8,192","9,057","8,332",0,"8,192","8,422",0,13.88,0,"8,422",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[10881] python3.8,"  136,    1,    1","  256,    1,    1","5,159",0.00,"1,467.99",1.45,"144,320",1.34,256,136,10.59,0.00,68.27,0.33,85.33,"2,048","2,560","5,418","8,192","10,240","11,495","8,322",0,"8,192","8,408","1,841",10.91,2.39,"8,408","1,841"
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[10881] python3.8,"   63,    1,    1","   64,    1,    1","4,363",0.00,"1,699.66",0.23,"27,030",1.02,64,63,2.41,0.00,14.93,0.06,14.93,793,500,"3,035","2,000","2,000","4,789","1,477","1,893",126,195,0,0.30,0,195,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[10881] python3.8,"    8,    1,    4","  256,    1,    1","103,698",0.08,"46,595.26",1.73,"5,471,488",1.34,256,32,30.02,0.02,240.04,0.26,3.33,"144,384","2,852","149,950","577,536","8,000","66,693","551,041","57,344","520,192","524,935","78,504",33.92,5.07,"524,935","78,504"
108,splitKreduce_kernel,"void splitKreduce_kernel<float, float, float>(cublasSplitKParams<T3>, const T1 *, const T2 *, T2 *, const T3 *, const T3 *)",[10881] python3.8,"  125,    1,    1","  128,    1,    1","4,671",0.00,"1,323.72",0.54,"48,500",0.99,128,125,4.01,0.00,67.57,0.06,13.51,"2,500",500,"3,812","10,000","2,000","3,116","10,131",0,"10,000","10,021",0,14.29,0,"10,021",0
