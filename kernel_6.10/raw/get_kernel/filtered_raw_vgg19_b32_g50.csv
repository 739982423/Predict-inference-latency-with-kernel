ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[14629] python3.8,"  393,    1,    1","  128,    1,    1","3,935",0.00,952.63,1.89,"122,352",1.16,128,393,12.03,0,0,0.32,95.61,0,"2,939","3,697",0,"10,032","11,116",121,0,0,1,0,0.00,0,1,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[14629] python3.8,"12544,    1,    1","  128,    1,    1","2,416,703",1.78,"1,199,624.78",2.34,"191,070,208",1.35,128,"12,544",33.77,0.13,70.73,411.04,231.48,"1,716,538","3,211,264","5,001,423","3,921,614","12,845,056","15,928,892","980,902","3,080,028","903,448","1,041,310","12,756,390",2.89,35.35,"1,041,310","12,756,390"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"401408,    1,    1","   64,    1,    1","2,674,935",1.96,"1,329,994.24",2.75,"248,872,960",1.36,64,"401,408",34.36,0.41,210.04,411.04,209.89,"3,219,963","3,211,264","6,472,057","12,853,755","12,845,056","12,855,529","13,002,302","8,578","12,845,312","12,938,616","12,833,098",32.40,32.13,"12,938,616","12,833,098"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"401408,    1,    1","   64,    1,    1","2,049,318",1.51,"1,026,983.66",0.32,"22,478,848",1.35,64,"401,408",4.62,0.41,272.17,411.04,272.17,"3,211,264","3,211,264","6,456,727","12,845,056","12,845,056","12,847,383","12,940,996",0,"12,845,056","12,987,162","12,756,250",42.45,41.69,"12,987,162","12,756,250"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[14629] python3.8,"    2,   16,    1","   32,    4,    1","4,421",0.00,"1,069.87",0.62,"45,056",1.17,128,32,3.84,0.00,43.39,0.26,69.42,"2,214","2,048","5,496","5,120","8,192","11,658","4,812","1,079","4,608","4,740",0,7.18,0,"4,740",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[14629] python3.8,"   64,   28,   14","  256,    1,    1","22,948,368",16.81,"11,335,348.94",1.59,"1,228,509,184",1.36,256,"25,088",29.10,5.26,312.62,411.04,24.45,"55,296,000","6,422,528","62,187,160","164,249,600","12,845,056","147,416,806","44,959,395","134,561,874","44,027,604","44,966,827","12,806,571",13.12,3.74,"44,966,827","12,806,571"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"401408,    1,    1","   64,    1,    1","2,672,076",1.96,"1,330,110.22",2.75,"248,872,960",1.36,64,"401,408",34.37,0.41,209.56,411.04,209.41,"3,219,966","3,211,264","6,492,743","12,853,758","12,845,056","12,855,514","12,942,718","8,574","12,845,312","12,881,634","12,757,261",32.29,31.98,"12,881,634","12,757,261"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"401408,    1,    1","   64,    1,    1","2,065,891",1.51,"1,029,941.18",0.32,"22,478,848",1.36,64,"401,408",4.58,0.41,271.73,411.04,271.73,"3,211,264","3,211,264","6,423,593","12,845,056","12,845,056","12,846,789","13,041,390",0,"12,845,056","12,924,622","12,833,618",41.90,41.61,"12,924,622","12,833,618"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[14629] python3.8,"100352,    1,    1","  256,    1,    1","2,380,755",1.75,"1,185,367.74",2.06,"166,182,912",1.36,256,"100,352",25.73,0.44,250.89,308.28,176.02,"3,431,593","2,408,448","5,860,691","13,726,372","9,633,792","10,520,789","12,937,163","887,404","12,845,056","12,970,169","9,551,291",36.49,26.87,"12,970,169","9,551,291"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   98,   64,    1","  256,    1,    1","1,035,789",0.75,"507,572.03",0.91,"31,410,176",1.38,256,"6,272",14.19,0.23,309.74,231.21,309.07,"4,060,689","1,806,336","5,884,552","7,240,939","7,225,344","12,314,197","3,254,093","5,083,514","3,211,560","3,212,555","7,135,274",20.77,46.14,"3,212,555","7,135,274"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    2,   16,    1","   32,    8,    1","8,298",0.00,"2,071.51",0.56,"78,336",1.69,256,32,5.92,0.00,60.24,1.18,240.94,"2,304","9,216","12,441","9,216","36,864","38,112","10,468",0,"9,216","9,874",0,7.95,0,"9,874",0
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"  196,    1,   36","  256,    1,    1","4,344,985",3.19,"2,154,340.71",2.13,"312,721,920",1.36,256,"7,056",39.98,0.46,143.57,462.42,144.98,"8,891,407","3,612,672","12,622,604","14,310,416","14,450,688","21,522,930","7,404,439","7,067,539","7,262,208","7,433,311","14,362,669",11.46,22.14,"7,433,311","14,362,669"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   98,  128,    1","  256,    1,    1","1,645,462",1.20,"810,045.28",1.18,"64,727,040",1.36,256,"12,544",14.52,0.46,383.86,205.52,170.60,"3,612,672","3,211,264","6,836,687","14,450,688","6,422,528","6,424,264","14,592,739",0,"14,450,688","14,502,599","6,348,007",59.03,25.84,"14,502,599","6,348,007"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"200704,    1,    1","   64,    1,    1","1,338,285",0.98,"665,937.03",2.75,"124,436,480",1.36,64,"200,704",34.33,0.21,209.99,205.52,209.42,"1,622,953","1,605,632","3,241,967","6,439,849","6,422,528","6,441,809","6,484,360","17,269","6,422,648","6,549,996","6,334,997",32.78,31.71,"6,549,996","6,334,997"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"200704,    1,    1","   64,    1,    1","1,029,527",0.75,"507,850.03",0.33,"11,239,424",1.36,64,"200,704",4.60,0.21,272.55,205.52,272.55,"1,605,632","1,605,632","3,235,147","6,422,528","6,422,528","6,424,193","6,558,420",0,"6,422,528","6,556,072","6,405,216",42.65,41.67,"6,556,072","6,405,216"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   98,  128,    1","  256,    1,    1","2,061,314",1.50,"1,020,804.90",0.91,"62,820,352",1.37,256,"12,544",14.21,0.46,309.26,462.42,308.59,"8,125,085","3,612,672","11,776,262","14,481,258","14,450,688","24,620,208","6,513,223","10,170,401","6,423,808","6,520,575","14,361,917",21.19,46.67,"6,520,575","14,361,917"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    4,   16,    1","   32,    8,    1","23,168",0.01,"3,207.46",0.72,"156,672",3.28,256,64,4.24,0.00,83.78,2.36,335.13,"4,608","18,432","23,972","18,432","73,728","75,047","18,796",0,"18,432","18,788",8,5.44,0.00,"18,788",8
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"  196,    1,   36","  256,    1,    1","7,820,358",5.73,"3,887,428.09",2.18,"575,995,392",1.36,256,"7,056",44.06,0.92,161.23,462.42,80.69,"18,037,771","3,612,672","21,793,656","28,875,793","14,450,688","28,843,587","14,907,251","14,388,434","14,524,560","14,833,787","14,364,546",12.70,12.30,"14,833,787","14,364,546"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   98,  128,    1","  256,    1,    1","1,645,530",1.21,"815,651",1.17,"64,727,040",1.35,256,"12,544",14.55,0.46,382.47,205.52,169.98,"3,612,672","3,211,264","6,827,337","14,450,688","6,422,528","6,424,256","14,452,453",0,"14,450,688","14,521,799","6,347,481",59.11,25.84,"14,521,799","6,347,481"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"200704,    1,    1","   64,    1,    1","1,342,089",0.99,"665,661.16",2.75,"124,436,480",1.35,64,"200,704",34.30,0.21,209.20,205.52,208.64,"1,622,970","1,605,632","3,239,638","6,439,866","6,422,528","6,441,609","6,473,265","17,286","6,422,612","6,475,410","6,333,930",32.32,31.61,"6,475,410","6,333,930"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"200704,    1,    1","   64,    1,    1","1,026,799",0.75,"510,852.53",0.32,"11,239,424",1.36,64,"200,704",4.61,0.21,272.74,205.52,272.74,"1,605,632","1,605,632","3,264,865","6,422,528","6,422,528","6,424,470","6,512,620",0,"6,422,528","6,480,618","6,333,526",42.27,41.31,"6,480,618","6,333,526"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[14629] python3.8,"50176,    1,    1","  256,    1,    1","1,185,569",0.87,"588,851.71",2.08,"83,091,456",1.36,256,"50,176",25.89,0.21,246.35,154.14,177.75,"2,201,201","1,204,224","3,433,130","6,677,238","4,816,896","5,072,295","6,456,003","249,790","6,422,528","6,477,579","4,811,687",36.60,27.18,"6,477,579","4,811,687"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   32,  128,    1","  256,    1,    1","527,438",0.37,"243,514.88",1.11,"18,393,088",1.41,256,"4,096",15.86,0.12,309.05,115.61,309.70,"1,934,303","903,168","2,843,252","3,604,727","3,612,672","5,994,504","1,609,657","2,379,062","1,605,828","1,607,167","3,523,356",20.41,44.75,"1,607,167","3,523,356"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    4,   32,    1","   32,    8,    1","14,228",0.01,"5,375.78",0.86,"313,344",1.26,256,128,13.94,0.00,105.63,4.72,422.51,"9,216","36,864","47,192","36,864","147,456","148,711","37,548",0,"36,864","37,664","117,875",17.66,55.28,"37,664","117,875"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"   49,    2,   36","  256,    1,    1","3,928,359",2.88,"1,948,574.25",2.17,"287,997,696",1.36,256,"3,528",43.86,0.46,160.34,231.21,80.23,"9,020,236","1,806,336","10,903,273","14,439,244","7,225,344","16,082,957","5,981,747","8,721,701","5,621,412","5,888,793","7,136,031",10.04,12.17,"5,888,793","7,136,031"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","826,565",0.61,"407,939.88",1.43,"39,562,240",1.36,256,"8,192",17.68,0.23,380.84,102.76,169.26,"1,806,336","2,179,069","4,005,301","7,225,344","3,211,264","3,214,774","7,260,079",0,"7,225,344","7,233,537","3,139,500",58.61,25.44,"7,233,537","3,139,500"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","673,686",0.49,"333,043.60",2.75,"62,218,240",1.36,64,"100,352",34.19,0.10,210.19,102.76,208.28,"832,376","802,816","1,644,002","3,240,846","3,211,264","3,242,989","3,213,947","29,535","3,211,296","3,234,454","3,122,289",32.16,31.04,"3,234,454","3,122,289"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","508,207",0.38,"253,502.68",0.33,"5,619,712",1.34,64,"100,352",4.66,0.10,272.53,102.76,272.53,"802,816","802,816","1,613,751","3,211,264","3,211,264","3,212,930","3,343,892",0,"3,211,264","3,211,274","3,122,289",42.32,41.15,"3,211,274","3,122,289"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","1,001,354",0.73,"495,379.26",1.09,"36,786,176",1.37,256,"8,192",16.71,0.23,317.57,231.21,318.18,"3,868,059","1,806,336","5,676,896","7,212,237","7,225,344","11,989,721","3,243,043","4,761,318","3,211,500","3,287,065","7,208,257",21.99,48.22,"3,287,065","7,208,257"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    8,   32,    1","   32,    8,    1","38,646",0.03,"14,121.28",0.65,"626,688",1.43,256,256,10.21,0.00,87.77,9.44,351.09,"18,432","73,728","93,116","73,728","294,912","296,219","77,364",0,"73,728","73,894","198,075",12.79,34.30,"73,894","198,075"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"   49,    2,   36","  256,    1,    1","7,403,029",5.43,"3,669,539.63",2.21,"551,271,168",1.36,256,"3,528",46.29,0.92,170.41,231.21,42.61,"18,055,501","1,806,336","20,009,797","28,893,517","7,225,344","21,653,507","15,003,405","14,387,683","14,599,976","14,997,807","7,141,211",13.57,6.46,"14,997,807","7,141,211"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","820,166",0.61,"407,497.87",1.43,"39,562,240",1.35,256,"8,192",17.80,0.23,381.99,102.76,169.77,"1,806,336","2,179,072","4,001,531","7,225,344","3,211,264","3,212,992","7,236,881",0,"7,225,344","7,239,579","3,139,701",59.12,25.64,"7,239,579","3,139,701"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","671,206",0.49,"333,338.59",2.74,"62,218,240",1.35,64,"100,352",34.25,0.10,210.16,102.76,208.23,"831,980","802,816","1,648,157","3,240,463","3,211,264","3,247,181","3,231,950","29,662","3,211,296","3,240,736","3,122,993",32.34,31.16,"3,240,736","3,122,993"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","511,581",0.38,"252,904.88",0.33,"5,619,712",1.34,64,"100,352",4.63,0.10,270.83,102.76,270.83,"802,816","802,816","1,616,898","3,211,264","3,211,264","3,213,611","3,228,726",0,"3,211,264","3,233,286","3,122,286",42.33,40.88,"3,233,286","3,122,286"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","987,105",0.73,"495,523.88",1.09,"36,786,176",1.35,256,"8,192",16.95,0.23,316.69,231.21,317.28,"3,870,036","1,806,336","5,706,910","7,212,310","7,225,344","11,989,400","3,276,655","4,762,414","3,211,474","3,348,207","7,135,180",22.72,48.41,"3,348,207","7,135,180"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    8,   32,    1","   32,    8,    1","34,144",0.03,"14,253.81",0.65,"626,688",1.21,256,256,11.58,0.00,84.74,9.44,338.98,"18,432","73,728","93,116","73,728","294,912","296,223","74,744",0,"73,728","74,436","197,611",14.58,38.71,"74,436","197,611"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"   49,    2,   36","  256,    1,    1","7,406,236",5.44,"3,668,413.19",2.21,"551,271,168",1.36,256,"3,528",46.25,0.92,170.07,231.21,42.53,"18,055,605","1,806,336","20,068,213","28,893,622","7,225,344","21,648,785","14,816,457","14,404,276","14,622,398","14,900,487","7,141,010",13.48,6.46,"14,900,487","7,141,010"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","823,338",0.60,"407,553.78",1.43,"39,562,240",1.36,256,"8,192",17.77,0.23,382.90,102.76,170.18,"1,806,336","2,179,072","4,027,357","7,225,344","3,211,264","3,213,112","7,240,977",0,"7,225,344","7,263,813","3,138,901",59.08,25.53,"7,263,813","3,138,901"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","672,098",0.49,"333,187.12",2.75,"62,218,240",1.36,64,"100,352",34.22,0.10,210.18,102.76,208.25,"832,099","802,816","1,665,714","3,240,576","3,211,264","3,243,030","3,234,486","29,705","3,211,296","3,315,072","3,123,771",33.03,31.13,"3,315,072","3,123,771"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","518,013",0.38,"252,836.46",0.33,"5,619,712",1.37,64,"100,352",4.57,0.10,272.42,102.76,272.42,"802,816","802,816","1,608,809","3,211,264","3,211,264","3,213,053","3,232,198",0,"3,211,264","3,231,434","3,194,420",41.78,41.30,"3,231,434","3,194,420"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","1,000,597",0.75,"490,449.40",1.10,"36,786,176",1.32,256,"8,192",16.71,0.23,306.63,231.21,307.15,"3,871,052","1,806,336","5,696,684","7,212,834","7,225,344","11,990,106","3,250,293","4,763,041","3,211,560","3,257,143","7,136,088",21.80,47.77,"3,257,143","7,136,088"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    8,   32,    1","   32,    8,    1","33,710",0.03,"16,429.04",0.56,"626,688",1.12,256,256,11.73,0.00,79.45,9.44,317.79,"18,432","73,728","93,847","73,728","294,912","296,169","75,566",0,"73,728","78,186","198,723",15.53,39.46,"78,186","198,723"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[14629] python3.8,"   49,    2,   36","  256,    1,    1","7,382,267",5.43,"3,665,615",2.21,"551,271,168",1.36,256,"3,528",46.40,0.92,170.16,231.21,42.55,"18,055,649","1,806,336","20,044,213","28,893,666","7,225,344","21,654,027","15,055,871","14,496,950","14,608,100","14,856,271","7,140,836",13.48,6.48,"14,856,271","7,140,836"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"   32,  256,    1","  256,    1,    1","827,979",0.61,"406,121.74",1.43,"39,562,240",1.36,256,"8,192",17.68,0.23,381.73,102.76,169.66,"1,806,336","2,179,072","3,986,585","7,225,344","3,211,264","3,217,261","7,252,073",0,"7,225,344","7,234,139","3,139,829",58.52,25.40,"7,234,139","3,139,829"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","670,979",0.52,"333,631.34",2.74,"62,218,240",1.28,64,"100,352",34.25,0.10,198.11,102.76,196.31,"832,542","802,816","1,651,342","3,241,013","3,211,264","3,242,932","3,222,886","29,644","3,211,296","3,216,700","3,122,273",32.11,31.17,"3,216,700","3,122,273"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"100352,    1,    1","   64,    1,    1","509,098",0.38,"253,099.01",0.33,"5,619,712",1.34,64,"100,352",4.65,0.10,271.89,102.76,271.89,"802,816","802,816","1,608,725","3,211,264","3,211,264","3,213,118","3,254,340",0,"3,211,264","3,217,100","3,197,559",42.33,42.07,"3,217,100","3,197,559"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[14629] python3.8,"25088,    1,    1","  256,    1,    1","584,166",0.43,"289,960.72",2.11,"41,545,728",1.35,256,"25,088",26.26,0.10,243.64,77.07,178.93,"1,413,093","602,112","2,027,281","3,279,370","2,408,448","2,854,788","3,239,131","443,959","3,211,264","3,239,603","2,329,030",37.15,26.70,"3,239,603","2,329,030"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    8,  256,    1","  256,    1,    1","242,418",0.18,"116,461.81",1.22,"9,691,136",1.38,256,"2,048",18.45,0.05,261.25,57.80,329.80,"602,405","664,350","1,307,316","1,430,845","1,806,336","2,631,874","803,705","823,710","802,966","817,073","1,800,048",22.57,49.72,"817,073","1,800,048"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"    8,   64,    1","   32,    8,    1","76,708",0.05,"32,197.25",0.57,"1,253,376",1.43,256,512,10.27,0.00,88.62,18.87,354.46,"36,864","147,456","185,374","147,456","589,824","591,222","148,688",0,"147,456","149,130","569,234",13.02,49.71,"149,130","569,234"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"   13,    8,   36","  128,    1,    1","3,903,536",2.86,"1,935,200.87",2.26,"297,513,216",1.36,128,"3,744",46.57,0.71,247.15,115.61,40.40,"11,263,586","903,168","12,264,805","22,101,635","3,612,672","23,609,920","2,573,061","19,992,401","2,400,836","2,570,527","3,524,841",4.41,6.05,"2,570,527","3,524,841"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","425,775",0.31,"206,582.38",1.43,"20,114,432",1.37,256,"4,096",17.46,0.12,372.75,66.06,213.00,"1,381,580","971,728","2,367,280","3,612,672","2,064,384","2,066,112","3,652,585",0,"3,612,672","3,616,829","1,608,755",56.89,25.30,"3,616,829","1,608,755"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","338,586",0.25,"166,899.37",2.74,"31,109,120",1.35,64,"50,176",34.02,0.05,209.07,51.38,206.59,"420,298","401,408","835,902","1,624,620","1,605,632","1,626,898","1,615,008","19,090","1,605,696","1,631,536","1,516,682",32.27,30.00,"1,631,536","1,516,682"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","252,542",0.19,"124,460.69",0.33,"2,809,856",1.34,64,"50,176",4.69,0.05,272.97,51.38,272.97,"401,408","401,408","803,926","1,605,632","1,605,632","1,607,317","1,617,554",0,"1,605,632","1,637,286","1,511,814",43.42,40.09,"1,637,286","1,511,814"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","469,076",0.34,"229,899.44",1.24,"19,382,272",1.37,256,"4,096",19.06,0.09,268.72,115.61,338.27,"1,205,384","1,329,348","2,546,562","2,870,205","3,612,672","5,271,538","1,616,443","1,658,826","1,605,908","1,625,151","3,606,564",23.21,51.50,"1,625,151","3,606,564"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","142,024",0.10,"74,996.65",0.49,"2,506,752",1.40,256,"1,024",11.08,0.01,93.24,37.75,372.95,"73,728","294,912","370,258","294,912","1,179,648","1,181,346","296,354",0,"294,912","298,800","1,080,700",14.09,50.97,"298,800","1,080,700"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"   13,    8,   36","  128,    1,    1","7,615,784",5.58,"3,776,270.28",2.27,"581,697,792",1.36,128,"3,744",47.62,1.42,253.43,115.61,20.70,"22,544,226","903,168","23,563,695","44,220,267","3,612,672","41,840,762","6,964,533","38,258,372","6,446,876","6,823,595","3,536,226",6.00,3.11,"6,823,595","3,536,226"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","418,067",0.31,"207,226.18",1.43,"20,114,432",1.35,256,"4,096",17.81,0.12,375.03,66.06,214.30,"1,382,116","971,260","2,357,091","3,612,672","2,064,384","2,066,223","3,626,393",0,"3,612,672","3,660,211","1,613,693",58.62,25.84,"3,660,211","1,613,693"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","338,240",0.25,"166,892.09",2.74,"31,109,120",1.35,64,"50,176",34.04,0.05,208.82,51.38,206.41,"420,238","401,408","827,655","1,624,562","1,605,632","1,626,710","1,622,608","18,990","1,605,696","1,626,874","1,594,058",32.22,31.57,"1,626,874","1,594,058"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","255,542",0.19,"124,940.12",0.33,"2,809,856",1.33,64,"50,176",4.63,0.05,269.00,51.38,269.00,"401,408","401,408","810,177","1,605,632","1,605,632","1,607,382","1,615,092",0,"1,605,632","1,609,890","1,516,762",42.19,39.75,"1,609,890","1,516,762"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","465,358",0.34,"230,154.74",1.24,"19,382,272",1.34,256,"4,096",19.20,0.09,266.12,115.61,335.10,"1,205,896","1,329,232","2,535,986","2,868,959","3,612,672","5,272,586","1,622,191","1,657,246","1,605,842","1,652,469","3,529,029",23.79,50.80,"1,652,469","3,529,029"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","134,276",0.10,"63,335.26",0.58,"2,506,752",1.34,256,"1,024",11.73,0.01,94.92,37.75,379.67,"73,728","294,912","371,992","294,912","1,179,648","1,180,967","301,414",0,"294,912","311,576","1,083,561",15.54,54.04,"311,576","1,083,561"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"   13,    8,   36","  128,    1,    1","7,616,061",5.58,"3,776,376.09",2.27,"581,697,792",1.36,128,"3,744",47.70,1.42,253.41,115.61,20.70,"22,544,100","903,168","23,557,446","44,220,149","3,612,672","41,943,411","6,927,683","38,354,256","6,729,884","6,993,797","3,535,810",6.15,3.11,"6,993,797","3,535,810"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","421,275",0.31,"206,350.65",1.43,"20,114,432",1.35,256,"4,096",17.66,0.12,372.21,66.06,212.69,"1,380,735","971,358","2,361,544","3,612,672","2,064,384","2,066,176","3,619,013",0,"3,612,672","3,616,545","1,537,767",57.49,24.45,"3,616,545","1,537,767"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","337,880",0.25,"166,863.50",2.74,"31,109,120",1.35,64,"50,176",34.07,0.05,208.49,51.38,206.01,"420,597","401,408","823,365","1,624,923","1,605,632","1,626,790","1,617,112","19,204","1,605,696","1,608,574","1,516,626",31.88,30.06,"1,608,574","1,516,626"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","253,004",0.19,"125,026.28",0.33,"2,809,856",1.31,64,"50,176",4.68,0.05,266.80,51.38,266.80,"401,408","401,408","805,451","1,605,632","1,605,632","1,607,302","1,607,604",0,"1,605,632","1,607,838","1,516,694",42.56,40.15,"1,607,838","1,516,694"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","465,410",0.34,"231,404.28",1.23,"19,382,272",1.35,256,"4,096",19.20,0.09,267.24,115.61,336.34,"1,205,952","1,327,007","2,543,334","2,870,203","3,612,672","5,271,630","1,609,213","1,657,896","1,606,012","1,612,325","3,528,411",23.20,50.78,"1,612,325","3,528,411"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","136,648",0.10,"63,170.78",0.58,"2,506,752",1.39,256,"1,024",11.52,0.01,96.25,37.75,385.00,"73,728","294,912","371,579","294,912","1,179,648","1,180,947","298,366",0,"294,912","296,660","1,157,801",14.54,56.74,"296,660","1,157,801"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"   13,    8,   36","  128,    1,    1","7,616,476",5.58,"3,776,848.53",2.26,"581,697,792",1.36,128,"3,744",47.64,1.42,253.43,115.61,20.70,"22,543,929","903,168","23,532,362","44,219,966","3,612,672","41,872,380","6,784,329","38,247,662","6,584,204","6,999,259","3,536,476",6.16,3.11,"6,999,259","3,536,476"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    8,  512,    1","  256,    1,    1","418,292",0.31,"206,184.07",1.43,"20,114,432",1.35,256,"4,096",17.79,0.12,375.11,66.06,214.35,"1,382,280","971,283","2,364,518","3,612,672","2,064,384","2,066,107","3,634,805",0,"3,612,672","3,633,719","1,536,164",58.17,24.59,"3,633,719","1,536,164"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","338,300",0.25,"166,858.63",2.74,"31,109,120",1.35,64,"50,176",34.05,0.05,209.13,51.38,206.65,"420,581","401,408","823,663","1,624,915","1,605,632","1,626,710","1,612,240","19,448","1,605,696","1,614,384","1,516,666",31.96,30.03,"1,614,384","1,516,666"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"50176,    1,    1","   64,    1,    1","252,769",0.19,"124,806.74",0.33,"2,809,856",1.34,64,"50,176",4.68,0.05,273.07,51.38,273.07,"401,408","401,408","811,264","1,605,632","1,605,632","1,607,297","1,618,052",0,"1,605,632","1,616,418","1,594,258",42.83,42.24,"1,616,418","1,594,258"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[14629] python3.8,"12544,    1,    1","  256,    1,    1","284,276",0.21,"140,412.53",2.18,"20,772,864",1.34,256,"12,544",27.01,0.05,248.98,38.54,182.29,"863,074","301,056","1,165,355","1,643,782","1,204,224","1,532,142","1,606,093","326,806","1,605,632","1,609,601","1,125,495",37.92,26.52,"1,609,601","1,125,495"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","149,848",0.11,"70,815.41",1.06,"5,128,192",1.33,256,"1,024",16.01,0.01,117.60,37.75,337.72,"172,536","294,912","471,458","410,754","1,179,648","1,237,063","405,935","56,683","401,410","410,429","1,086,537",18.35,48.57,"410,429","1,086,537"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","147,657",0.11,"69,610.49",0.53,"2,506,752",1.34,256,"1,024",10.66,0.01,86.31,37.75,345.23,"73,728","294,912","369,928","294,912","1,179,648","1,182,430","299,516",0,"294,912","299,490","1,081,188",13.59,49.05,"299,490","1,081,188"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"    4,    8,   36","  128,    1,    1","2,383,524",1.75,"1,165,990.62",2.26,"178,983,936",1.36,128,"1,152",46.86,0.45,258.68,37.75,21.58,"7,061,616","294,912","7,374,592","14,139,538","1,179,648","13,502,434","2,435,035","12,320,820","2,415,884","2,444,650","1,103,513",6.87,3.10,"2,444,650","1,103,513"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","125,367",0.10,"60,832.26",1.24,"5,120,000",1.30,256,"1,024",15.15,0.04,393.48,14.67,152.91,"294,912","200,246","497,319","1,179,648","458,411","459,823","1,187,519",0,"1,179,648","1,187,649","339,701",63.40,18.14,"1,187,649","339,701"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","87,720",0.07,"42,265.76",2.71,"7,777,280",1.31,64,"12,544",32.96,0.01,195.23,12.85,193.26,"104,482","100,352","207,215","405,570","401,408","407,171","404,552","3,874","401,472","401,912","312,447",30.68,23.85,"401,912","312,447"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","59,542",0.05,"28,321.88",0.36,"702,464",1.22,64,"12,544",4.99,0.01,265.66,12.85,265.66,"100,352","100,352","203,870","401,408","401,408","402,751","402,156",0,"401,408","406,790","313,460",45.78,35.28,"406,790","313,460"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","153,885",0.11,"70,916.56",1.06,"5,128,192",1.40,256,"1,024",15.58,0.01,120.31,37.75,345.43,"173,020","294,912","474,910","410,625","1,179,648","1,240,098","407,367","55,770","401,410","407,075","1,158,633",17.72,50.44,"407,075","1,158,633"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","154,160",0.11,"68,661.43",0.54,"2,506,752",1.38,256,"1,024",10.21,0.01,84.87,37.75,339.47,"73,728","294,912","373,399","294,912","1,179,648","1,181,314","302,790",0,"294,912","304,652","1,159,074",13.24,50.36,"304,652","1,159,074"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"    4,    8,   36","  128,    1,    1","2,400,856",1.74,"1,165,746.12",2.26,"178,983,936",1.38,128,"1,152",46.58,0.45,260.68,37.75,21.75,"7,061,469","294,912","7,434,365","14,139,395","1,179,648","13,504,302","2,566,063","12,314,693","2,411,052","2,547,587","1,106,803",7.11,3.09,"2,547,587","1,106,803"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","125,098",0.09,"60,261.63",1.25,"5,120,000",1.31,256,"1,024",15.19,0.04,399.61,14.67,155.29,"294,912","200,125","496,099","1,179,648","458,423","460,150","1,182,851",0,"1,179,648","1,183,423","339,792",63.33,18.18,"1,183,423","339,792"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","87,563",0.07,"42,311.99",2.70,"7,777,280",1.32,64,"12,544",33.01,0.01,197.51,12.85,195.52,"104,452","100,352","208,045","405,554","401,408","406,950","403,504","4,011","401,472","402,864","312,620",30.79,23.89,"402,864","312,620"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","59,742",0.05,"28,656.41",0.36,"702,464",1.20,64,"12,544",4.97,0.01,260.49,12.85,260.49,"100,352","100,352","202,268","401,408","401,408","403,627","402,718",0,"401,408","401,548","312,376",45.00,35.00,"401,548","312,376"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","149,639",0.11,"72,124.84",1.05,"5,128,192",1.34,256,"1,024",16.04,0.01,118.79,37.75,341.14,"172,380","294,912","471,673","410,710","1,179,648","1,237,832","403,623","56,121","401,418","405,367","1,160,768",18.14,51.96,"405,367","1,160,768"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","148,807",0.11,"70,796.26",0.52,"2,506,752",1.30,256,"1,024",10.58,0.01,82.59,37.75,330.34,"73,728","294,912","369,678","294,912","1,179,648","1,181,315","304,636",0,"294,912","302,626","1,161,018",13.62,52.24,"302,626","1,161,018"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"    4,    8,   36","  128,    1,    1","2,409,698",1.74,"1,165,746.51",2.26,"178,983,936",1.38,128,"1,152",46.44,0.45,260.49,37.75,21.73,"7,061,107","294,912","7,377,415","14,139,016","1,179,648","13,495,707","2,537,543","12,317,438","2,410,056","2,550,949","1,101,707",7.09,3.06,"2,550,949","1,101,707"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","131,619",0.09,"60,581.44",1.24,"5,120,000",1.38,256,"1,024",14.42,0.04,399.34,14.67,155.18,"294,912","200,094","499,448","1,179,648","458,461","459,814","1,179,915",0,"1,179,648","1,183,265","339,774",60.20,17.29,"1,183,265","339,774"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","87,381",0.07,"42,262.32",2.71,"7,777,280",1.33,64,"12,544",33.07,0.01,198.66,12.85,196.67,"104,405","100,352","208,131","405,498","401,408","407,089","401,680","4,157","401,472","419,414","313,925",32.13,24.05,"419,414","313,925"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","60,136",0.05,"28,322.81",0.36,"702,464",1.27,64,"12,544",4.93,0.01,273.25,12.85,273.25,"100,352","100,352","201,992","401,408","401,408","402,743","404,684",0,"401,408","404,632","390,604",45.07,43.51,"404,632","390,604"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","150,786",0.11,"71,810.19",1.05,"5,128,192",1.36,256,"1,024",15.91,0.01,119.35,37.75,342.62,"172,330","294,912","468,307","410,993","1,179,648","1,238,533","406,475","55,846","401,418","404,591","1,160,680",17.97,51.55,"404,591","1,160,680"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[14629] python3.8,"   16,   64,    1","   32,    8,    1","147,360",0.11,"68,870.44",0.54,"2,506,752",1.34,256,"1,024",10.68,0.01,85.98,37.75,343.92,"73,728","294,912","371,908","294,912","1,179,648","1,181,314","304,210",0,"294,912","296,866","1,081,439",13.50,49.16,"296,866","1,081,439"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[14629] python3.8,"    4,    8,   36","  128,    1,    1","2,411,306",1.74,"1,166,169.57",2.26,"178,983,936",1.38,128,"1,152",46.41,0.45,260.58,37.75,21.74,"7,061,291","294,912","7,435,335","14,139,204","1,179,648","13,496,066","2,587,743","12,313,007","2,409,692","2,581,395","1,102,431",7.17,3.06,"2,581,395","1,102,431"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[14629] python3.8,"    2,  512,    1","  256,    1,    1","124,440",0.10,"62,788.74",1.20,"5,120,000",1.29,256,"1,024",15.27,0.04,393.74,14.67,153.02,"294,912","200,331","498,755","1,179,648","458,375","462,631","1,207,103",0,"1,179,648","1,183,251","338,242",63.62,18.19,"1,183,251","338,242"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","87,637",0.07,"42,323.91",2.70,"7,777,280",1.32,64,"12,544",33.01,0.01,198.05,12.85,196.10,"104,401","100,352","208,151","405,491","401,408","406,995","408,676","4,139","401,472","410,744","312,586",31.39,23.89,"410,744","312,586"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"12544,    1,    1","   64,    1,    1","59,528",0.05,"28,372.68",0.36,"702,464",1.22,64,"12,544",4.98,0.01,264.96,12.85,264.96,"100,352","100,352","202,052","401,408","401,408","402,759","402,422",0,"401,408","402,340","312,612",45.28,35.18,"402,340","312,612"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[14629] python3.8," 3136,    1,    1","  256,    1,    1","71,986",0.05,"34,383.87",2.22,"5,193,216",1.31,256,"3,136",26.75,0.01,242.90,9.63,176.78,"220,368","75,264","298,497","415,231","301,056","435,886","401,603","136,434","401,408","402,221","223,823",37.44,20.83,"402,221","223,823"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[14629] python3.8,"16384,    1,    1","   32,    8,    1","441,527",0.33,"218,980.15",2.71,"40,394,996",1.36,256,"16,384",34.03,0.00,11.23,6.09,18.73,"88,650","117,715","209,841","114,057","190,066","242,885","106,892","47,809","100,352","112,896","22,572",1.71,0.34,"112,896","22,572"
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"  512,    1,    1","   64,    1,    1","5,529",0.01,"2,193.91",1.48,"221,184",0.89,64,512,15.42,0.00,56.08,0.52,84.45,"2,720","4,096","7,804","10,880","16,384","33,374","1,097","10,624",512,699,0,0.84,0,699,0
99,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[14629] python3.8,"   32,    1,    5","  256,    1,    1","2,352,835",1.72,"1,096,501.79",1.74,"129,737,472",1.36,256,160,32.38,0.59,343.35,2.63,1.52,"7,226,078","20,640","7,262,815","18,480,372","82,080","6,765,125","13,261,145","6,667,725","13,121,272","13,261,437","68,561",37.75,0.20,"13,261,437","68,561"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"  512,    1,    1","   64,    1,    1","4,753",0.00,"1,321.31",0.32,"28,672",1.17,64,512,2.54,0.00,129.01,0.52,129.01,"4,096","4,096","8,928","16,384","16,384","17,458","16,508",0,"16,384","16,860",0,23.69,0,"16,860",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[14629] python3.8,"  136,    1,    1","  256,    1,    1","5,971",0.00,"1,895.35",1.71,"220,096",1.21,256,136,13.90,0.00,107.08,0.66,133.86,"4,096","5,120","10,126","16,384","20,480","21,833","16,440",0,"16,384","16,672","3,614",18.71,4.06,"16,672","3,614"
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"  512,    1,    1","   64,    1,    1","6,631",0.01,"1,706.07",1.91,"221,184",1.29,64,512,12.84,0.00,68,0.52,102.40,"2,720","4,096","7,728","10,880","16,384","28,092",627,"10,368",512,515,0,0.52,0,515,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[14629] python3.8,"   32,    1,    1","  256,    1,    1","388,359",0.28,"173,814.78",1.79,"21,186,816",1.38,256,32,32.03,0.08,301.47,0.52,1.87,"659,456","4,096","703,669","2,637,824","16,384","523,788","2,149,037","504,676","2,133,288","2,156,849","79,173",37.20,1.37,"2,156,849","79,173"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[14629] python3.8,"  512,    1,    1","   64,    1,    1","4,807",0.01,"1,256.79",0.34,"28,672",0.87,64,512,2.52,0.00,95.26,0.52,95.26,"4,096","4,096","9,432","16,384","16,384","18,015","16,788",0,"16,384","16,524",0,22.89,0,"16,524",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[14629] python3.8,"  136,    1,    1","  256,    1,    1","8,367",0.00,"1,932.93",1.67,"220,096",1.68,256,136,9.91,0.00,105.70,0.66,132.13,"4,096","5,120","11,158","16,384","20,480","21,848","16,572",0,"16,384","16,560",0,13.26,0,"16,560",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[14629] python3.8,"  125,    1,    1","   64,    1,    1","4,628",0.00,"1,255.63",0.63,"54,000",1.01,64,125,4.53,0.00,25.08,0.13,27.97,"1,382","1,000","4,495","3,586","4,000","8,460",345,"3,467",126,355,0,0.51,0,355,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[14629] python3.8,"    8,    1,    4","  256,    1,    1","106,376",0.08,"46,691.78",1.72,"5,471,488",1.30,256,32,29.44,0.02,253.08,0.51,6.30,"160,768","5,628","168,252","643,072","16,000","135,554","529,631","114,688","528,384","529,565","74,659",33.34,4.70,"529,565","74,659"
108,splitKreduce_kernel,"void splitKreduce_kernel<float, float, float>(cublasSplitKParams<T3>, const T1 *, const T2 *, T2 *, const T3 *, const T3 *)",[14629] python3.8,"  250,    1,    1","  128,    1,    1","5,721",0.01,"1,689.69",0.84,"97,000",1.09,128,250,6.57,0.00,122.70,0.13,24.54,"5,000","1,000","6,892","20,000","4,000","5,218","20,235",0,"20,000","20,005",0,23.47,0,"20,005",0
