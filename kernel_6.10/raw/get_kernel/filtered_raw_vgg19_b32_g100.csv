ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[22861] python3.8,"  393,    1,    1","  128,    1,    1","3,459",0.00,"1,299.88",1.38,"122,352",1.14,128,393,14.00,0,0,0.33,108.53,0,"3,062","3,992",0,"10,296","11,404",57,0,0,17,0,0.03,0,17,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[22861] python3.8,"12544,    1,    1","  128,    1,    1","1,224,744",1.00,"1,342,699.34",2.09,"191,070,208",1.21,128,"12,544",66.86,0.12,123.51,411.04,410.87,"1,668,570","3,211,264","4,930,102","3,794,704","12,845,056","15,906,017","958,596","3,003,447","903,338","976,258","12,754,275",5.34,69.70,"976,258","12,754,275"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"401408,    1,    1","   64,    1,    1","2,063,613",1.51,"2,041,911.56",1.79,"248,872,960",1.36,64,"401,408",44.56,0.41,271.73,411.04,271.38,"3,227,901","3,211,264","6,514,081","12,861,693","12,845,056","12,864,990","12,912,688","16,557","12,845,312","12,935,742","12,831,167",41.98,41.64,"12,935,742","12,831,167"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"401408,    1,    1","   64,    1,    1","2,074,971",1.51,"2,048,903.66",0.16,"22,478,848",1.37,64,"401,408",4.56,0.41,272.04,411.04,272.04,"3,211,264","3,211,264","6,465,557","12,845,056","12,845,056","12,847,491","12,921,908",0,"12,845,056","12,900,442","12,754,932",41.64,41.17,"12,900,442","12,754,932"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[22861] python3.8,"    2,   16,    1","   32,    4,    1","4,152",0.00,"1,005.07",0.66,"45,056",1.16,128,32,4.09,0.00,45.71,0.26,73.14,"2,205","2,048","5,497","5,120","8,192","10,846","4,612","1,049","4,608","4,732",0,7.61,0,"4,732",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[22861] python3.8,"   64,   28,   14","  256,    1,    1","11,798,325",8.70,"11,649,038.79",1.55,"1,228,509,184",1.35,256,"25,088",56.71,5.26,604.17,411.04,47.25,"55,296,000","6,422,528","61,992,786","164,249,600","12,845,056","147,408,326","44,655,347","134,552,413","44,037,644","44,534,329","12,803,780",25.28,7.27,"44,534,329","12,803,780"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"401408,    1,    1","   64,    1,    1","2,059,126",1.51,"2,060,942.56",1.78,"248,872,960",1.36,64,"401,408",44.64,0.41,272.14,411.04,271.79,"3,227,856","3,211,264","6,456,787","12,861,648","12,845,056","12,864,324","12,896,190","16,452","12,845,312","12,896,804","12,756,665",41.94,41.48,"12,896,804","12,756,665"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"401408,    1,    1","   64,    1,    1","2,054,388",1.51,"2,053,399.34",0.16,"22,478,848",1.35,64,"401,408",4.61,0.41,271.65,411.04,271.65,"3,211,264","3,211,264","6,469,748","12,845,056","12,845,056","12,849,598","12,929,828",0,"12,845,056","12,924,708","12,755,553",42.14,41.59,"12,924,708","12,755,553"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[22861] python3.8,"100352,    1,    1","  256,    1,    1","1,794,289",1.31,"1,779,949.60",1.37,"166,182,912",1.36,256,"100,352",34.20,0.45,343.36,308.28,234.96,"3,515,340","2,408,448","5,963,448","14,061,360","9,633,792","10,857,402","12,944,343","1,226,840","12,845,056","12,974,033","9,548,518",48.42,35.64,"12,974,033","9,548,518"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   98,   64,    1","  256,    1,    1","1,050,055",0.78,"1,031,345.24",0.45,"31,410,176",1.35,256,"6,272",13.98,0.23,298.05,231.21,298.26,"4,060,993","1,806,336","5,880,112","7,222,329","7,225,344","12,261,818","3,286,919","5,032,400","3,260,942","3,296,259","7,130,551",21.02,45.47,"3,296,259","7,130,551"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    2,   16,    1","   32,    8,    1","5,527",0.01,"1,605.62",0.72,"78,336",0.92,256,32,8.90,0.00,49.55,1.18,198.19,"2,304","9,216","13,205","9,216","36,864","39,862","9,236",0,"9,216","9,356",0,11.28,0,"9,356",0
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"  196,    1,   36","  256,    1,    1","2,263,296",1.64,"2,195,475.15",2.09,"312,721,920",1.37,256,"7,056",77.15,0.46,280.55,462.42,282.77,"8,916,823","3,612,672","12,597,323","14,335,834","14,450,688","21,549,838","7,293,123","7,091,790","7,262,248","7,329,559","14,361,514",21.68,42.49,"7,329,559","14,361,514"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   98,  128,    1","  256,    1,    1","1,641,934",1.21,"1,629,506.31",0.58,"64,727,040",1.36,256,"12,544",14.54,0.46,383.09,205.52,170.26,"3,612,672","3,211,264","6,866,039","14,450,688","6,422,528","6,425,101","14,584,479",0,"14,450,688","14,556,887","6,422,457",59.37,26.19,"14,556,887","6,422,457"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"200704,    1,    1","   64,    1,    1","1,029,416",0.76,"1,016,747.68",1.80,"124,436,480",1.35,64,"200,704",44.67,0.21,271.77,205.52,270.73,"1,630,678","1,605,632","3,250,227","6,447,588","6,422,528","6,449,941","6,423,324","24,972","6,422,748","6,472,180","6,333,787",42.09,41.19,"6,472,180","6,333,787"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"200704,    1,    1","   64,    1,    1","1,026,073",0.76,"1,013,945.49",0.16,"11,239,424",1.35,64,"200,704",4.61,0.21,271.81,205.52,271.81,"1,605,632","1,605,632","3,239,403","6,422,528","6,422,528","6,425,082","6,463,740",0,"6,422,528","6,426,188","6,406,256",41.95,41.82,"6,426,188","6,406,256"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   98,  128,    1","  256,    1,    1","2,197,672",1.59,"2,187,793.29",0.42,"62,820,352",1.38,256,"12,544",13.34,0.46,290.05,462.42,290.23,"8,122,356","3,612,672","11,751,875","14,439,678","14,450,688","24,513,264","6,661,011","10,057,846","6,539,520","6,641,391","14,355,375",20.24,43.74,"6,641,391","14,355,375"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    4,   16,    1","   32,    8,    1","7,317",0.01,"4,649.87",0.50,"156,672",1.17,256,64,13.51,0.00,95.50,2.36,382.01,"4,608","18,432","24,770","18,432","73,728","75,761","19,100",0,"18,432","18,820","41,966",17.14,38.21,"18,820","41,966"
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"  196,    1,   36","  256,    1,    1","3,959,873",2.90,"3,912,754.13",2.16,"575,995,392",1.36,256,"7,056",87.24,0.92,318.17,462.42,159.27,"18,030,164","3,612,672","21,730,693","28,868,181","14,450,688","28,832,716","14,750,563","14,379,975","14,528,192","14,753,871","14,362,009",24.95,24.29,"14,753,871","14,362,009"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   98,  128,    1","  256,    1,    1","1,652,656",1.21,"1,633,737.22",0.58,"64,727,040",1.36,256,"12,544",14.44,0.46,382.09,205.52,169.82,"3,612,672","3,211,264","6,872,163","14,450,688","6,422,528","6,424,993","14,540,431",0,"14,450,688","14,469,897","6,417,869",58.63,26.01,"14,469,897","6,417,869"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"200704,    1,    1","   64,    1,    1","1,029,775",0.76,"1,020,577.41",1.79,"124,436,480",1.35,64,"200,704",44.68,0.21,271.61,205.52,270.57,"1,630,418","1,605,632","3,249,227","6,447,334","6,422,528","6,455,676","6,437,872","24,809","6,422,784","6,434,290","6,333,870",41.83,41.17,"6,434,290","6,333,870"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"200704,    1,    1","   64,    1,    1","1,025,962",0.75,"1,016,669.53",0.16,"11,239,424",1.36,64,"200,704",4.61,0.21,272.58,205.52,272.58,"1,605,632","1,605,632","3,239,265","6,422,528","6,422,528","6,425,081","6,481,054",0,"6,422,528","6,459,308","6,332,604",42.17,41.34,"6,459,308","6,332,604"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[22861] python3.8,"50176,    1,    1","  256,    1,    1","898,150",0.66,"880,912.28",1.39,"83,091,456",1.36,256,"50,176",34.16,0.22,328.83,154.14,233.72,"2,218,770","1,204,224","3,441,797","6,778,238","4,816,896","5,178,196","6,464,898","352,454","6,422,528","6,422,939","4,729,938",47.89,35.27,"6,422,939","4,729,938"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   32,  128,    1","  256,    1,    1","523,591",0.40,"521,262.13",0.52,"18,393,088",1.32,256,"4,096",15.97,0.12,291.17,115.61,292.52,"1,936,477","903,168","2,850,416","3,594,922","3,612,672","5,976,423","1,640,383","2,359,930","1,621,260","1,623,997","3,518,428",20.76,44.97,"1,623,997","3,518,428"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    4,   32,    1","   32,    8,    1","15,804",0.01,"7,170.07",0.64,"313,344",1.28,256,128,12.52,0.00,96.50,4.72,386.01,"9,216","36,864","47,754","36,864","147,456","149,494","37,148",0,"36,864","37,544","47,149",15.85,19.91,"37,544","47,149"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"   49,    2,   36","  256,    1,    1","2,003,067",1.47,"1,971,876.60",2.15,"287,997,696",1.35,256,"3,528",86.36,0.46,314.41,231.21,157.39,"9,014,325","1,806,336","10,867,073","14,433,333","7,225,344","15,804,726","6,080,619","8,541,474","5,968,140","5,978,133","7,137,025",19.98,23.86,"5,978,133","7,137,025"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","840,860",0.61,"824,971.72",0.71,"39,562,240",1.37,256,"8,192",17.41,0.23,377.93,102.76,167.97,"1,806,336","2,179,072","4,033,047","7,225,344","3,211,264","3,213,736","7,243,451",0,"7,225,344","7,245,747","3,213,317",57.71,25.59,"7,245,747","3,213,317"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","512,059",0.38,"505,957.26",1.81,"62,218,240",1.33,64,"100,352",44.93,0.10,269.55,102.76,267.92,"821,921","802,816","1,646,147","3,230,557","3,211,264","3,237,904","3,234,328","19,736","3,211,296","3,212,150","3,123,647",41.96,40.80,"3,212,150","3,123,647"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","520,807",0.38,"505,507.46",0.16,"5,619,712",1.37,64,"100,352",4.55,0.10,270.97,102.76,270.97,"802,816","802,816","1,614,357","3,211,264","3,211,264","3,213,681","3,226,308",0,"3,211,264","3,244,446","3,121,837",41.73,40.15,"3,244,446","3,121,837"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","1,095,638",0.79,"1,086,897.96",0.50,"36,786,176",1.39,256,"8,192",15.26,0.23,292.62,231.21,293.75,"3,871,294","1,806,336","5,706,732","7,198,159","7,225,344","11,966,151","3,264,207","4,734,679","3,237,444","3,266,555","7,133,283",19.97,43.60,"3,266,555","7,133,283"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    8,   32,    1","   32,    8,    1","28,571",0.03,"21,338.09",0.43,"626,688",1.08,256,256,13.82,0.00,90.24,9.44,360.97,"18,432","73,728","94,262","73,728","294,912","296,915","73,732",0,"73,728","73,876","190,764",17.15,44.28,"73,876","190,764"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"   49,    2,   36","  256,    1,    1","3,757,196",2.76,"3,688,141.63",2.20,"551,271,168",1.36,256,"3,528",91.47,0.92,335.30,231.21,83.87,"18,046,397","1,806,336","19,959,915","28,884,423","7,225,344","23,192,195","13,162,736","15,958,122","13,142,516","13,282,209","7,138,764",23.67,12.72,"13,282,209","7,138,764"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","827,160",0.61,"816,509.85",0.71,"39,562,240",1.35,256,"8,192",17.67,0.23,379.26,102.76,168.56,"1,806,336","2,179,072","4,002,726","7,225,344","3,211,264","3,213,684","7,284,413",0,"7,225,344","7,236,405","3,136,534",58.58,25.39,"7,236,405","3,136,534"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","515,149",0.38,"511,290.76",1.79,"62,218,240",1.34,64,"100,352",44.66,0.10,271.23,102.76,269.56,"822,413","802,816","1,634,904","3,230,939","3,211,264","3,238,148","3,251,228","19,997","3,211,296","3,241,760","3,122,578",42.10,40.55,"3,241,760","3,122,578"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","507,817",0.38,"505,160.28",0.16,"5,619,712",1.33,64,"100,352",4.66,0.10,270.70,102.76,270.70,"802,816","802,816","1,609,183","3,211,264","3,211,264","3,216,214","3,224,092",0,"3,211,264","3,233,761","3,122,547",42.65,41.18,"3,233,761","3,122,547"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","1,076,656",0.79,"1,083,452.79",0.50,"36,786,176",1.36,256,"8,192",15.51,0.23,292.03,231.21,293.18,"3,874,346","1,806,336","5,704,972","7,195,884","7,225,344","11,970,046","3,290,345","4,737,698","3,234,874","3,280,803","7,132,227",20.40,44.35,"3,280,803","7,132,227"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    8,   32,    1","   32,    8,    1","29,969",0.03,"21,001.72",0.44,"626,688",1.05,256,256,13.17,0.00,83.03,9.44,332.11,"18,432","73,728","93,920","73,728","294,912","296,919","73,892",0,"73,728","74,264","190,392",16.45,42.16,"74,264","190,392"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"   49,    2,   36","  256,    1,    1","3,754,755",2.76,"3,688,633.84",2.20,"551,271,168",1.36,256,"3,528",91.53,0.92,335.45,231.21,83.91,"18,046,499","1,806,336","19,936,158","28,884,515","7,225,344","23,227,386","13,341,171","15,980,499","13,078,336","13,236,589","7,138,602",23.61,12.73,"13,236,589","7,138,602"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","825,893",0.61,"826,425.16",0.70,"39,562,240",1.34,256,"8,192",17.69,0.23,375.99,102.76,167.11,"1,806,336","2,179,072","3,999,123","7,225,344","3,211,264","3,215,459","7,265,645",0,"7,225,344","7,277,635","3,135,098",59.00,25.42,"7,277,635","3,135,098"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","514,580",0.38,"515,991.62",1.77,"62,218,240",1.33,64,"100,352",44.68,0.10,268.63,102.76,266.98,"822,315","802,816","1,640,908","3,230,844","3,211,264","3,233,586","3,223,176","20,165","3,211,296","3,217,064","3,122,446",41.82,40.59,"3,217,064","3,122,446"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","513,734",0.38,"508,043.46",0.16,"5,619,712",1.36,64,"100,352",4.61,0.10,272.74,102.76,272.74,"802,816","802,816","1,615,971","3,211,264","3,211,264","3,213,678","3,224,620",0,"3,211,264","3,239,556","3,198,693",42.24,41.70,"3,239,556","3,198,693"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","1,095,232",0.79,"1,075,672.59",0.50,"36,786,176",1.38,256,"8,192",15.27,0.23,291.01,231.21,292.15,"3,872,201","1,806,336","5,704,563","7,196,890","7,225,344","11,967,614","3,254,693","4,739,424","3,232,808","3,355,215","7,131,916",20.51,43.61,"3,355,215","7,131,916"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    8,   32,    1","   32,    8,    1","38,701",0.03,"20,989.99",0.44,"626,688",1.41,256,256,10.20,0.00,86.84,9.44,347.36,"18,432","73,728","94,370","73,728","294,912","296,917","78,282",0,"73,728","74,716","191,255",12.90,33.03,"74,716","191,255"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[22861] python3.8,"   49,    2,   36","  256,    1,    1","3,761,206",2.76,"3,688,176.43",2.20,"551,271,168",1.35,256,"3,528",91.41,0.92,334.82,231.21,83.75,"18,046,738","1,806,336","19,931,362","28,884,754","7,225,344","23,212,817","13,287,661","15,923,046","13,102,034","13,146,481","7,137,201",23.41,12.71,"13,146,481","7,137,201"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"   32,  256,    1","  256,    1,    1","822,617",0.61,"814,263.94",0.71,"39,562,240",1.34,256,"8,192",17.76,0.23,378.75,102.76,168.33,"1,806,336","2,179,072","4,004,343","7,225,344","3,211,264","3,216,195","7,268,847",0,"7,225,344","7,265,205","3,136,461",59.14,25.53,"7,265,205","3,136,461"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","515,982",0.38,"507,285.22",1.80,"62,218,240",1.35,64,"100,352",44.56,0.10,271.66,102.76,269.99,"822,804","802,816","1,629,368","3,231,327","3,211,264","3,238,185","3,248,284","20,127","3,211,296","3,258,862","3,122,529",42.25,40.48,"3,258,862","3,122,529"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"100352,    1,    1","   64,    1,    1","515,310",0.38,"503,200.82",0.16,"5,619,712",1.36,64,"100,352",4.59,0.10,272.79,102.76,272.79,"802,816","802,816","1,608,893","3,211,264","3,211,264","3,213,702","3,222,674",0,"3,211,264","3,221,574","3,198,587",41.87,41.58,"3,221,574","3,198,587"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[22861] python3.8,"25088,    1,    1","  256,    1,    1","442,982",0.33,"439,546.82",1.39,"41,545,728",1.33,256,"25,088",34.71,0.11,320.96,77.07,233.44,"1,413,166","602,112","2,049,740","3,313,195","2,408,448","2,880,878","3,211,843","466,410","3,211,264","3,212,951","2,322,143",48.56,35.09,"3,212,951","2,322,143"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    8,  256,    1","  256,    1,    1","265,952",0.20,"256,012.28",0.56,"9,691,136",1.35,256,"2,048",16.82,0.05,231.70,57.80,294.67,"586,185","655,024","1,247,856","1,420,316","1,806,336","2,617,167","810,627","809,525","809,096","814,467","1,801,237",20.50,45.33,"814,467","1,801,237"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"    8,   64,    1","   32,    8,    1","70,677",0.06,"64,066.25",0.29,"1,253,376",1.26,256,512,11.14,0.00,84.41,18.87,337.62,"36,864","147,456","186,662","147,456","589,824","591,875","150,526",0,"147,456","147,838","486,007",13.96,45.88,"147,838","486,007"
49,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"   13,    8,   36","  128,    1,    1","1,980,457",1.45,"1,943,935.76",2.25,"297,513,216",1.35,128,"3,744",92.22,0.71,486.47,115.61,79.58,"11,244,720","903,168","12,183,979","22,082,825","3,612,672","23,316,040","2,768,663","19,693,684","2,687,954","2,750,105","3,523,882",9.30,11.91,"2,750,105","3,523,882"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","418,196",0.31,"410,879.78",0.72,"20,114,432",1.34,256,"4,096",17.78,0.12,371.10,66.06,212.06,"1,378,740","971,167","2,352,074","3,612,672","2,064,384","2,066,804","3,614,219",0,"3,612,672","3,625,793","1,611,781",58.02,25.79,"3,625,793","1,611,781"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","255,200",0.19,"250,607.19",1.83,"31,109,120",1.33,64,"50,176",45.08,0.05,271.88,51.38,268.91,"418,847","401,408","827,482","1,623,221","1,605,632","1,625,568","1,607,584","17,516","1,605,696","1,611,704","1,553,845",42.19,40.68,"1,611,704","1,553,845"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","251,019",0.19,"246,774.72",0.17,"2,809,856",1.33,64,"50,176",4.72,0.05,272.60,51.38,272.60,"401,408","401,408","806,704","1,605,632","1,605,632","1,608,050","1,618,926",0,"1,605,632","1,612,700","1,515,842",43.02,40.44,"1,612,700","1,515,842"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","516,087",0.38,"495,830.26",0.57,"19,382,272",1.37,256,"4,096",17.28,0.09,243.87,115.61,308.27,"1,180,321","1,308,865","2,499,710","2,858,064","3,612,672","5,255,266","1,618,357","1,638,077","1,617,274","1,618,127","3,528,645",20.99,45.78,"1,618,127","3,528,645"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","133,689",0.11,"139,044.51",0.27,"2,506,752",1.21,256,"1,024",11.77,0.01,86.08,37.75,344.32,"73,728","294,912","374,068","294,912","1,179,648","1,182,059","299,674",0,"294,912","298,006","1,078,952",14.90,53.93,"298,006","1,078,952"
55,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"   13,    8,   36","  128,    1,    1","3,857,068",2.83,"3,789,682.63",2.26,"581,697,792",1.35,128,"3,744",94.45,1.41,500.06,115.61,40.87,"22,526,189","903,168","23,536,968","44,202,281","3,612,672","39,406,207","9,178,801","35,763,725","9,070,334","9,395,739","3,526,195",16.31,6.12,"9,395,739","3,526,195"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","418,814",0.31,"407,812.28",0.73,"20,114,432",1.34,256,"4,096",17.78,0.12,373.29,66.06,213.31,"1,378,974","972,195","2,365,885","3,612,672","2,064,384","2,066,861","3,628,933",0,"3,612,672","3,648,469","1,532,259",58.33,24.50,"3,648,469","1,532,259"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","260,320",0.19,"249,657.79",1.83,"31,109,120",1.35,64,"50,176",44.29,0.05,272.23,51.38,269.36,"418,824","401,408","826,724","1,623,194","1,605,632","1,625,880","1,613,954","17,626","1,605,696","1,611,984","1,588,760",41.41,40.81,"1,611,984","1,588,760"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","260,221",0.19,"246,833.62",0.17,"2,809,856",1.38,64,"50,176",4.55,0.05,274.05,51.38,274.05,"401,408","401,408","805,652","1,605,632","1,605,632","1,607,824","1,693,192",0,"1,605,632","1,611,650","1,590,718",41.48,40.94,"1,611,650","1,590,718"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","500,966",0.37,"487,399.22",0.58,"19,382,272",1.35,256,"4,096",17.82,0.09,247.07,115.61,312.41,"1,178,207","1,311,827","2,542,542","2,857,091","3,612,672","5,253,403","1,621,783","1,638,734","1,613,062","1,746,443","3,529,066",23.34,47.15,"1,746,443","3,529,066"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","143,040",0.11,"135,391.75",0.27,"2,506,752",1.32,256,"1,024",11.01,0.01,87.67,37.75,350.67,"73,728","294,912","372,574","294,912","1,179,648","1,182,104","296,546",0,"294,912","310,106","1,079,790",14.51,50.54,"310,106","1,079,790"
61,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"   13,    8,   36","  128,    1,    1","3,857,154",2.83,"3,789,449.13",2.26,"581,697,792",1.35,128,"3,744",94.46,1.41,500.10,115.61,40.87,"22,526,100","903,168","23,502,336","44,202,193","3,612,672","39,379,262","9,262,749","35,820,556","9,074,382","9,208,029","3,525,226",15.99,6.12,"9,208,029","3,525,226"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","417,060",0.31,"410,083.07",0.72,"20,114,432",1.34,256,"4,096",17.83,0.12,372.98,66.06,213.13,"1,378,030","971,773","2,352,659","3,612,672","2,064,384","2,069,684","3,740,249",0,"3,612,672","3,636,451","1,534,494",58.34,24.62,"3,636,451","1,534,494"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","260,864",0.19,"249,601.32",1.83,"31,109,120",1.35,64,"50,176",44.17,0.05,270.84,51.38,267.92,"419,049","401,408","827,514","1,623,393","1,605,632","1,625,646","1,614,304","17,546","1,605,696","1,606,230","1,516,633",41.18,38.88,"1,606,230","1,516,633"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","251,543",0.19,"246,296.88",0.17,"2,809,856",1.34,64,"50,176",4.71,0.05,273.72,51.38,273.72,"401,408","401,408","812,302","1,605,632","1,605,632","1,607,713","1,611,076",0,"1,605,632","1,606,434","1,516,014",42.77,40.36,"1,606,434","1,516,014"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","515,342",0.37,"490,601.22",0.58,"19,382,272",1.38,256,"4,096",17.33,0.09,246.57,115.61,311.65,"1,177,981","1,307,376","2,500,035","2,857,652","3,612,672","5,253,978","1,685,499","1,636,875","1,616,614","1,623,811","3,526,260",21.10,45.82,"1,623,811","3,526,260"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","146,318",0.11,"130,042.72",0.28,"2,506,752",1.34,256,"1,024",10.76,0.01,87.15,37.75,348.60,"73,728","294,912","371,716","294,912","1,179,648","1,181,686","302,558",0,"294,912","299,562","1,078,170",13.70,49.31,"299,562","1,078,170"
67,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"   13,    8,   36","  128,    1,    1","3,856,043",2.83,"3,790,013.38",2.26,"581,697,792",1.35,128,"3,744",94.43,1.41,500.11,115.61,40.87,"22,526,944","903,168","23,497,920","44,203,019","3,612,672","39,375,953","9,206,567","35,814,927","9,024,436","9,192,687","3,526,189",15.96,6.12,"9,192,687","3,526,189"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    8,  512,    1","  256,    1,    1","419,742",0.31,"406,356.38",0.73,"20,114,432",1.34,256,"4,096",17.76,0.12,372.44,66.06,212.82,"1,378,578","971,720","2,362,780","3,612,672","2,064,384","2,066,860","3,628,017",0,"3,612,672","3,658,713","1,609,851",58.37,25.68,"3,658,713","1,609,851"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","256,716",0.19,"250,906.76",1.82,"31,109,120",1.32,64,"50,176",44.89,0.05,269.56,51.38,266.63,"419,075","401,408","826,042","1,623,432","1,605,632","1,625,724","1,615,098","17,514","1,605,696","1,610,902","1,588,576",41.93,41.35,"1,610,902","1,588,576"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"50176,    1,    1","   64,    1,    1","251,580",0.19,"247,139.74",0.17,"2,809,856",1.33,64,"50,176",4.71,0.05,272.88,51.38,272.88,"401,408","401,408","804,745","1,605,632","1,605,632","1,608,635","1,616,890",0,"1,605,632","1,618,298","1,516,694",43.07,40.37,"1,618,298","1,516,694"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[22861] python3.8,"12544,    1,    1","  256,    1,    1","222,224",0.17,"217,028.57",1.41,"20,772,864",1.33,256,"12,544",34.58,0.05,321.17,38.54,231.72,"867,819","301,056","1,177,096","1,665,507","1,204,224","1,555,103","1,611,195","352,973","1,605,632","1,619,005","1,118,091",48.74,33.66,"1,619,005","1,118,091"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","154,056",0.11,"142,073.12",0.53,"5,128,192",1.41,256,"1,024",15.56,0.01,121.31,37.75,347.57,"156,605","294,912","455,140","411,652","1,179,648","1,227,910","408,173","45,744","401,716","404,965","1,083,236",17.59,47.05,"404,965","1,083,236"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","169,121",0.12,"154,130.06",0.24,"2,506,752",1.44,256,"1,024",9.30,0.01,80.51,37.75,322.04,"73,728","294,912","370,800","294,912","1,179,648","1,181,691","306,378",0,"294,912","308,582","1,078,356",12.22,42.69,"308,582","1,078,356"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"    4,    8,   36","  128,    1,    1","1,227,726",0.90,"1,173,906.66",2.24,"178,983,936",1.35,128,"1,152",91.37,0.45,500.31,37.75,41.79,"7,044,040","294,912","7,364,401","14,121,989","1,179,648","13,229,606","2,801,751","12,055,561","2,739,452","2,795,725","1,094,883",15.24,5.97,"2,795,725","1,094,883"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","123,142",0.09,"119,029.90",0.63,"5,120,000",1.29,256,"1,024",15.42,0.04,397.99,14.66,154.59,"294,912","199,999","497,439","1,179,648","458,319","460,599","1,185,153",0,"1,179,648","1,184,397","403,039",64.26,21.87,"1,184,397","403,039"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","62,312",0.05,"58,855.75",1.94,"7,777,280",1.24,64,"12,544",46.46,0.01,261.93,12.85,258.47,"105,559","100,352","207,965","406,736","401,408","408,735","412,078","5,221","401,472","403,696","312,727",42.98,33.29,"403,696","312,727"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","64,830",0.05,"54,669.25",0.19,"702,464",1.41,64,"12,544",4.58,0.01,280.12,12.85,280.12,"100,352","100,352","202,416","401,408","401,408","403,483","401,604",0,"401,408","403,492","311,783",41.66,32.19,"403,492","311,783"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","150,738",0.11,"142,753.34",0.53,"5,128,192",1.36,256,"1,024",15.92,0.01,119.73,37.75,342.92,"154,905","294,912","453,156","412,096","1,179,648","1,227,311","403,173","46,398","401,606","404,409","1,155,028",17.95,51.25,"404,409","1,155,028"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","154,788",0.12,"144,895.87",0.25,"2,506,752",1.33,256,"1,024",10.16,0.01,81.38,37.75,325.51,"73,728","294,912","372,290","294,912","1,179,648","1,182,099","305,634",0,"294,912","296,054","1,078,553",12.78,46.57,"296,054","1,078,553"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"    4,    8,   36","  128,    1,    1","1,229,134",0.90,"1,173,980.81",2.24,"178,983,936",1.35,128,"1,152",91.27,0.45,501.63,37.75,41.90,"7,043,498","294,912","7,376,529","14,121,442","1,179,648","13,239,627","2,787,765","12,054,579","2,734,588","2,783,303","1,094,722",15.16,5.96,"2,783,303","1,094,722"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","121,715",0.09,"117,067.06",0.64,"5,120,000",1.29,256,"1,024",15.61,0.04,401.65,14.66,156.03,"294,912","199,998","497,698","1,179,648","458,198","460,449","1,186,323",0,"1,179,648","1,186,137","398,592",65.14,21.89,"1,186,137","398,592"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","68,461",0.05,"58,952.62",1.94,"7,777,280",1.35,64,"12,544",42.31,0.01,260.14,12.85,256.65,"105,561","100,352","208,587","406,696","401,408","409,000","403,472","5,245","401,472","402,216","312,473",39.11,30.39,"402,216","312,473"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","58,125",0.05,"56,112.21",0.18,"702,464",1.25,64,"12,544",5.11,0.01,277.41,12.85,277.41,"100,352","100,352","206,126","401,408","401,408","403,438","402,324",0,"401,408","402,468","388,124",46.38,44.72,"402,468","388,124"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","146,575",0.11,"139,174.99",0.54,"5,128,192",1.32,256,"1,024",16.35,0.01,119.00,37.75,340.94,"155,240","294,912","459,827","411,930","1,179,648","1,228,323","415,719","45,758","401,746","406,665","1,086,514",18.55,49.57,"406,665","1,086,514"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","150,495",0.12,"147,781.53",0.25,"2,506,752",1.28,256,"1,024",10.46,0.01,80.67,37.75,322.66,"73,728","294,912","374,470","294,912","1,179,648","1,182,061","300,190",0,"294,912","308,420","1,155,243",13.70,51.30,"308,420","1,155,243"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"    4,    8,   36","  128,    1,    1","1,230,917",0.90,"1,173,273.32",2.24,"178,983,936",1.35,128,"1,152",91.16,0.45,499.92,37.75,41.76,"7,043,863","294,912","7,403,183","14,121,799","1,179,648","13,232,956","2,797,284","12,049,526","2,734,664","2,866,841","1,094,684",15.59,5.95,"2,866,841","1,094,684"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","123,470",0.10,"118,677.90",0.63,"5,120,000",1.27,256,"1,024",15.39,0.04,392.04,14.67,152.31,"294,912","199,761","497,263","1,179,648","458,116","460,290","1,185,121",0,"1,179,648","1,186,137","329,703",64.19,17.84,"1,186,137","329,703"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","62,903",0.05,"58,549.06",1.95,"7,777,280",1.25,64,"12,544",46.04,0.01,261.91,12.85,258.47,"105,541","100,352","208,581","406,716","401,408","408,842","406,722","5,246","401,472","402,120","312,459",42.36,32.92,"402,120","312,459"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","58,158",0.05,"54,717.74",0.19,"702,464",1.20,64,"12,544",5.11,0.01,266.01,12.85,266.01,"100,352","100,352","202,418","401,408","401,408","404,390","401,540",0,"401,408","401,836","312,007",46.26,35.92,"401,836","312,007"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","147,179",0.11,"139,118.56",0.54,"5,128,192",1.32,256,"1,024",16.30,0.01,118.66,37.75,339.96,"155,608","294,912","453,888","411,867","1,179,648","1,227,931","404,027","45,874","401,648","405,675","1,083,488",18.43,49.23,"405,675","1,083,488"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[22861] python3.8,"   16,   64,    1","   32,    8,    1","153,528",0.12,"143,420.34",0.26,"2,506,752",1.25,256,"1,024",10.25,0.01,77.22,37.75,308.89,"73,728","294,912","370,490","294,912","1,179,648","1,181,690","298,432",0,"294,912","295,246","1,079,862",12.86,47.03,"295,246","1,079,862"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[22861] python3.8,"    4,    8,   36","  128,    1,    1","1,230,283",0.90,"1,173,416.66",2.24,"178,983,936",1.35,128,"1,152",91.20,0.45,501.29,37.75,41.87,"7,043,884","294,912","7,341,798","14,121,813","1,179,648","13,230,814","2,867,073","12,049,273","2,735,774","2,816,115","1,171,947",15.32,6.38,"2,816,115","1,171,947"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[22861] python3.8,"    2,  512,    1","  256,    1,    1","121,450",0.09,"116,699.91",0.65,"5,120,000",1.29,256,"1,024",15.64,0.04,402.34,14.66,156.28,"294,912","199,974","497,777","1,179,648","458,297","462,466","1,189,705",0,"1,179,648","1,213,095","326,396",66.75,17.96,"1,213,095","326,396"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","66,731",0.05,"58,755.49",1.95,"7,777,280",1.31,64,"12,544",43.44,0.01,257.94,12.85,254.54,"105,534","100,352","208,368","406,693","401,408","408,883","401,696","5,195","401,472","401,480","312,402",40.06,31.17,"401,480","312,402"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"12544,    1,    1","   64,    1,    1","58,202",0.05,"54,668.57",0.19,"702,464",1.18,64,"12,544",5.10,0.01,262.02,12.85,262.02,"100,352","100,352","203,100","401,408","401,408","403,474","402,212",0,"401,408","401,828","311,539",46.22,35.83,"401,828","311,539"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[22861] python3.8," 3136,    1,    1","  256,    1,    1","55,186",0.04,"51,020.35",1.50,"5,193,216",1.26,256,"3,136",35.09,0.01,311.93,9.63,223.34,"220,839","75,264","300,511","418,397","301,056","446,208","403,441","136,281","401,408","401,445","216,768",48.53,26.21,"401,445","216,768"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[22861] python3.8,"16384,    1,    1","   32,    8,    1","224,119",0.17,"220,539.54",2.71,"40,686,206",1.35,256,"16,384",67.69,0.00,22.10,6.08,36.82,"88,771","117,777","211,982","114,094","190,076","241,189","103,600","47,932","100,352","107,270","22,599",3.21,0.68,"107,270","22,599"
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"  512,    1,    1","   64,    1,    1","6,170",0.00,"2,783.40",1.17,"221,184",1.23,64,512,13.97,0.00,76.72,0.52,105.03,"2,992","4,096","8,454","11,968","16,384","29,656",531,"11,456",512,"2,379","5,884",2.58,6.38,"2,379","5,884"
99,volta_sgemm_64x32_sliced1x4_tn,volta_sgemm_64x32_sliced1x4_tn,[22861] python3.8,"   64,    1,   11","  256,    1,    1","1,844,175",1.36,"1,767,327.91",1.19,"142,429,922",1.35,256,704,41.86,0.74,541.90,5.79,4.25,"9,136,446","45,760","9,258,352","23,049,006","180,928","11,494,101","13,357,397","11,300,357","13,291,384","13,351,845","167,477",48.49,0.61,"13,351,845","167,477"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"  512,    1,    1","   64,    1,    1","4,637",0.01,"2,313.04",0.18,"28,672",0.85,64,512,2.61,0.00,96.95,0.52,96.95,"4,096","4,096","9,168","16,384","16,384","18,275","16,388",0,"16,384","16,436",0,23.52,0,"16,436",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[22861] python3.8,"  272,    1,    1","  256,    1,    1","5,534",0.00,"3,277.40",1.30,"288,640",1.20,256,272,19.87,0.00,114.57,0.66,143.22,"4,096","5,120","11,054","16,384","20,480","22,413","16,600",0,"16,384","17,020","7,718",20.33,9.22,"17,020","7,718"
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"  512,    1,    1","   64,    1,    1","5,200",0.00,"3,742.04",0.87,"221,184",1.04,64,512,16.51,0.00,76.72,0.52,105.03,"2,992","4,096","8,462","11,968","16,384","29,652",709,"11,456",512,611,0,0.78,0,611,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[22861] python3.8,"   32,    1,    2","  256,    1,    1","213,022",0.16,"185,477.01",1.70,"21,469,239",1.32,256,64,58.71,0.09,532.84,1.05,6.58,"669,642","8,256","686,502","2,660,298","32,832","564,679","2,132,427","528,559","2,131,652","2,133,099","73,779",66.88,2.31,"2,133,099","73,779"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[22861] python3.8,"  512,    1,    1","   64,    1,    1","4,585",0.00,"2,289.84",0.18,"28,672",1.17,64,512,2.64,0.00,134.30,0.52,134.30,"4,096","4,096","9,278","16,384","16,384","17,723","16,476",0,"16,384","17,064",0,24.87,0,"17,064",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[22861] python3.8,"  272,    1,    1","  256,    1,    1","6,509",0.00,"3,472.34",1.22,"288,640",1.38,256,272,16.89,0.00,112.22,0.66,140.27,"4,096","5,120","11,266","16,384","20,480","23,417","16,600",0,"16,384","16,680",0,16.97,0,"16,680",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[22861] python3.8,"  125,    1,    1","   64,    1,    1","4,558",0.01,"2,397.76",0.33,"54,000",0.77,64,125,4.61,0.00,21.74,0.13,21.74,"1,586","1,000","4,667","4,000","4,000","9,026",147,"3,886",126,145,0,0.21,0,145,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[22861] python3.8,"    8,    1,    9","  256,    1,    1","102,503",0.08,"58,222.75",1.52,"6,029,760",1.35,256,72,32.31,0.02,273.76,1.15,15.33,"273,808","12,711","288,313","643,072","36,000","209,296","540,267","171,181","537,960","544,499","69,726",35.34,4.53,"544,499","69,726"
108,splitKreduce_kernel,"void splitKreduce_kernel<float, float, float>(cublasSplitKParams<T3>, const T1 *, const T2 *, T2 *, const T3 *, const T3 *)",[22861] python3.8,"  250,    1,    1","  128,    1,    1","7,263",0.01,"4,774.46",0.39,"125,000",1.10,128,250,6.60,0.00,194.17,0.13,19.42,"10,000","1,000","12,680","40,000","4,000","5,902","40,067",0,"40,000","40,013",0,36.95,0,"40,013",0
