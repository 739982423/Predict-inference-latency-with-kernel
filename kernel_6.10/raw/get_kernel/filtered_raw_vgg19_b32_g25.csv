ID,Function Name,Demangled Name,Process,Grid Size,Block Size,gpc__cycles_elapsed.max [cycle],gpu__time_duration.sum [msecond],sm__cycles_active.avg [cycle],sm__inst_executed.avg.per_cycle_active [inst/cycle],smsp__inst_executed.sum [inst],gpc__cycles_elapsed.avg.per_second [cycle/nsecond],launch__block_size,launch__grid_size,sm__throughput.avg.pct_of_peak_sustained_elapsed [%],l1tex__m_xbar2l1tex_read_bytes.sum [Gbyte],l1tex__m_xbar2l1tex_read_bytes.sum.per_second [Gbyte/second],l1tex__m_l1tex2xbar_write_bytes.sum [Mbyte],l1tex__m_l1tex2xbar_write_bytes.sum.per_second [Gbyte/second],lts__t_requests_srcunit_tex_op_read.sum [request],lts__t_requests_srcunit_tex_op_write.sum [request],lts__t_requests.sum [request],lts__t_sectors_srcunit_tex_op_read.sum [sector],lts__t_sectors_srcunit_tex_op_write.sum [sector],lts__t_sectors_lookup_hit.sum [sector],lts__t_sectors_lookup_miss.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_hit.sum [sector],lts__t_sectors_srcunit_tex_op_read_lookup_miss.sum [sector],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector],dram__bytes_read.sum.pct_of_peak_sustained_elapsed [%],dram__bytes_write.sum.pct_of_peak_sustained_elapsed [%],dram__sectors_read.sum [sector],dram__sectors_write.sum [sector]
0,computeOffsetsKernel,cudnn::gemm::computeOffsetsKernel(cudnn::gemm::ComputeOffsetsParams),[9453] python3.8,"  393,    1,    1","  128,    1,    1","5,089",0.00,721.56,2.49,"122,352",1.20,128,393,9.07,0,0,0.33,78.11,0,"3,199","3,905",0,"10,341","11,213",161,0,0,1,0,0.00,0,1,0
1,volta_scudnn_128x64_relu_small_nn_v1,volta_scudnn_128x64_relu_small_nn_v1,[9453] python3.8,"12544,    1,    1","  128,    1,    1","5,098,054",3.74,"1,196,183.19",2.35,"191,070,208",1.36,128,"12,544",15.95,0.13,33.67,411.04,110.05,"1,719,479","3,211,264","4,987,776","3,930,759","12,845,056","15,932,839","1,167,544","3,084,974","903,448","1,154,572","12,756,798",1.52,16.76,"1,154,572","12,756,798"
2,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"401408,    1,    1","   64,    1,    1","5,651,155",4.14,"1,327,341.18",2.76,"248,872,960",1.36,64,"401,408",16.22,0.41,99.27,411.04,99.24,"3,215,364","3,211,264","6,507,529","12,849,156","12,845,056","12,855,327","13,146,724","3,972","12,845,312","13,103,524","12,757,100",15.53,15.12,"13,103,524","12,757,100"
3,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"401408,    1,    1","   64,    1,    1","2,433,010",1.78,"569,790.46",0.58,"22,478,848",1.37,64,"401,408",3.89,0.41,231.19,411.04,231.19,"3,211,264","3,211,264","6,475,471","12,845,056","12,845,056","12,847,595","12,912,474",0,"12,845,056","13,000,036","12,756,062",35.79,35.12,"13,000,036","12,756,062"
4,generateWinogradTilesKernel,"void cudnn::winograd::generateWinogradTilesKernel<(int)0, float, float>(cudnn::winograd::GenerateWinogradTilesParams<T2, T3>)",[9453] python3.8,"    2,   16,    1","   32,    4,    1","5,153",0.01,737.06,0.90,"45,056",0.91,128,32,3.29,0.00,28.93,0.26,46.28,"2,199","2,048","4,766","5,120","8,192","12,451","4,620","1,127","4,608","4,692",0,6.11,0,"4,692",0
5,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,volta_scudnn_winograd_128x128_ldg1_ldg4_relu_tile148t_nt_v1,[9453] python3.8,"   64,   28,   14","  256,    1,    1","48,591,062",35.54,"11,287,740.94",1.60,"1,228,509,184",1.37,256,"25,088",13.73,5.26,147.89,411.04,11.57,"55,296,000","6,422,528","62,788,818","164,249,600","12,845,056","147,370,307","46,036,573","134,509,081","44,111,202","46,206,218","12,811,180",6.37,1.77,"46,206,218","12,811,180"
6,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"401408,    1,    1","   64,    1,    1","5,651,765",4.14,"1,327,431.07",2.76,"248,872,960",1.36,64,"401,408",16.22,0.41,99.25,411.04,99.22,"3,215,364","3,211,264","6,563,650","12,849,156","12,845,056","12,856,054","13,127,456","3,971","12,845,312","13,094,762","12,758,119",15.52,15.12,"13,094,762","12,758,119"
7,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"401408,    1,    1","   64,    1,    1","2,429,255",1.78,"568,534.51",0.58,"22,478,848",1.36,64,"401,408",3.90,0.41,230.59,411.04,230.59,"3,211,264","3,211,264","6,441,446","12,845,056","12,845,056","12,846,342","12,988,140",0,"12,845,056","13,025,156","12,756,406",35.91,35.17,"13,025,156","12,756,406"
8,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[9453] python3.8,"100352,    1,    1","  256,    1,    1","4,722,199",3.47,"1,108,948.82",2.20,"166,182,912",1.36,256,"100,352",12.96,0.43,125.46,308.28,88.93,"3,395,555","2,408,448","5,856,205","13,582,220","9,633,792","10,376,028","13,156,883","746,708","12,845,056","12,995,159","9,553,986",18.43,13.55,"12,995,159","9,553,986"
9,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   98,   64,    1","  256,    1,    1","1,837,391",1.36,"432,405.66",1.07,"31,410,176",1.35,256,"6,272",7.97,0.23,170.76,231.21,170.21,"4,048,507","1,806,336","5,916,708","7,248,757","7,225,344","12,323,736","3,285,081","5,100,507","3,211,264","3,353,877","7,206,612",12.23,26.27,"3,353,877","7,206,612"
10,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    2,   16,    1","   32,    8,    1","10,665",0.01,"1,552.54",0.74,"78,336",1.31,256,32,4.60,0.00,36.43,1.18,145.71,"2,304","9,216","12,456","9,216","36,864","37,771","9,260",0,"9,216","9,564","20,141",6.03,12.69,"9,564","20,141"
11,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"  196,    1,   36","  256,    1,    1","9,116,002",6.66,"2,148,175",2.14,"312,721,920",1.37,256,"7,056",19.04,0.46,68.63,462.42,69.40,"8,872,008","3,612,672","12,724,766","14,291,024","14,450,688","21,500,935","7,693,921","7,047,949","7,262,208","7,757,125","14,362,981",5.70,10.55,"7,757,125","14,362,981"
12,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   98,  128,    1","  256,    1,    1","1,969,836",1.45,"461,664",2.06,"64,727,040",1.36,256,"12,544",12.11,0.46,319.41,205.52,141.96,"3,612,672","3,211,264","6,861,857","14,450,688","6,422,528","6,423,980","14,518,969",0,"14,450,688","14,533,835","6,359,781",49.42,21.62,"14,533,835","6,359,781"
13,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"200704,    1,    1","   64,    1,    1","2,828,017",2.07,"663,665.15",2.76,"124,436,480",1.36,64,"200,704",16.21,0.21,99.27,205.52,99.14,"1,613,825","1,605,632","3,269,461","6,430,721","6,422,528","6,432,365","6,523,302","8,169","6,422,576","6,536,416","6,409,956",15.48,15.18,"6,536,416","6,409,956"
14,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"200704,    1,    1","   64,    1,    1","1,219,935",0.89,"285,373.93",0.58,"11,239,424",1.36,64,"200,704",3.88,0.21,229.99,205.52,229.99,"1,605,632","1,605,632","3,243,313","6,422,528","6,422,528","6,423,968","6,502,914",0,"6,422,528","6,475,812","6,333,941",35.55,34.78,"6,475,812","6,333,941"
15,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   98,  128,    1","  256,    1,    1","3,699,088",2.71,"868,176.68",1.06,"62,820,352",1.36,256,"12,544",7.91,0.46,171.35,462.42,170.80,"8,101,092","3,612,672","11,788,511","14,497,447","14,450,688","24,655,440","6,720,767","10,196,293","6,422,528","6,561,243","14,439,331",11.88,26.15,"6,561,243","14,439,331"
16,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    4,   16,    1","   32,    8,    1","14,690",0.01,"2,758.79",0.84,"156,672",1.31,256,64,6.70,0.00,52.81,2.36,211.26,"4,608","18,432","23,931","18,432","73,728","74,587","18,500",0,"18,432","18,932","56,915",8.62,25.91,"18,932","56,915"
17,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"  196,    1,   36","  256,    1,    1","16,434,224",12.03,"3,862,150.72",2.19,"575,995,392",1.36,256,"7,056",20.92,0.92,76.84,462.42,38.45,"18,040,004","3,612,672","22,038,824","28,878,020","14,450,688","28,842,766","15,183,385","14,390,668","14,524,416","15,285,277","14,366,210",6.23,5.86,"15,285,277","14,366,210"
18,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   98,  128,    1","  256,    1,    1","1,968,845",1.44,"461,477.21",2.06,"64,727,040",1.36,256,"12,544",12.12,0.46,320.17,205.52,142.30,"3,612,672","3,211,264","6,840,005","14,450,688","6,422,528","6,424,599","14,509,231",0,"14,450,688","14,538,989","6,434,724",49.46,21.89,"14,538,989","6,434,724"
19,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"200704,    1,    1","   64,    1,    1","2,827,592",2.07,"663,915.35",2.76,"124,436,480",1.36,64,"200,704",16.21,0.21,99.23,205.52,99.11,"1,613,826","1,605,632","3,308,089","6,430,722","6,422,528","6,438,068","6,529,438","8,170","6,422,580","6,609,116","6,334,427",15.66,15.00,"6,609,116","6,334,427"
20,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"200704,    1,    1","   64,    1,    1","1,212,124",0.89,"284,810.03",0.58,"11,239,424",1.36,64,"200,704",3.90,0.21,230.22,205.52,230.22,"1,605,632","1,605,632","3,263,419","6,422,528","6,422,528","6,423,798","6,435,618",0,"6,422,528","6,438,274","6,333,590",35.58,35.00,"6,438,274","6,333,590"
21,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[9453] python3.8,"50176,    1,    1","  256,    1,    1","2,358,305",1.73,"553,710.88",2.21,"83,091,456",1.36,256,"50,176",12.98,0.21,122.46,154.14,88.88,"2,190,901","1,204,224","3,449,514","6,639,326","4,816,896","5,034,824","6,502,717","213,228","6,422,528","6,424,083","4,737,214",18.25,13.45,"6,424,083","4,737,214"
22,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   32,  128,    1","  256,    1,    1","938,723",0.69,"219,332.40",1.23,"18,393,088",1.36,256,"4,096",8.88,0.12,167.37,115.61,167.53,"1,929,079","903,168","2,837,433","3,609,179","3,612,672","5,997,470","1,619,057","2,381,815","1,605,632","1,607,729","3,525,498",11.47,25.15,"1,607,729","3,525,498"
23,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    4,   32,    1","   32,    8,    1","25,219",0.02,"5,201.44",0.89,"313,344",1.18,256,128,7.81,0.00,55.69,4.72,222.74,"9,216","36,864","48,074","36,864","147,456","149,395","36,892",0,"36,864","37,396","58,575",9.92,15.54,"37,396","58,575"
24,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   49,    2,   36","  256,    1,    1","8,273,429",6.05,"1,936,718.91",2.19,"287,997,696",1.36,256,"3,528",20.78,0.46,76.32,231.21,38.19,"9,020,592","1,806,336","10,913,673","14,439,600","7,225,344","15,387,625","6,683,641","8,146,296","6,351,108","6,704,313","7,215,967",5.43,5.84,"6,704,313","7,215,967"
25,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,116,940",0.82,"261,173.69",2.23,"39,562,240",1.36,256,"8,192",13.06,0.23,281.84,102.76,125.26,"1,806,336","2,179,070","4,006,003","7,225,344","3,211,264","3,212,537","7,266,779",0,"7,225,344","7,301,881","3,150,049",43.79,18.89,"7,301,881","3,150,049"
26,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","1,415,395",1.04,"332,434.35",2.75,"62,218,240",1.36,64,"100,352",16.20,0.10,99.41,102.76,98.91,"819,188","802,816","1,630,161","3,227,636","3,211,264","3,233,880","3,326,988","16,370","3,211,296","3,275,750","3,122,997",15.50,14.78,"3,275,750","3,122,997"
27,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","605,913",0.45,"141,897.97",0.58,"5,619,712",1.35,64,"100,352",3.91,0.10,229.92,102.76,229.92,"802,816","802,816","1,613,831","3,211,264","3,211,264","3,212,681","3,250,158",0,"3,211,264","3,273,132","3,122,566",36.18,34.52,"3,273,132","3,122,566"
28,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,873,463",1.37,"437,940.59",1.24,"36,786,176",1.36,256,"8,192",8.90,0.23,168.28,231.21,168.42,"3,858,635","1,806,336","5,736,942","7,219,636","7,225,344","11,992,688","3,229,087","4,766,847","3,211,264","3,347,753","7,137,621",11.97,25.52,"3,347,753","7,137,621"
29,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    8,   32,    1","   32,    8,    1","45,392",0.04,"9,850.74",0.94,"626,688",1.24,256,256,8.68,0.00,64.79,9.44,259.15,"18,432","73,728","92,984","73,728","294,912","297,645","74,542",0,"73,728","76,568","205,951",11.29,30.37,"76,568","205,951"
30,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   49,    2,   36","  256,    1,    1","15,581,358",11.41,"3,655,211.87",2.22,"551,271,168",1.36,256,"3,528",21.95,0.92,81.02,231.21,20.26,"18,059,604","1,806,336","20,158,979","28,897,623","7,225,344","21,531,084","15,333,001","14,303,769","14,741,644","15,508,317","7,151,645",6.67,3.07,"15,508,317","7,151,645"
31,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,119,413",0.82,"262,129.51",2.22,"39,562,240",1.36,256,"8,192",13.03,0.23,281.28,102.76,125.02,"1,806,336","2,179,072","3,986,122","7,225,344","3,211,264","3,213,867","7,226,249",0,"7,225,344","7,227,881","3,149,529",43.25,18.85,"7,227,881","3,149,529"
32,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","1,415,850",1.04,"332,138.29",2.75,"62,218,240",1.36,64,"100,352",16.19,0.10,99.35,102.76,98.85,"819,187","802,816","1,654,508","3,227,635","3,211,264","3,229,156","3,272,670","16,364","3,211,296","3,279,422","3,123,051",15.51,14.77,"3,279,422","3,123,051"
33,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","605,391",0.45,"141,284.37",0.58,"5,619,712",1.35,64,"100,352",3.91,0.10,229.54,102.76,229.54,"802,816","802,816","1,637,943","3,211,264","3,211,264","3,212,534","3,224,476",0,"3,211,264","3,248,556","3,122,406",35.94,34.55,"3,248,556","3,122,406"
34,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,876,299",1.37,"438,609.35",1.23,"36,786,176",1.36,256,"8,192",8.89,0.23,168.13,231.21,168.28,"3,859,159","1,806,336","5,719,326","7,219,879","7,225,344","11,991,590","3,292,912","4,765,664","3,211,264","3,316,343","7,139,172",11.84,25.49,"3,316,343","7,139,172"
35,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    8,   32,    1","   32,    8,    1","46,235",0.04,"9,961.84",0.93,"626,688",1.31,256,256,8.51,0.00,67.27,9.44,269.08,"18,432","73,728","94,116","73,728","294,912","296,847","74,384",0,"73,728","75,444","205,899",10.94,29.85,"75,444","205,899"
36,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   49,    2,   36","  256,    1,    1","15,579,753",11.44,"3,659,193.91",2.22,"551,271,168",1.36,256,"3,528",21.96,0.92,80.80,231.21,20.20,"18,059,767","1,806,336","20,157,430","28,897,789","7,225,344","21,531,352","15,520,601","14,303,996","14,741,152","15,324,901","7,220,032",6.59,3.10,"15,324,901","7,220,032"
37,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,118,565",0.82,"261,950.65",2.22,"39,562,240",1.35,256,"8,192",13.04,0.23,280.57,102.76,124.70,"1,806,336","2,179,072","4,036,572","7,225,344","3,211,264","3,212,620","7,259,329",0,"7,225,344","7,267,129","3,221,418",43.52,19.29,"7,267,129","3,221,418"
38,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","1,415,827",1.04,"332,082.59",2.76,"62,218,240",1.36,64,"100,352",16.19,0.10,99.36,102.76,98.86,"819,192","802,816","1,655,360","3,227,642","3,211,264","3,229,390","3,267,064","16,361","3,211,296","3,228,860","3,122,452",15.28,14.77,"3,228,860","3,122,452"
39,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","610,610",0.44,"142,422.19",0.58,"5,619,712",1.37,64,"100,352",3.88,0.10,231.44,102.76,231.44,"802,816","802,816","1,615,067","3,211,264","3,211,264","3,212,753","3,287,890",0,"3,211,264","3,237,140","3,199,885",35.51,35.10,"3,237,140","3,199,885"
40,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,869,438",1.37,"438,161.99",1.23,"36,786,176",1.36,256,"8,192",8.92,0.23,168.53,231.21,168.65,"3,859,185","1,806,336","5,736,234","7,220,153","7,225,344","11,994,958","3,294,569","4,765,786","3,211,264","3,290,767","7,137,973",11.79,25.57,"3,290,767","7,137,973"
41,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    8,   32,    1","   32,    8,    1","45,709",0.04,"10,466.04",0.88,"626,688",1.30,256,256,8.61,0.00,67.27,9.44,269.08,"18,432","73,728","94,794","73,728","294,912","295,855","75,578",0,"73,728","73,766","205,272",10.81,30.08,"73,766","205,272"
42,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   49,    2,   36","  256,    1,    1","15,614,047",11.43,"3,656,345.62",2.22,"551,271,168",1.36,256,"3,528",21.92,0.92,80.92,231.21,20.23,"18,059,648","1,806,336","20,255,926","28,897,665","7,225,344","21,531,287","15,324,293","14,303,917","14,741,500","15,483,145","7,151,534",6.64,3.07,"15,483,145","7,151,534"
43,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"   32,  256,    1","  256,    1,    1","1,121,520",0.82,"261,707.29",2.22,"39,562,240",1.36,256,"8,192",13.01,0.23,281.00,102.76,124.89,"1,806,336","2,179,072","4,019,407","7,225,344","3,211,264","3,213,995","7,327,907",0,"7,225,344","7,239,783","3,149,821",43.24,18.81,"7,239,783","3,149,821"
44,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","1,416,802",1.04,"332,038.87",2.76,"62,218,240",1.36,64,"100,352",16.18,0.10,99.43,102.76,98.93,"819,180","802,816","1,664,357","3,227,629","3,211,264","3,230,217","3,261,550","16,363","3,211,296","3,284,808","3,159,388",15.53,14.94,"3,284,808","3,159,388"
45,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"100352,    1,    1","   64,    1,    1","606,818",0.45,"142,029.63",0.58,"5,619,712",1.36,64,"100,352",3.90,0.10,230.53,102.76,230.53,"802,816","802,816","1,614,547","3,211,264","3,211,264","3,212,769","3,242,308",0,"3,211,264","3,242,548","3,122,238",35.79,34.46,"3,242,548","3,122,238"
46,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[9453] python3.8,"25088,    1,    1","  256,    1,    1","1,166,303",0.86,"272,789.87",2.24,"41,545,728",1.36,256,"25,088",13.12,0.10,122.14,77.07,90.03,"1,409,479","602,112","2,052,987","3,268,107","2,408,448","2,842,518","3,345,761","432,673","3,211,264","3,233,635","2,370,368",18.57,13.61,"3,233,635","2,370,368"
47,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    8,  256,    1","  256,    1,    1","432,566",0.32,"101,400.22",1.41,"9,691,136",1.35,256,"2,048",10.30,0.05,144.22,57.80,181.03,"599,928","660,766","1,272,290","1,438,924","1,806,336","2,636,002","804,201","827,058","802,816","802,823","1,723,360",12.43,26.69,"802,823","1,723,360"
48,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"    8,   64,    1","   32,    8,    1","86,439",0.07,"19,746.09",0.93,"1,253,376",1.30,256,512,9.10,0.00,71.20,18.87,284.80,"36,864","147,456","185,170","147,456","589,824","591,089","148,068",0,"147,456","155,694","500,912",12.07,38.82,"155,694","500,912"
49,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   13,    4,   36","  256,    1,    1","8,283,164",6.08,"1,944,322.01",2.21,"292,511,232",1.36,256,"1,872",21.93,0.48,78.43,115.61,19.03,"9,470,577","903,168","10,460,281","14,889,585","3,612,672","16,400,539","2,751,521","12,786,274","2,399,016","2,779,937","3,526,463",2.25,2.85,"2,779,937","3,526,463"
50,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","632,520",0.47,"148,136.01",2.00,"20,114,432",1.35,256,"4,096",11.73,0.12,247.38,66.06,141.36,"1,393,100","968,070","2,385,797","3,612,672","2,064,384","2,067,333","3,624,263",0,"3,612,672","3,623,263","1,546,176",38.37,16.37,"3,623,263","1,546,176"
51,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","710,614",0.52,"166,160.25",2.75,"31,109,120",1.36,64,"50,176",16.13,0.05,100.10,51.38,98.47,"427,586","401,408","833,388","1,631,905","1,605,632","1,633,698","1,617,035","26,358","1,605,696","1,710,882","1,517,254",16.13,14.30,"1,710,882","1,517,254"
52,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","304,345",0.23,"71,217.81",0.58,"2,809,856",1.34,64,"50,176",3.89,0.05,227.56,51.38,227.56,"401,408","401,408","810,071","1,605,632","1,605,632","1,606,937","1,619,164",0,"1,605,632","1,631,002","1,517,333",35.89,33.39,"1,631,002","1,517,333"
53,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","864,345",0.63,"202,063.51",1.41,"19,382,272",1.36,256,"4,096",10.31,0.09,145.40,115.61,182.28,"1,200,444","1,323,758","2,537,038","2,881,736","3,612,672","5,270,859","1,620,285","1,657,577","1,605,632","1,608,559","3,601,550",12.46,27.91,"1,608,559","3,601,550"
54,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","168,954",0.13,"38,998.76",0.95,"2,506,752",1.31,256,"1,024",9.30,0.01,73.54,37.75,294.18,"73,728","294,912","373,301","294,912","1,179,648","1,181,084","304,812",0,"294,912","302,606","1,091,003",12.00,43.25,"302,606","1,091,003"
55,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   13,    4,   36","  256,    1,    1","16,091,831",11.81,"3,766,434.16",2.23,"571,903,488",1.36,256,"1,872",22.49,0.95,80.68,115.61,9.79,"18,944,490","903,168","20,157,263","29,782,506","3,612,672","28,621,959","6,159,905","24,863,113","5,424,332","6,168,493","3,549,499",2.57,1.48,"6,168,493","3,549,499"
56,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","634,738",0.47,"147,666.10",2.00,"20,114,432",1.35,256,"4,096",11.69,0.12,246.55,66.06,140.88,"1,392,598","968,167","2,364,557","3,612,672","2,064,384","2,065,795","3,628,961",0,"3,612,672","3,617,694","1,545,299",38.18,16.31,"3,617,694","1,545,299"
57,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","709,731",0.52,"166,219.06",2.75,"31,109,120",1.36,64,"50,176",16.15,0.05,100.27,51.38,98.63,"427,732","401,408","836,249","1,632,060","1,605,632","1,634,210","1,620,750","26,715","1,605,696","1,610,740","1,518,384",15.20,14.33,"1,610,740","1,518,384"
58,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","307,181",0.22,"70,552.74",0.59,"2,809,856",1.37,64,"50,176",3.85,0.05,229.08,51.38,229.08,"401,408","401,408","805,895","1,605,632","1,605,632","1,606,937","1,616,476",0,"1,605,632","1,606,714","1,516,685",35.03,33.07,"1,606,714","1,516,685"
59,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","862,437",0.64,"202,280.12",1.41,"19,382,272",1.35,256,"4,096",10.33,0.09,144.88,115.61,181.66,"1,201,593","1,322,174","2,545,709","2,881,423","3,612,672","5,271,471","1,649,369","1,656,885","1,605,632","1,741,073","3,601,378",13.52,27.97,"1,741,073","3,601,378"
60,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","166,548",0.13,"38,479.79",0.96,"2,506,752",1.31,256,"1,024",9.44,0.01,74.60,37.75,298.42,"73,728","294,912","369,548","294,912","1,179,648","1,181,654","301,044",0,"294,912","296,844","1,090,895",11.94,43.87,"296,844","1,090,895"
61,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   13,    4,   36","  256,    1,    1","16,045,071",11.82,"3,766,357.32",2.23,"571,903,488",1.36,256,"1,872",22.56,0.95,80.65,115.61,9.78,"18,944,698","903,168","20,172,488","29,782,714","3,612,672","28,607,436","6,183,285","24,931,229","5,363,816","5,990,521","3,549,623",2.50,1.48,"5,990,521","3,549,623"
62,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","635,936",0.47,"148,057.46",2.00,"20,114,432",1.36,256,"4,096",11.68,0.12,248.57,66.06,142.04,"1,392,378","968,518","2,363,327","3,612,672","2,064,384","2,065,657","3,675,081",0,"3,612,672","3,641,297","1,623,057",38.35,17.09,"3,641,297","1,623,057"
63,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","710,813",0.52,"166,270.54",2.75,"31,109,120",1.36,64,"50,176",16.13,0.05,99.99,51.38,98.38,"427,309","401,408","840,685","1,631,655","1,605,632","1,634,047","1,638,366","26,028","1,605,696","1,637,392","1,594,234",15.43,15.02,"1,637,392","1,594,234"
64,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","302,761",0.22,"70,801.54",0.58,"2,809,856",1.35,64,"50,176",3.91,0.05,230.30,51.38,230.30,"401,408","401,408","803,601","1,605,632","1,605,632","1,606,921","1,620,114",0,"1,605,632","1,617,228","1,594,025",35.78,35.27,"1,617,228","1,594,025"
65,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","862,760",0.64,"201,919.76",1.41,"19,382,272",1.35,256,"4,096",10.33,0.09,144.94,115.61,181.70,"1,201,188","1,324,996","2,570,991","2,881,625","3,612,672","5,269,850","1,738,199","1,659,147","1,605,632","1,621,561","3,529,539",12.59,27.40,"1,621,561","3,529,539"
66,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","166,040",0.13,"38,505.63",0.96,"2,506,752",1.32,256,"1,024",9.47,0.01,75.02,37.75,300.09,"73,728","294,912","373,002","294,912","1,179,648","1,181,998","298,016",0,"294,912","295,546","1,090,607",11.92,44.00,"295,546","1,090,607"
67,volta_sgemm_128x128_nn,volta_sgemm_128x128_nn,[9453] python3.8,"   13,    4,   36","  256,    1,    1","16,100,436",11.81,"3,765,224.38",2.23,"571,903,488",1.36,256,"1,872",22.49,0.95,80.72,115.61,9.79,"18,944,527","903,168","20,189,609","29,782,543","3,612,672","28,559,798","6,208,749","24,957,125","5,450,920","5,999,769","3,551,026",2.50,1.48,"5,999,769","3,551,026"
68,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    8,  512,    1","  256,    1,    1","633,517",0.47,"147,702.69",2.00,"20,114,432",1.35,256,"4,096",11.72,0.12,247.56,66.06,141.46,"1,391,852","967,910","2,361,145","3,612,672","2,064,384","2,065,724","3,652,341",0,"3,612,672","3,633,167","1,544,308",38.41,16.33,"3,633,167","1,544,308"
69,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","709,620",0.52,"166,239.44",2.75,"31,109,120",1.36,64,"50,176",16.16,0.05,100.20,51.38,98.58,"427,859","401,408","854,169","1,632,176","1,605,632","1,633,753","1,633,372","26,314","1,605,696","1,635,440","1,517,233",15.44,14.32,"1,635,440","1,517,233"
70,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"50176,    1,    1","   64,    1,    1","304,404",0.22,"71,829.66",0.58,"2,809,856",1.36,64,"50,176",3.89,0.05,229.31,51.38,229.31,"401,408","401,408","808,546","1,605,632","1,605,632","1,607,526","1,611,598",0,"1,605,632","1,635,340","1,590,320",35.98,34.99,"1,635,340","1,590,320"
71,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[9453] python3.8,"12544,    1,    1","  256,    1,    1","569,447",0.42,"132,323.38",2.31,"20,772,864",1.36,256,"12,544",13.44,0.05,125.62,38.54,92.31,"861,136","301,056","1,173,873","1,639,061","1,204,224","1,527,574","1,622,965","321,468","1,605,632","1,607,785","1,201,048",18.91,14.13,"1,607,785","1,201,048"
72,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","232,713",0.17,"53,699.34",1.40,"5,128,192",1.37,256,"1,024",10.28,0.01,78.21,37.75,222.66,"182,074","294,912","477,924","414,164","1,179,648","1,245,344","407,295","64,448","401,408","407,239","1,090,964",11.72,31.40,"407,239","1,090,964"
73,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","166,884",0.13,"39,105.21",0.94,"2,506,752",1.32,256,"1,024",9.41,0.01,74.89,37.75,299.56,"73,728","294,912","373,290","294,912","1,179,648","1,180,995","299,602",0,"294,912","299,926","1,090,689",12.04,43.78,"299,926","1,090,689"
74,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[9453] python3.8,"    4,    8,   36","  128,    1,    1","4,973,192",3.65,"1,162,934.76",2.26,"178,983,936",1.36,128,"1,152",22.41,0.45,124.15,37.75,10.35,"7,069,927","294,912","7,468,341","14,147,847","1,179,648","13,560,713","2,646,091","12,378,868","2,359,296","2,563,265","1,113,698",3.45,1.50,"2,563,265","1,113,698"
75,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","157,803",0.12,"36,233.85",2.08,"5,120,000",1.32,256,"1,024",12.00,0.04,317.11,14.66,123.17,"294,912","199,855","498,674","1,179,648","458,168","458,975","1,184,121",0,"1,179,648","1,182,129","351,078",50.19,14.90,"1,182,129","351,078"
76,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","180,103",0.13,"41,749.57",2.74,"7,777,280",1.34,64,"12,544",15.93,0.01,96.55,12.85,95.76,"103,540","100,352","209,070","404,624","401,408","405,968","409,170","3,251","401,472","414,672","313,022",15.42,11.64,"414,672","313,022"
77,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","79,452",0.06,"17,318.41",0.60,"702,464",1.37,64,"12,544",3.73,0.01,222.02,12.85,222.02,"100,352","100,352","202,762","401,408","401,408","402,302","403,216",0,"401,408","404,102","312,548",34.06,26.34,"404,102","312,548"
78,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","232,393",0.17,"53,719.32",1.40,"5,128,192",1.36,256,"1,024",10.29,0.01,77.73,37.75,221.32,"181,660","294,912","497,363","414,262","1,179,648","1,247,515","444,537","64,475","401,408","418,281","1,091,476",12.06,31.46,"418,281","1,091,476"
79,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","167,462",0.13,"38,709.03",0.95,"2,506,752",1.33,256,"1,024",9.39,0.01,75.21,37.75,300.85,"73,728","294,912","370,397","294,912","1,179,648","1,181,994","300,118",0,"294,912","295,342","1,090,674",11.81,43.63,"295,342","1,090,674"
80,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[9453] python3.8,"    4,    8,   36","  128,    1,    1","4,950,388",3.66,"1,162,890.43",2.26,"178,983,936",1.35,128,"1,152",22.49,0.45,123.78,37.75,10.32,"7,070,204","294,912","7,466,297","14,148,093","1,179,648","13,560,575","2,490,825","12,378,841","2,359,296","2,501,467","1,113,416",3.38,1.51,"2,501,467","1,113,416"
81,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","157,939",0.12,"36,143.59",2.08,"5,120,000",1.35,256,"1,024",11.99,0.04,323.37,14.66,125.58,"294,912","199,744","496,648","1,179,648","458,232","461,600","1,183,933",0,"1,179,648","1,180,507","350,122",50.07,14.85,"1,180,507","350,122"
82,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","180,123",0.13,"41,777.82",2.74,"7,777,280",1.34,64,"12,544",15.93,0.01,96.60,12.85,95.85,"103,652","100,352","208,718","404,726","401,408","405,772","416,232","3,146","401,472","406,910","312,727",15.14,11.63,"406,910","312,727"
83,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","79,692",0.06,"17,321.06",0.60,"702,464",1.38,64,"12,544",3.72,0.01,222.39,12.85,222.39,"100,352","100,352","201,882","401,408","401,408","402,302","402,790",0,"401,408","403,814","388,999",33.94,32.70,"403,814","388,999"
84,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","232,477",0.17,"52,654.13",1.43,"5,128,192",1.37,256,"1,024",10.29,0.01,78.37,37.75,223.16,"181,768","294,912","480,641","414,351","1,179,648","1,245,903","412,671","64,514","401,408","409,819","1,090,859",11.81,31.43,"409,819","1,090,859"
85,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","168,016",0.13,"38,512.54",0.96,"2,506,752",1.31,256,"1,024",9.35,0.01,73.95,37.75,295.80,"73,728","294,912","377,591","294,912","1,179,648","1,183,434","296,278",0,"294,912","302,754","1,090,763",12.07,43.49,"302,754","1,090,763"
86,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[9453] python3.8,"    4,    8,   36","  128,    1,    1","4,986,202",3.65,"1,162,620.10",2.26,"178,983,936",1.36,128,"1,152",22.36,0.45,123.87,37.75,10.33,"7,070,137","294,912","7,419,350","14,148,034","1,179,648","13,559,434","2,525,125","12,378,806","2,359,296","2,597,349","1,115,313",3.49,1.50,"2,597,349","1,115,313"
87,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","157,342",0.12,"36,549.40",2.06,"5,120,000",1.33,256,"1,024",12.03,0.04,320.30,14.66,124.37,"294,912","199,713","496,441","1,179,648","458,099","460,722","1,194,017",0,"1,179,648","1,194,961","351,083",50.88,14.95,"1,194,961","351,083"
88,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","180,087",0.13,"41,772.35",2.74,"7,777,280",1.35,64,"12,544",15.95,0.01,97.16,12.85,96.33,"103,569","100,352","207,807","404,652","401,408","410,430","405,800","3,237","401,472","405,852","312,675",15.10,11.63,"405,852","312,675"
89,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","76,945",0.06,"17,386.91",0.59,"702,464",1.33,64,"12,544",3.85,0.01,222.88,12.85,222.88,"100,352","100,352","201,340","401,408","401,408","402,419","403,846",0,"401,408","401,572","384,052",34.95,33.43,"401,572","384,052"
90,winogradForwardData4x4,"void cudnn::winograd_nonfused::winogradForwardData4x4<float, float>(cudnn::winograd_nonfused::WinogradDataParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","228,560",0.17,"53,870.04",1.40,"5,128,192",1.35,256,"1,024",10.46,0.01,78.27,37.75,222.87,"181,484","294,912","482,762","414,470","1,179,648","1,245,810","401,863","64,431","401,408","410,439","1,168,223",12.03,34.24,"410,439","1,168,223"
91,winogradForwardFilter4x4,"void cudnn::winograd_nonfused::winogradForwardFilter4x4<float, float>(cudnn::winograd_nonfused::WinogradFilterParams<T1, T2>)",[9453] python3.8,"   16,   64,    1","   32,    8,    1","166,286",0.13,"38,653.59",0.95,"2,506,752",1.31,256,"1,024",9.45,0.01,74.57,37.75,298.27,"73,728","294,912","371,367","294,912","1,179,648","1,180,633","295,330",0,"294,912","303,474","1,090,709",12.23,43.94,"303,474","1,090,709"
92,volta_sgemm_128x64_nn,volta_sgemm_128x64_nn,[9453] python3.8,"    4,    8,   36","  128,    1,    1","4,982,708",3.66,"1,162,556.81",2.26,"178,983,936",1.36,128,"1,152",22.38,0.45,123.83,37.75,10.33,"7,070,264","294,912","7,418,839","14,148,154","1,179,648","13,562,915","2,506,781","12,378,423","2,359,296","2,619,739","1,113,720",3.52,1.50,"2,619,739","1,113,720"
93,winogradForwardOutput4x4,"void cudnn::winograd_nonfused::winogradForwardOutput4x4<float, float>(cudnn::winograd_nonfused::WinogradOutputParams<T1, T2>)",[9453] python3.8,"    2,  512,    1","  256,    1,    1","157,150",0.12,"36,183.24",2.08,"5,120,000",1.33,256,"1,024",12.03,0.04,320.91,14.66,124.66,"294,912","199,706","504,112","1,179,648","458,170","459,453","1,184,889",0,"1,179,648","1,192,547","350,503",50.83,14.94,"1,192,547","350,503"
94,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::AddFunctor<float>, at::detail::Array<char *, (int)3>, OffsetCalculator<(int)2, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","179,945",0.13,"41,771.62",2.74,"7,777,280",1.34,64,"12,544",15.95,0.01,96.60,12.85,95.82,"103,539","100,352","207,235","404,614","401,408","406,485","436,858","3,092","401,472","418,408","314,385",15.57,11.70,"418,408","314,385"
95,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"12544,    1,    1","   64,    1,    1","77,153",0.06,"17,610.07",0.59,"702,464",1.28,64,"12,544",3.84,0.01,214.66,12.85,214.66,"100,352","100,352","202,146","401,408","401,408","403,231","402,654",0,"401,408","401,620","312,424",34.86,27.12,"401,620","312,424"
96,max_pool_forward_nchw,"void at::native::<unnamed>::max_pool_forward_nchw<float, float>(int, const T1 *, int, int, int, int, int, int, int, int, int, int, int, int, int, int, T1 *, long *)",[9453] python3.8," 3136,    1,    1","  256,    1,    1","139,051",0.11,"32,253.96",2.37,"5,193,216",1.32,256,"3,136",13.77,0.01,125.08,9.63,91.56,"219,708","75,264","294,941","412,070","301,056","433,478","403,693","129,915","401,408","411,893","223,949",19.84,10.79,"411,893","223,949"
97,adaptive_average_pool,"void at::native::<unnamed>::adaptive_average_pool<float>(T1 *, T1 *, int, int, int, int, long, long, long)",[9453] python3.8,"16384,    1,    1","   32,    8,    1","930,319",0.68,"218,585.46",2.71,"40,245,368",1.36,256,"16,384",16.07,0.00,5.33,6.09,8.91,"88,438","117,875","225,784","113,867","190,232","239,286","143,132","47,679","100,352","176,948","22,564",1.27,0.16,"176,948","22,564"
98,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"  512,    1,    1","   64,    1,    1","8,375",0.01,"1,702.13",1.91,"221,184",1.01,64,512,9.94,0.00,21.37,0.52,63.26,"1,448","4,096","6,092","5,792","16,384","26,864",851,"5,248",512,693,0,0.55,0,693,0
99,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[9453] python3.8,"   32,    1,    7","  256,    1,    1","4,566,253",3.35,"1,067,813.62",1.79,"130,044,672",1.36,256,224,16.62,0.52,154.59,3.68,1.10,"4,044,288","28,896","4,172,271","16,172,544","114,912","3,138,850","13,398,323","3,012,084","13,160,472","13,247,145","107,788",19.43,0.16,"13,247,145","107,788"
100,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"  512,    1,    1","   64,    1,    1","6,284",0.01,879.65,0.48,"28,672",0.98,64,512,1.92,0.00,82.33,0.52,82.33,"4,096","4,096","9,470","16,384","16,384","17,782","16,388",0,"16,384","16,388",0,17.49,0,"16,388",0
101,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[9453] python3.8,"   64,    1,    1","  256,    1,    1","8,478",0.01,"1,415.76",1.71,"164,864",1.29,256,64,7.26,0.00,80.31,0.66,100.39,"4,096","5,120","9,780","16,384","20,480","21,511","16,392",0,"16,384","16,392",0,12.91,0,"16,392",0
102,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"  512,    1,    1","   64,    1,    1","8,448",0.01,"1,514.34",2.15,"221,184",1.16,64,512,9.86,0.00,26.64,0.52,72.18,"1,416","4,096","6,050","5,664","16,384","26,946","2,743","5,088",512,539,0,0.43,0,539,0
103,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[9453] python3.8,"   32,    1,    3","  256,    1,    1","789,785",0.58,"183,983.57",1.75,"21,896,448",1.35,256,96,15.88,0.10,170.11,1.58,2.70,"1,108,480","12,384","1,130,296","3,102,446","49,248","1,147,376","2,272,011","1,089,855","2,195,592","2,264,561","119,518",19.21,1.01,"2,264,561","119,518"
104,vectorized_elementwise_kernel,"void at::native::vectorized_elementwise_kernel<(int)4, at::native::<unnamed>::clamp_min_scalar_kernel_impl(at::TensorIterator &, c10::Scalar)::[lambda() (instance 1)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>>(int, T2, T3)",[9453] python3.8,"  512,    1,    1","   64,    1,    1","8,391",0.01,918.53,0.46,"28,672",1.61,64,512,1.44,0.00,101.14,0.52,101.14,"4,096","4,096","9,026","16,384","16,384","17,221","16,388",0,"16,384","16,404",0,13.10,0,"16,404",0
105,fused_dropout_kernel_vec,"void at::native::<unnamed>::fused_dropout_kernel_vec<float, float, unsigned int, (int)1, (int)4>(at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<T1, T3>, at::cuda::detail::TensorInfo<unsigned char, T3>, T3, T2, at::PhiloxCudaState)",[9453] python3.8,"   64,    1,    1","  256,    1,    1","8,314",0.01,"1,361.04",1.78,"164,864",1.27,256,64,7.40,0.00,80.71,0.66,100.89,"4,096","5,120","9,850","16,384","20,480","21,511","16,392",0,"16,384","16,392",0,13.23,0,"16,392",0
106,unrolled_elementwise_kernel,"void at::native::unrolled_elementwise_kernel<at::native::copy_device_to_device(at::TensorIterator &, bool)::[lambda() (instance 2)]::operator ()() const::[lambda() (instance 8)]::operator ()() const::[lambda(float) (instance 1)], at::detail::Array<char *, (int)2>, OffsetCalculator<(int)1, unsigned int>, OffsetCalculator<(int)1, unsigned int>, at::native::memory::LoadWithoutCast, at::native::memory::StoreWithoutCast>(int, T1, T2, T3, T4, T5, T6)",[9453] python3.8,"  125,    1,    1","   64,    1,    1","5,078",0.00,668.97,1.19,"54,000",1.08,64,125,4.13,0.00,12.38,0.13,27.21,728,"1,000","2,257","1,820","4,000","6,545",179,"1,710",126,137,0,0.18,0,137,0
107,volta_sgemm_128x32_sliced1x4_tn,volta_sgemm_128x32_sliced1x4_tn,[9453] python3.8,"    8,    1,    2","  256,    1,    1","199,467",0.15,"45,309.59",1.74,"5,365,857",1.35,256,16,15.57,0.02,141.13,0.26,1.73,"165,387","2,789","172,568","652,155","8,016","129,870","537,745","120,194","532,386","532,837","1,070",17.90,0.04,"532,837","1,070"
